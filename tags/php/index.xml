<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on Strawbreey Notes</title>
    
    
    
    <link>/tags/php/</link>
    <description>Recent content in php on Strawbreey Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright©2019-2020 Strawbreey. All Rights Reserved</copyright>
    <lastBuildDate>Fri, 27 Nov 2020 15:23:47 +0800</lastBuildDate>
    
	<atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Php Install Mcrypt Extension</title>
      <link>/posts/php-install-mcrypt-extension/</link>
      <pubDate>Fri, 27 Nov 2020 15:23:47 +0800</pubDate>
      
      <guid>/posts/php-install-mcrypt-extension/</guid>
      <description>
        
          
          
          
        
        
        
          在 php 官网 下载 mcrypt 包 wget http://pecl.php.net/get/mcrypt-1.0.3.tgz tar xf mcrypt-1.0.3.tgz cd mcrypt-1.0.3 # 编译安装 mcrypt /usr/local/php/bin/phpize ./configure --with-php-config=/usr/local/php/bin/php-config &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install # php.ini 加上扩展 extension=mcrypt.so # 重启 php-fpm, /etc/init.d/php-fpm restart # php-fpm 默认位置 /usr/local/php72/sbin/php-fpm # php 编译安装的位置 参考资料 mcrypt php 7.2 安装 mcrypt 扩展
          
        
        </description>
    </item>
    
    <item>
      <title>Php Study Deploy</title>
      <link>/posts/php-study-deploy/</link>
      <pubDate>Fri, 20 Nov 2020 14:18:29 +0800</pubDate>
      
      <guid>/posts/php-study-deploy/</guid>
      <description>
        
          
          
          
        
        
        
          安装phpstudy 的时候会选一个www的路径，
          
        
        </description>
    </item>
    
    <item>
      <title>Php Swoole</title>
      <link>/posts/php-swoole/</link>
      <pubDate>Thu, 05 Nov 2020 08:17:58 +0800</pubDate>
      
      <guid>/posts/php-swoole/</guid>
      <description>
        
          
          
          
        
        
        
          Swoole 使 PHP 开发人员可以编写高性能高并发的 TCP、UDP、Unix Socket、HTTP、 WebSocket 等服务，让 PHP 不再局限于 Web 领域。Swoole4 协程的成熟
          
        
        </description>
    </item>
    
    <item>
      <title>Php Fastcgi</title>
      <link>/posts/php-fastcgi/</link>
      <pubDate>Tue, 27 Oct 2020 10:39:26 +0800</pubDate>
      
      <guid>/posts/php-fastcgi/</guid>
      <description>
        
          
          
          
        
        
        
          CGI CGI全称&amp;quot;通用网关接口&amp;rdquo;（Common Gateway Interface），用于HTTP服务器与其它机器上的程序服务通信交流的一
          
        
        </description>
    </item>
    
    <item>
      <title>Php Flush and Ob_flush</title>
      <link>/posts/php-flush-and-ob_flush/</link>
      <pubDate>Wed, 21 Oct 2020 17:45:52 +0800</pubDate>
      
      <guid>/posts/php-flush-and-ob_flush/</guid>
      <description>
        
          
          
          
        
        
        
          flush flush — 刷新输出缓冲 flush ( void ) : void 刷新PHP程序的缓冲，而不论PHP执行在何种情况下（CGI ，web服务器等等）。该函数将当前为止程序的所有输出
          
        
        </description>
    </item>
    
    <item>
      <title>Php Download</title>
      <link>/posts/php-download/</link>
      <pubDate>Wed, 21 Oct 2020 15:53:03 +0800</pubDate>
      
      <guid>/posts/php-download/</guid>
      <description>
        
          
          
          
        
        
        
          header(&#39;Access-Control-Allow-Origin: *&#39;); // header(&#39;location:http://www.baidu.com&#39;); // var_dump(&#39;66666&#39;); header(&amp;quot;Location: $file_path&amp;quot;); header(&#39;Content-type: application/octet-stream&#39;);//告诉浏览器这是一个文件 header(&#39;Content-Disposition: attachment; filename=&amp;quot;&#39;.$f
          
        
        </description>
    </item>
    
    <item>
      <title>Php Timeout</title>
      <link>/posts/php-timeout/</link>
      <pubDate>Tue, 20 Oct 2020 18:16:26 +0800</pubDate>
      
      <guid>/posts/php-timeout/</guid>
      <description>
        
          
          
          
        
        
        
          设置PHP脚本执行超时的时间有下面这样一些方法： php.ini 中限定程序的最长执行时间是 30 秒，这是由 php.ini 配置文件中的 max_execution_time 变量指定，倘若你有一个需要颇多时间才
          
        
        </description>
    </item>
    
    <item>
      <title>Php Exit and Die</title>
      <link>/posts/php-exit-and-die/</link>
      <pubDate>Tue, 20 Oct 2020 10:37:01 +0800</pubDate>
      
      <guid>/posts/php-exit-and-die/</guid>
      <description>
        
          
          
          
        
        
        
          PHP中exit()与die()的区别 PHP手册：die() Equivalent to exit()。 说明：die()和exit()都是中止脚本执行函数；其实exi
          
        
        </description>
    </item>
    
    <item>
      <title>Php Session</title>
      <link>/posts/php-session/</link>
      <pubDate>Mon, 12 Oct 2020 10:56:18 +0800</pubDate>
      
      <guid>/posts/php-session/</guid>
      <description>
        
          
          
          
        
        
        
          会话机制(Session）在PHP 中用于保持用户连续访问Web应用时的相关数据，有助于创建高度定制化的程序、增加站点的吸引力。 会话支持在 PHP 中
          
        
        </description>
    </item>
    
    <item>
      <title>Php Core</title>
      <link>/posts/php-core/</link>
      <pubDate>Mon, 12 Oct 2020 10:39:08 +0800</pubDate>
      
      <guid>/posts/php-core/</guid>
      <description>
        
          
          
          
        
        
        
          Zend API 随着时间不断向前进化，PHP 已变成为一种更健壮与普及的编程语言。随着 PHP 5 的推出，Zend Engine 2 (ZE2)也到来了。ZE2 带来了全新的面向对
          
        
        </description>
    </item>
    
    <item>
      <title>Php Find Php</title>
      <link>/posts/php-find-phpini/</link>
      <pubDate>Sat, 10 Oct 2020 10:05:08 +0800</pubDate>
      
      <guid>/posts/php-find-phpini/</guid>
      <description>
        
          
          
          
        
        
        
          Linux下查找及修改PHP配置文件ini的路径 一、查找PHP配置文件 说到查找，当然首先想到的是find命令。执行如下命令，即可查找到php
          
        
        </description>
    </item>
    
    <item>
      <title>Php Array Helper</title>
      <link>/posts/php-array-helper/</link>
      <pubDate>Thu, 24 Sep 2020 15:45:24 +0800</pubDate>
      
      <guid>/posts/php-array-helper/</guid>
      <description>
        
          
          
          
        
        
        
          获取值 getValue() 用原生PHP从一个对象、数组、或者包含这两者的一个复杂数据结构中获取数据是非常繁琐的。 你首先得使用 isset 检查 key 是否存在, 然后如果存在你就
          
        
        </description>
    </item>
    
    <item>
      <title>Php String</title>
      <link>/posts/php-string/</link>
      <pubDate>Thu, 24 Sep 2020 15:09:55 +0800</pubDate>
      
      <guid>/posts/php-string/</guid>
      <description>
        
          
          
          
        
        
        
          一个字符串 string 就是由一系列的字符组成，其中每个字符等同于一个字节。这意味着 PHP 只能支持 256 的字符集，因此不支持 Unicode 。详见字符串类型详解。 语法 一个字符
          
        
        </description>
    </item>
    
    <item>
      <title>Php Array Practice</title>
      <link>/posts/php-array-practice/</link>
      <pubDate>Thu, 24 Sep 2020 14:57:21 +0800</pubDate>
      
      <guid>/posts/php-array-practice/</guid>
      <description>
        
          
          
          
        
        
        
          合并两个二维数组 $arr1 = [] $arr2 = [] $
          
        
        </description>
    </item>
    
    <item>
      <title>Php Array Code Analysis</title>
      <link>/posts/php-array-code-analysis/</link>
      <pubDate>Thu, 24 Sep 2020 10:55:42 +0800</pubDate>
      
      <guid>/posts/php-array-code-analysis/</guid>
      <description>
        
          
          
          
        
        
        
          php中, 数组既是一个连续的数组，也是K-V映射的map 数组的定义 php 数组是一个字典，存储
          
        
        </description>
    </item>
    
    <item>
      <title>Php Common Code</title>
      <link>/posts/php-common-code/</link>
      <pubDate>Wed, 23 Sep 2020 19:53:01 +0800</pubDate>
      
      <guid>/posts/php-common-code/</guid>
      <description>
        
          
          
          
        
        
        
          分割字符串 $str = aaa,bbb,ccc explode(&amp;#39;,&amp;#39;, $str) // [aaa, bbb, ccc] 数组push array_push($arr, $new); 获取对应列 array_column($arr, &amp;#39;key&amp;#39;) array_column($arr, 1) array_diff 取差 $arr = [1,2,3] $newArr = [2,3,4] array_diff($arr, $newArr) // [1]
          
        
        </description>
    </item>
    
    <item>
      <title>Php Quotation Marks</title>
      <link>/posts/php-quotation-marks/</link>
      <pubDate>Wed, 23 Sep 2020 16:18:58 +0800</pubDate>
      
      <guid>/posts/php-quotation-marks/</guid>
      <description>
        
          
          
          
        
        
        
          在PHP中 单引号代表纯字符串，不论里面有什么东西，当字符串处理 $a = &amp;#39;abc&amp;#39;; ehco &amp;#39;i am $a&amp;#39;; // i am $a 双引号代表可以处理的字符串，如果字符串中有变量，那么，会
          
        
        </description>
    </item>
    
    <item>
      <title>Php Filter</title>
      <link>/posts/php-filter/</link>
      <pubDate>Wed, 23 Sep 2020 15:56:14 +0800</pubDate>
      
      <guid>/posts/php-filter/</guid>
      <description>
        
          
          
          
        
        
        
          过滤器函数 filter_has_var — 检测是否存在指定类型的变量 filter_id — 返回与某个特定名称的过滤器相关联的id filter_input_array — 获取一系列外部变量，并且可以通过过滤器处理它们 filter_input — 通过
          
        
        </description>
    </item>
    
    <item>
      <title>Php Variable Handle</title>
      <link>/posts/php-variable-handle/</link>
      <pubDate>Wed, 23 Sep 2020 15:36:50 +0800</pubDate>
      
      <guid>/posts/php-variable-handle/</guid>
      <description>
        
          
          
          
        
        
        
          boolval — 获取变量的布尔值 echo &amp;#39;0: &amp;#39;.(boolval(0) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;42: &amp;#39;.(boolval(42) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;0.0: &amp;#39;.(boolval(0.0) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;4.2: &amp;#39;.(boolval(4.2) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;&amp;#34;: &amp;#39;.(boolval(&amp;#34;&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;string&amp;#34;: &amp;#39;.(boolval(&amp;#34;string&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;0&amp;#34;: &amp;#39;.(boolval(&amp;#34;0&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;1&amp;#34;: &amp;#39;.(boolval(&amp;#34;1&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;[1, 2]: &amp;#39;.(boolval([1,
          
        
        </description>
    </item>
    
    <item>
      <title>Php Array Function</title>
      <link>/posts/php-array-function/</link>
      <pubDate>Wed, 23 Sep 2020 11:41:22 +0800</pubDate>
      
      <guid>/posts/php-array-function/</guid>
      <description>
        
          
          
          
        
        
        
          array_change_key_case: 将数组所有键名全大写或者小写 array_change_key_case ( array $array [, int $case = CASE_LOWER ] ) : array // 参数 array 需要操作的数组, case 可以在这里用两个常量，CASE_UPPER 或 CASE_LO
          
        
        </description>
    </item>
    
    <item>
      <title>Php Object</title>
      <link>/posts/php-object/</link>
      <pubDate>Wed, 23 Sep 2020 11:36:50 +0800</pubDate>
      
      <guid>/posts/php-object/</guid>
      <description>
        
          
          
          
        
        
        
          对象初始化 class foo { function do_foo() { echo &amp;#34;Doing foo.&amp;#34;; } } $bar = new foo; $bar-&amp;gt;do_foo(); 转换为对象 如果将一个对象转换成对象，它将不会有任何变化。如果其它任何类型的值被转换成对象，将会创建
          
        
        </description>
    </item>
    
    <item>
      <title>Php Array</title>
      <link>/posts/php-array/</link>
      <pubDate>Wed, 23 Sep 2020 10:09:47 +0800</pubDate>
      
      <guid>/posts/php-array/</guid>
      <description>
        
          
          
          
        
        
        
          An array in PHP is actually an ordered map. A map is a type that associates values to keys. This type is optimized for several different uses; it can be treated as an array, list (vector), hash table (an implementation of a map), dictionary, collection, stack, queue, and probably more. As array values can be other arrays, trees and multidimensional arrays are also possible. PHP 中的数组实
          
        
        </description>
    </item>
    
    <item>
      <title>Php Remote Procedure</title>
      <link>/posts/php-remote-procedure/</link>
      <pubDate>Wed, 16 Sep 2020 11:11:43 +0800</pubDate>
      
      <guid>/posts/php-remote-procedure/</guid>
      <description>
        
          
          
          
        
        
        
          php 请求远程 php请求远程url有两个方法fopen/file_get_contents 和 curl 1，fopen/file_get_contents
          
        
        </description>
    </item>
    
    <item>
      <title>Php Fpm</title>
      <link>/posts/php-fpm/</link>
      <pubDate>Mon, 07 Sep 2020 17:25:15 +0800</pubDate>
      
      <guid>/posts/php-fpm/</guid>
      <description>
        
          
          
          
        
        
        
          PHP-FPM是一个PHP的PHPFastCGI管理器。 PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载P
          
        
        </description>
    </item>
    
  </channel>
</rss>