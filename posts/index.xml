<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 如沐春风</title>
    <link>https://note.strawbreey.com/posts/</link>
    <description>Recent content in Posts on 如沐春风</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>strawbreey@qq.com (strawbreey)</managingEditor>
    <webMaster>strawbreey@qq.com (strawbreey)</webMaster>
    <copyright>© 2021 &lt;a href=&#34;https://github.com/miiiku/hugo-theme-kagome&#34;&gt;kagome&lt;/a&gt;.</copyright>
    <lastBuildDate>Thu, 26 Aug 2021 14:56:22 +0800</lastBuildDate><atom:link href="https://note.strawbreey.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gin Start</title>
      <link>https://note.strawbreey.com/posts/202107261428/</link>
      <pubDate>Mon, 26 Jul 2021 14:28:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107261428/</guid>
      <description>Gin 是一个用 Go (Golang) 编写的 HTTP web 框架。 它是一个类似于 martini 但拥有更好性能的 API 框架, 优于 httprouter，速度提高了近 40 倍。如果你需要极好的性能，使用</description>
    </item>
    
    <item>
      <title>Css Variables</title>
      <link>https://note.strawbreey.com/posts/202108261456/</link>
      <pubDate>Thu, 26 Aug 2021 14:56:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108261456/</guid>
      <description>CSS 变量 基本用法 声明一个自定义属性，属性名需要以两个减号（&amp;ndash;）开始，属性值则可以是任何有效的CSS值。和其他属性一样，自定义属性也</description>
    </item>
    
    <item>
      <title>Js ConcatAll</title>
      <link>https://note.strawbreey.com/posts/202108241426/</link>
      <pubDate>Tue, 24 Aug 2021 14:26:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108241426/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Php Urlencode</title>
      <link>https://note.strawbreey.com/posts/202108231542/</link>
      <pubDate>Mon, 23 Aug 2021 15:42:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108231542/</guid>
      <description>urlencode 根据官方文档： string urlencode(string $str ) 此函数便于将字符串编码并将其用于 URL 的请求部分，同时它还便于将变量传递给下一页。 返回字符串，此字符串中除了-_. 之外的</description>
    </item>
    
    <item>
      <title>Js Random</title>
      <link>https://note.strawbreey.com/posts/202108191649/</link>
      <pubDate>Thu, 19 Aug 2021 16:49:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191649/</guid>
      <description>第一种：使用randomString，e表示长度，默认32位 function randomString(e) { e = e || 32; var t = &amp;#34;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&amp;#34;, a = t.length, n = &amp;#34;&amp;#34;; for (i = 0; i &amp;lt; e; i++) n += t.charAt(Math.floor(Math.random() * a)); return n } alert(randomString(6)); 第二种：生</description>
    </item>
    
    <item>
      <title>Js Special Characters</title>
      <link>https://note.strawbreey.com/posts/202108191648/</link>
      <pubDate>Thu, 19 Aug 2021 16:48:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191648/</guid>
      <description>删除字符串中的特殊字符 const pattern=/[`~!@#$^&amp;amp;*()=|{}&amp;#39;:;&amp;#39;,\\\[\]&amp;lt;&amp;gt;\/</description>
    </item>
    
    <item>
      <title>Php Arr2string</title>
      <link>https://note.strawbreey.com/posts/202108191616/</link>
      <pubDate>Thu, 19 Aug 2021 16:16:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191616/</guid>
      <description>explode() 函数 explode() 函数可以基于字符串分隔符拆分字符串，即它将一个字符串根据分隔符拆分为若干个子串，然后将这些子串组合成数组并返回。其语法格式如下： explode($delimiter, $string</description>
    </item>
    
    <item>
      <title>Go Fmt</title>
      <link>https://note.strawbreey.com/posts/202108191303/</link>
      <pubDate>Thu, 19 Aug 2021 13:03:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191303/</guid>
      <description>$ go doc -help Usage of [go] doc: go doc go doc go doc [.] go doc [.][.] go doc [.][.]go doc [.] For more information run go help doc
Flags: -all show all documentation for package -c symbol matching honors case (paths not affected) -cmd show symbols with package docs even if package is a command -short one-line representation for each symbol -src show source code for symbol -u show unexported symbols as well as exported exit status 2</description>
    </item>
    
    <item>
      <title>Go Print</title>
      <link>https://note.strawbreey.com/posts/202108191257/</link>
      <pubDate>Thu, 19 Aug 2021 12:57:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191257/</guid>
      <description>Println 与 Printf 区别 Println 与Printf 都是fmt 包中的公共方法，在需要打印信息时需要用到这二个函数，那么这二个函数有什么区别呢？ Println: 可以打印出字符串，和变</description>
    </item>
    
    <item>
      <title>Go Array</title>
      <link>https://note.strawbreey.com/posts/202108191156/</link>
      <pubDate>Thu, 19 Aug 2021 11:56:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108191156/</guid>
      <description>数组是一个由固定长度的特定类型元素组成的序列，一个数组可以由零个或多个元素组成。因为数组的长度是固定的，因此在Go语言中很少直接使用数组。和</description>
    </item>
    
    <item>
      <title>Go Deploy Docker</title>
      <link>https://note.strawbreey.com/posts/202108182011/</link>
      <pubDate>Wed, 18 Aug 2021 20:11:05 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108182011/</guid>
      <description>使用Docker部署Go Web应用 为什么需要Docker？ 使用docker的主要目标是容器化。也就是为你的应用程序提供一致的环境，而不依赖于</description>
    </item>
    
    <item>
      <title>Go Deploy</title>
      <link>https://note.strawbreey.com/posts/202108182010/</link>
      <pubDate>Wed, 18 Aug 2021 20:10:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108182010/</guid>
      <description>部署Go语言项目的 N 种方法 独立部署 Go 语言支持跨平台交叉编译，也就是说我们可以在 Windows 或 Mac 平台下编写代码，并且将代码编译成能够在 Linux amd64 服务器上运行的</description>
    </item>
    
    <item>
      <title>Go Json</title>
      <link>https://note.strawbreey.com/posts/202108182001/</link>
      <pubDate>Wed, 18 Aug 2021 20:01:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108182001/</guid>
      <description>JSON（JavaScript 对象表示，JavaScript Object Notation）作为一种轻量级的数据交换格式1，在今天几乎占据了绝大多数的市</description>
    </item>
    
    <item>
      <title>Go Version</title>
      <link>https://note.strawbreey.com/posts/202108171533/</link>
      <pubDate>Tue, 17 Aug 2021 15:33:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108171533/</guid>
      <description>获取go 当前的版本号 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;runtime&amp;#34; ) func main() { fmt.Println(runtime.Version()) }</description>
    </item>
    
    <item>
      <title>Php Cache</title>
      <link>https://note.strawbreey.com/posts/202108171444/</link>
      <pubDate>Tue, 17 Aug 2021 14:44:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108171444/</guid>
      <description>PHP四大加速缓存器opcache，apc，xcache，eAccelerator与php解析的初步理解 php缓存器大概有这个几种： opca</description>
    </item>
    
    <item>
      <title>Linux Common Command</title>
      <link>https://note.strawbreey.com/posts/202108171335/</link>
      <pubDate>Tue, 17 Aug 2021 13:35:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108171335/</guid>
      <description>Linux 常用命令 1、ls命令 就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限) 查看目录信息</description>
    </item>
    
    <item>
      <title>Php Function</title>
      <link>https://note.strawbreey.com/posts/202108131951/</link>
      <pubDate>Fri, 13 Aug 2021 19:51:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108131951/</guid>
      <description>php函数式编程 $languages = array(&amp;#39;php&amp;#39;,&amp;#39;python&amp;#39;,&amp;#39;scala&amp;#39;); foreach ($languages as &amp;amp;$lang) $lang = strtoupper($lang); foreach ($languages as $lang) { // notice NO reference here! echo $lang.&amp;#34;\n&amp;#34;; } 输出: PHP PYTHON PYTHON $languages = array(&amp;#39;php&amp;#39;,&amp;#39;python&amp;#39;,&amp;#39;scala&amp;#39;); array_map(function (&amp;amp;$lang) { $lang = strtoupper($lang); }, $languages); foreach ($languages as $lang) { echo $lang.&amp;#34;\n&amp;#34;; } ?&amp;gt;函数式编程特点－没</description>
    </item>
    
    <item>
      <title>Sql Back Table</title>
      <link>https://note.strawbreey.com/posts/202108131052/</link>
      <pubDate>Fri, 13 Aug 2021 10:52:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108131052/</guid>
      <description>如何避免回表查询, 什么是索引覆盖? 数据库表结构： create table user ( id int primary key, name varchar(20), sex varchar(5), index(name) ) engine=innodb; -- 多查询了一个属性，为何检索过程完全不同 s? select id,name where name=&amp;#39;shenjian&amp;#39; select id,name,sex where name=&amp;#39;shenjian&amp;#39; 一、</description>
    </item>
    
    <item>
      <title>Sql High Performance</title>
      <link>https://note.strawbreey.com/posts/202108131013/</link>
      <pubDate>Fri, 13 Aug 2021 10:13:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108131013/</guid>
      <description>数据库就是用于执行查询的，提高查询速度是调优的最终目标。数据库的性能取决于许多因素，主要是查询、schema、配置项和硬件。 ● explain</description>
    </item>
    
    <item>
      <title>Sql Explain</title>
      <link>https://note.strawbreey.com/posts/202108121532/</link>
      <pubDate>Thu, 12 Aug 2021 15:32:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108121532/</guid>
      <description>在日常工作中，我们会有时会开慢查询去记录一些执行时间比较久的SQL语句，找出这些SQL语句并不意味着完事了，些时我们常常用到explain这</description>
    </item>
    
    <item>
      <title>Sql Join</title>
      <link>https://note.strawbreey.com/posts/202108121510/</link>
      <pubDate>Thu, 12 Aug 2021 15:10:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108121510/</guid>
      <description>SQL JOIN SQL join 用于根据两个或多个表中的列之间的关系，从这些表中查询数据 SELECT Persons.LastName, Persons.FirstName, Orders.OrderNo FROM Persons, Orders WHERE Persons.Id_P = Orders.Id_P INNER JOIN 在表中存在至少一个匹配时，INNER JOIN 关键字返回行</description>
    </item>
    
    <item>
      <title>Mysql Slow Query</title>
      <link>https://note.strawbreey.com/posts/202108121123/</link>
      <pubDate>Thu, 12 Aug 2021 11:23:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108121123/</guid>
      <description>开启 MySQL 慢查询日志 MySQL 提供了慢查询日志, 这个日志会记录所有执行时间超过 long_query_time（默认是 10s）的 SQL 及相关的信息。 mysql&amp;gt; show variables like &amp;#39;long_query_time&amp;#39;;</description>
    </item>
    
    <item>
      <title>Go Make</title>
      <link>https://note.strawbreey.com/posts/202108110959/</link>
      <pubDate>Wed, 11 Aug 2021 09:59:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108110959/</guid>
      <description>当我们想要在 Go 语言中初始化一个结构时，可能会用到两个不同的关键字 — make 和 new。因为它们的功能相似，所以初学者可能会对这两个关键字的作用感到困</description>
    </item>
    
    <item>
      <title>Linux Vscode Ccls</title>
      <link>https://note.strawbreey.com/posts/202108102054/</link>
      <pubDate>Tue, 10 Aug 2021 20:54:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108102054/</guid>
      <description>vscode ccls</description>
    </item>
    
    <item>
      <title>Linux Vscode</title>
      <link>https://note.strawbreey.com/posts/202108102052/</link>
      <pubDate>Tue, 10 Aug 2021 20:52:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108102052/</guid>
      <description>vs code 远程登录 设置设置服务器支持ssh-public-key登录 完成代理设置之后，还需要设置服务器支持ssh-public-key以及Allo</description>
    </item>
    
    <item>
      <title>Git Upgrade</title>
      <link>https://note.strawbreey.com/posts/202108102050/</link>
      <pubDate>Tue, 10 Aug 2021 20:50:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108102050/</guid>
      <description>Git版本升级 一、安装依赖包： 下载安装 libiconv-1.14.tar.gz wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz tar zxvf libiconv-1.14.tar.gz cd libiconv-1.14 ./configure --prefix=/usr/local/libiconv make &amp;amp;&amp;amp; make install yum安装依赖包 yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc gcc perl-ExtUtils-MakeMaker tcl xmlto # 注：asciidoc如果无法通</description>
    </item>
    
    <item>
      <title>Go Mod Init</title>
      <link>https://note.strawbreey.com/posts/202108091506/</link>
      <pubDate>Mon, 09 Aug 2021 15:06:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108091506/</guid>
      <description>go Mod Help $ go help mod Go mod provides access to operations on modules. Note that support for modules is built into all the go commands, not just &amp;#39;go mod&amp;#39;. For example, day-to-day adding, removing, upgrading, and downgrading of dependencies should be done using &amp;#39;go get&amp;#39;. See &amp;#39;go help modules&amp;#39; for an overview of module functionality. Usage: go mod &amp;lt;command&amp;gt; [arguments] The commands are: download download modules to local</description>
    </item>
    
    <item>
      <title>Yii Active Record</title>
      <link>https://note.strawbreey.com/posts/202108091425/</link>
      <pubDate>Mon, 09 Aug 2021 14:25:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108091425/</guid>
      <description>活动记录（Active Record Active Record 提供了一个面向对象的接口， 用以访问和操作数据库中的数据。Active Record 类与数据库表关联， Active Record 实例对应于该表的一行</description>
    </item>
    
    <item>
      <title>Yii Create Index</title>
      <link>https://note.strawbreey.com/posts/202108091126/</link>
      <pubDate>Mon, 09 Aug 2021 11:26:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108091126/</guid>
      <description>YII 创建索引 $this-&amp;gt;createIndex( &amp;#39;thing_pre_supplier_id&amp;#39;, &amp;#39;\{\{%thing\}\}&amp;#39;, array(&amp;#39;pre_supplier_id&amp;#39;) ); createIndex() public method Builds and executes a SQL statement for creating a new index. public void createIndex ( $name, $table, $columns, $unique = false ) $name string The name of the index. The name will be properly quoted by the method. $table string The table that the new index will be created for. The table name will be properly quoted</description>
    </item>
    
    <item>
      <title>Git Start</title>
      <link>https://note.strawbreey.com/posts/202108062029/</link>
      <pubDate>Fri, 06 Aug 2021 20:29:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108062029/</guid>
      <description>Quick setup — if you’ve done this kind of thing before or https://github.com/strawbreey/go-admin.git
Get started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line
echo &amp;#34;# go-admin&amp;#34; &amp;gt;&amp;gt; README.md git init git add README.md git commit -m &amp;#34;first commit&amp;#34; git branch -M main git remote add origin https://github.com/strawbreey/go-admin.git git push -u origin main …or push an existing repository from the command line</description>
    </item>
    
    <item>
      <title>Php Opcache</title>
      <link>https://note.strawbreey.com/posts/202108062011/</link>
      <pubDate>Fri, 06 Aug 2021 20:11:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108062011/</guid>
      <description>OPcache 通过将 PHP 脚本预编译的字节码存储到共享内存中来提升 PHP 的性能， 存储预编译字节码的好处就是 省去了每次加载和解析 PHP 脚本的开销。 PHP 5.5.0 及后续版本中已经</description>
    </item>
    
    <item>
      <title>Php Apc Cache</title>
      <link>https://note.strawbreey.com/posts/202108062007/</link>
      <pubDate>Fri, 06 Aug 2021 20:07:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108062007/</guid>
      <description>APC缓存简介 APC(Alternative PHP Cache)是一个PHP缓存。它在内存中存储PHP页面并且减少了硬盘的I/O。这对于性能的提升十分明显。你甚至可以在CPU</description>
    </item>
    
    <item>
      <title>Php Implode</title>
      <link>https://note.strawbreey.com/posts/202108061612/</link>
      <pubDate>Fri, 06 Aug 2021 16:12:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108061612/</guid>
      <description>implode (PHP 4, PHP 5, PHP 7, PHP 8) implode — 将一个一维数组的值转化为字符串 说明 implode(string $glue, array $pieces): string implode(array $pieces): string 用 glue 将一维数组的值连接为一个字符串。 注意: 因为历史原因，implod</description>
    </item>
    
    <item>
      <title>Sql Query Null</title>
      <link>https://note.strawbreey.com/posts/202108061510/</link>
      <pubDate>Fri, 06 Aug 2021 15:10:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108061510/</guid>
      <description>sql查询字段为null的值 判断使用 is null 就可以啦 -- 查询数据为空 SELECT * FROM BANK where BANK_CODE is null -- 查询数据不为空 SELECT * FROM BANK where BANK_CODE is not null</description>
    </item>
    
    <item>
      <title>Elk</title>
      <link>https://note.strawbreey.com/posts/202108061125/</link>
      <pubDate>Fri, 06 Aug 2021 11:25:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108061125/</guid>
      <description>ELK Stack 简介 ELK 不是一款软件，而是 Elasticsearch、Logstash 和 Kibana 三种软件产品的首字母缩写。这三者都是开源软件，通常配合使用，而且</description>
    </item>
    
    <item>
      <title>Git Worktree Prune</title>
      <link>https://note.strawbreey.com/posts/202108051754/</link>
      <pubDate>Thu, 05 Aug 2021 17:54:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051754/</guid>
      <description>参考资料 https://stackoverflow.com/questions/48346607/git-worktree-prune-what-it-does</description>
    </item>
    
    <item>
      <title>Go Tour</title>
      <link>https://note.strawbreey.com/posts/202108051727/</link>
      <pubDate>Thu, 05 Aug 2021 17:27:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051727/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Redis Single So Fast</title>
      <link>https://note.strawbreey.com/posts/202108051717/</link>
      <pubDate>Thu, 05 Aug 2021 17:17:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051717/</guid>
      <description>官方FAQ表示，因为Redis是基于内存的操作，CPU不是Redis的瓶颈，Redis的瓶颈最有可能是机器内存的大小或者网络带宽。既然单线程</description>
    </item>
    
    <item>
      <title>Php Rand</title>
      <link>https://note.strawbreey.com/posts/202108051617/</link>
      <pubDate>Thu, 05 Aug 2021 16:17:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051617/</guid>
      <description>PHP的三种内置函数生成随机数的方法 rand函数 rand() 函数可以不加任何参数，就可以生成随机整数。如果要设置随机数范围，可以在函数中设置 min 和 max 的值</description>
    </item>
    
    <item>
      <title>Go Select</title>
      <link>https://note.strawbreey.com/posts/202108051521/</link>
      <pubDate>Thu, 05 Aug 2021 15:21:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051521/</guid>
      <description>Go 语言 select 语句 Go 语言条件语句 Go 语言条件语句 select 是 Go 中的一个控制结构，类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。 select 随</description>
    </item>
    
    <item>
      <title>Go Time Second</title>
      <link>https://note.strawbreey.com/posts/202108051432/</link>
      <pubDate>Thu, 05 Aug 2021 14:32:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051432/</guid>
      <description>package main import &amp;#34;fmt&amp;#34; import &amp;#34;time&amp;#34; func main() { fmt.Println(time.Second * 100) } // time.Second time.Unit 时间单位 秒 // 1m40s</description>
    </item>
    
    <item>
      <title>Go Waitgroup</title>
      <link>https://note.strawbreey.com/posts/202108051427/</link>
      <pubDate>Thu, 05 Aug 2021 14:27:09 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051427/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://note.strawbreey.com/posts/202108051103/</link>
      <pubDate>Thu, 05 Aug 2021 11:03:05 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051103/</guid>
      <description>Kafka 快速开始 下载并解压 tar -xzf kafka_2.11-1.0.0.tgz cd kafka_2.11-1.0.0 启动服务器 Kafka 使用 ZooKeeper 如果你还没有ZooKeeper服务器，你需要先启动一个ZooKeeper服务器。 您可以通过与</description>
    </item>
    
    <item>
      <title>Js Parcel</title>
      <link>https://note.strawbreey.com/posts/202108051044/</link>
      <pubDate>Thu, 05 Aug 2021 10:44:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051044/</guid>
      <description>Parcel 是 Web 应用打包工具，适用于经验不同的开发者。 不同于 webpack 它利用多核处理提供了极快的速度，并且不需要任何配置。 首先通过 Yarn 或者 npm 安装 Parcel ： Yarn: yarn global add parcel-bundler npm:</description>
    </item>
    
    <item>
      <title>Js Function</title>
      <link>https://note.strawbreey.com/posts/202108051018/</link>
      <pubDate>Thu, 05 Aug 2021 10:18:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108051018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Json Yaml Toml</title>
      <link>https://note.strawbreey.com/posts/202108041506/</link>
      <pubDate>Wed, 04 Aug 2021 15:06:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108041506/</guid>
      <description>互联网的早期，一些非常聪明的家伙决定整合一种让每个系统都能理解的标准语言，并创造性地将其命名为标准通用标记语言 Standard Generalized Markup Language（简称 S</description>
    </item>
    
    <item>
      <title>Toml</title>
      <link>https://note.strawbreey.com/posts/202108041502/</link>
      <pubDate>Wed, 04 Aug 2021 15:02:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108041502/</guid>
      <description>A config file format for humans. TOML aims to be a minimal configuration file format that&amp;rsquo;s easy to read due to obvious semantics. TOML is designed to map unambiguously to a hash table. TOML should be easy to parse into data structures in a wide variety of languages. 宗旨 TOML 旨在成为一个语义明显且易于阅读的最小化</description>
    </item>
    
    <item>
      <title>Yii Rules</title>
      <link>https://note.strawbreey.com/posts/202108031531/</link>
      <pubDate>Tue, 03 Aug 2021 15:31:02 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108031531/</guid>
      <description>return array( // 必须填写 array(&amp;#39;email, username, password,agree,verifyPassword,verifyCode&amp;#39;, &amp;#39;required&amp;#39;), // 检查用户名是否重复 array(&amp;#39;email&amp;#39;,&amp;#39;unique&amp;#39;,&amp;#39;messa</description>
    </item>
    
    <item>
      <title>Yii Iso8601 Validator</title>
      <link>https://note.strawbreey.com/posts/202108031529/</link>
      <pubDate>Tue, 03 Aug 2021 15:29:40 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108031529/</guid>
      <description>Yii2 ISO8601 时间格式校验 [&amp;#39;endTime&amp;#39;, &amp;#39;date&amp;#39;, &amp;#39;format&amp;#39; =&amp;gt; &amp;#39;php:&amp;#39; . \DateTime::ATOM], datetime是错误的 - 正确的验证是date</description>
    </item>
    
    <item>
      <title>Go Import Declarations</title>
      <link>https://note.strawbreey.com/posts/202108022023/</link>
      <pubDate>Mon, 02 Aug 2021 20:23:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202108022023/</guid>
      <description>Import declarations An import declaration states that the source file containing the declaration depends on functionality of the imported package (§Program initialization and execution) and enables access to exported identifiers of that package. The import names an identifier (PackageName) to be used for access and an ImportPath that specifies the package to be imported.
ImportDecl = &amp;ldquo;import&amp;rdquo; ( ImportSpec | &amp;ldquo;(&amp;rdquo; { ImportSpec &amp;ldquo;;&amp;rdquo; } &amp;ldquo;)&amp;rdquo; ) . ImportSpec = [ &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Notes Add Github Actions</title>
      <link>https://note.strawbreey.com/posts/202107291442/</link>
      <pubDate>Thu, 29 Jul 2021 14:42:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107291442/</guid>
      <description>博客系统添加github actions name: CI on: push jobs: deploy: runs-on: ubuntu-18.04 steps: - name: Git checkout uses: actions/checkout@v2 - name: Update theme # (Optional)If you have the theme added as submodule, you can pull it and use the most updated version run: git submodule update --init --recursive - name: Setup hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#34;0.64.0&amp;#34; - name: Build #</description>
    </item>
    
    <item>
      <title>Json Schema</title>
      <link>https://note.strawbreey.com/posts/202107291428/</link>
      <pubDate>Thu, 29 Jul 2021 14:28:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107291428/</guid>
      <description>什么是Json Schema？ 以一个例子来说明 假设有一个web api，接受一个json请求，返回某个用户在某个城市关系最近的若干个好友。一个请</description>
    </item>
    
    <item>
      <title>Php Migrations</title>
      <link>https://note.strawbreey.com/posts/202107291035/</link>
      <pubDate>Thu, 29 Jul 2021 10:35:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107291035/</guid>
      <description>在开发和维护一个数据库驱动的应用程序时， 数据库的结构会像代码一样不断演变。 例如，在开发应用程序的过程中，会增加一张新表且必须得加进来； 在应用</description>
    </item>
    
    <item>
      <title>How to Know That SQL Is Slow</title>
      <link>https://note.strawbreey.com/posts/202107282021/</link>
      <pubDate>Wed, 28 Jul 2021 20:21:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107282021/</guid>
      <description>如何知道一条sql很慢 看索引的类型，普通索引允许被索引的数据列包含重复的值, 这时候等同于全表扫描。如果确认索引值唯一，建议加上limit 1 .</description>
    </item>
    
    <item>
      <title>Github Action</title>
      <link>https://note.strawbreey.com/posts/202107271138/</link>
      <pubDate>Tue, 27 Jul 2021 11:38:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107271138/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gitlab vs Github</title>
      <link>https://note.strawbreey.com/posts/202107271051/</link>
      <pubDate>Tue, 27 Jul 2021 10:51:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107271051/</guid>
      <description>GITLAB是在GITHUB的基础上搭建的项目管理平台。 GITHUB上的项目一般是公有化的，私有仓库需要付费。 而GITLAB是在GITHUB</description>
    </item>
    
    <item>
      <title>Js ToFixed</title>
      <link>https://note.strawbreey.com/posts/202107261117/</link>
      <pubDate>Mon, 26 Jul 2021 11:17:13 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107261117/</guid>
      <description>toFixed() 方法使用定点表示法来格式化一个数值。 function financial(x) { return Number.parseFloat(x).toFixed(2); } console.log(financial(123.456)); // expected output: &amp;#34;123.46&amp;#34; console.log(financial(0.004)); // expected output: &amp;#34;0.00&amp;#34; console.log(financial(&amp;#39;1.23e+5&amp;#39;)); // expected output: &amp;#34;123000.00&amp;#34; numObj.toFixed(digits) digits 小数点后数字的个数；介于 0 到 20 （包括）之间，实现环境可能</description>
    </item>
    
    <item>
      <title>Php Math</title>
      <link>https://note.strawbreey.com/posts/202107231327/</link>
      <pubDate>Fri, 23 Jul 2021 13:27:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231327/</guid>
      <description>Math 函数 abs — 绝对值 acos — 反余弦 acosh — 反双曲余弦 asin — 反正弦 asinh — 反双曲正弦 atan2 — 两个参数的反正切 atan — 反正切 atanh — 反双曲正切 base_convert — 在任意进制之间转换数字 bindec — 二</description>
    </item>
    
    <item>
      <title>Php Json</title>
      <link>https://note.strawbreey.com/posts/202107231325/</link>
      <pubDate>Fri, 23 Jul 2021 13:25:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231325/</guid>
      <description>JSON 函数 json_decode — 对 JSON 格式的字符串进行解码 json_encode — 对变量进行 JSON 编码 json_last_error_msg — Returns the error string of the last json_encode() or json_decode() call json_last_error — 返回最后发生的错误</description>
    </item>
    
    <item>
      <title>Php Pcre</title>
      <link>https://note.strawbreey.com/posts/202107231324/</link>
      <pubDate>Fri, 23 Jul 2021 13:24:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231324/</guid>
      <description>preg_filter — 执行一个正则表达式搜索和替换 preg_grep — 返回匹配模式的数组条目 preg_last_error_msg — Returns the error message of the last PCRE regex execution preg_last_error — 返回最后一个PCRE正则执行产生的错误代码 preg_match_all — 执行一个</description>
    </item>
    
    <item>
      <title>Php Funchand</title>
      <link>https://note.strawbreey.com/posts/202107231321/</link>
      <pubDate>Fri, 23 Jul 2021 13:21:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231321/</guid>
      <description>call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数 call_user_func — 把第一个参数作为回调函数调用 create_function — Create an anonymous (lambda-style) function forward_static_call_array — Call a static method and pass the arguments as array forward_static_call — Call a static method func_get_arg — 返</description>
    </item>
    
    <item>
      <title>Php Ctype</title>
      <link>https://note.strawbreey.com/posts/202107231320/</link>
      <pubDate>Fri, 23 Jul 2021 13:20:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231320/</guid>
      <description>ctype_alnum — 做字母和数字字符检测 ctype_alpha — 做纯字符检测 ctype_cntrl — 做控制字符检测 ctype_digit — 做纯数字检测 ctype_graph — 做可打印字符串检测，空格除外 ctype_lower — 做小写字符检测 ctype_print — 做可打印字符</description>
    </item>
    
    <item>
      <title>Php Classobj</title>
      <link>https://note.strawbreey.com/posts/202107231318/</link>
      <pubDate>Fri, 23 Jul 2021 13:18:09 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231318/</guid>
      <description>类/对象 函数的相关扩展 这些函数允许你获得类和对象实例的相关信息。 你可以获取对象所属的类名，也可以是它的成员属性和方法。 通过使用这些函数，你不</description>
    </item>
    
    <item>
      <title>Php Iterable</title>
      <link>https://note.strawbreey.com/posts/202107231315/</link>
      <pubDate>Fri, 23 Jul 2021 13:15:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231315/</guid>
      <description>Iterable是 PHP 7.1 中引入的一个伪类型。它接受任何 array 或实现了 Traversable 接口的对象。这些类型都能用 foreach 迭代， 也可以和 生成器 里的 yield from 一起使用。 可迭代对象</description>
    </item>
    
    <item>
      <title>Database Normalization</title>
      <link>https://note.strawbreey.com/posts/202107231101/</link>
      <pubDate>Fri, 23 Jul 2021 11:01:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231101/</guid>
      <description>数据库规范化，又称正规化、标准化，是数据库设计的一系列原理和技术，以减少数据库中数据冗余，增进数据的一致性。关系模型的发明者埃德加·科德最早</description>
    </item>
    
    <item>
      <title>Mysql Database Normalization</title>
      <link>https://note.strawbreey.com/posts/202107231101/</link>
      <pubDate>Fri, 23 Jul 2021 11:01:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231101/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Php Oop</title>
      <link>https://note.strawbreey.com/posts/202107231059/</link>
      <pubDate>Fri, 23 Jul 2021 10:59:07 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231059/</guid>
      <description>参考资料 类与对象</description>
    </item>
    
    <item>
      <title>Php Oop</title>
      <link>https://note.strawbreey.com/posts/202107231058/</link>
      <pubDate>Fri, 23 Jul 2021 10:58:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231058/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Guzzle</title>
      <link>https://note.strawbreey.com/posts/202107231049/</link>
      <pubDate>Fri, 23 Jul 2021 10:49:13 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231049/</guid>
      <description>Guzzle is a PHP HTTP client that makes it easy to send HTTP requests and trivial to integrate with web services. $client = new \GuzzleHttp\Client(); $response = $client-&amp;gt;request(&amp;#39;GET&amp;#39;, &amp;#39;https://api.github.com/repos/guzzle/guzzle&amp;#39;); echo $response-&amp;gt;getStatusCode(); // 200 echo $response-&amp;gt;getHeaderLine(&amp;#39;content-type&amp;#39;); // &amp;#39;application/json; charset=utf8&amp;#39; echo $response-&amp;gt;getBody(); // &amp;#39;{&amp;#34;id&amp;#34;: 1420053, &amp;#34;name&amp;#34;: &amp;#34;guzzle&amp;#34;, ...}&amp;#39; // Send an asynchronous request. $request = new \GuzzleHttp\Psr7\Request(&amp;#39;GET&amp;#39;, &amp;#39;http://httpbin.org&amp;#39;); $promise = $client-&amp;gt;sendAsync($request)-&amp;gt;then(function ($response) { echo &amp;#39;I completed! &amp;#39; . $response-&amp;gt;getBody(); }); $promise-&amp;gt;wait(); 参</description>
    </item>
    
    <item>
      <title>Yii Db Query</title>
      <link>https://note.strawbreey.com/posts/202107231031/</link>
      <pubDate>Fri, 23 Jul 2021 10:31:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107231031/</guid>
      <description>查询构建器建立在 Database Access Objects 基础之上，可让你创建 程序化的、DBMS无关的SQL语句。相比于原生的SQL语句，查询构建器可以帮你 写出可读性更强的SQ</description>
    </item>
    
    <item>
      <title>Pull Requests</title>
      <link>https://note.strawbreey.com/posts/202107221927/</link>
      <pubDate>Thu, 22 Jul 2021 19:27:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221927/</guid>
      <description>pull request 介绍 fork 别人的仓库 做一些 bug fix 发起 pull request 给原仓库</description>
    </item>
    
    <item>
      <title>Node Pm2</title>
      <link>https://note.strawbreey.com/posts/202107221923/</link>
      <pubDate>Thu, 22 Jul 2021 19:23:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221923/</guid>
      <description>PM2是node进程管理工具，可以利用它来简化很多node应用管理的繁琐任务，如性能监控、自动重启、负载均衡等，而且使用非常简单。 下面就对P</description>
    </item>
    
    <item>
      <title>Php Http</title>
      <link>https://note.strawbreey.com/posts/202107221714/</link>
      <pubDate>Thu, 22 Jul 2021 17:14:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221714/</guid>
      <description>用 file_get_contents 以get方式获取内容： $url = &amp;#39;https://wenda.shukaiming.com/&amp;#39;; echo file_get_contents($url); 方法2: 用fopen打开url, 以get方式获取内容： //r标识read，即标识只读 $fp = fopen($url, &amp;#39;r&amp;#39;); stream_get_meta_data($fp); while (!feof($fp)) { $body.= fgets($fp,</description>
    </item>
    
    <item>
      <title>Yii Request</title>
      <link>https://note.strawbreey.com/posts/202107221708/</link>
      <pubDate>Thu, 22 Jul 2021 17:08:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221708/</guid>
      <description>要获取请求参数，你可以调用 request 组件的 get() 方法和 post() 方法。 他们分别返回 $_GET 和 $_POST 的值。例如， $request = Yii::$app-&amp;gt;request; $get = $request-&amp;gt;get(); // 等价于: $get = $_GET; $id = $request-&amp;gt;get(&amp;#39;id&amp;#39;); // 等价于: $id = isset($_GET[&amp;#39;id&amp;#39;]) ? $_GET[&amp;#39;id&amp;#39;] : null; $id</description>
    </item>
    
    <item>
      <title>Php Fopen</title>
      <link>https://note.strawbreey.com/posts/202107221705/</link>
      <pubDate>Thu, 22 Jul 2021 17:05:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221705/</guid>
      <description>只要在 php.ini 文件中激活了 allow_url_fopen 选项，就可以在大多数需要用文件名作为参数的函数中使用 HTTP 和 FTP 的 URL 来代替文件名。同时，也可以在 include、includ</description>
    </item>
    
    <item>
      <title>Php Die</title>
      <link>https://note.strawbreey.com/posts/202107221558/</link>
      <pubDate>Thu, 22 Jul 2021 15:58:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221558/</guid>
      <description>PHP中die()和exit()区别 PHP手册：die() Equivalent to exit()。 说明：die()和exit()都是中止脚本执行函数；其实exit</description>
    </item>
    
    <item>
      <title>Php Echo</title>
      <link>https://note.strawbreey.com/posts/202107221554/</link>
      <pubDate>Thu, 22 Jul 2021 15:54:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221554/</guid>
      <description>echo 和 print 的区别 echo 是一个语言结构，使用的时候可以不用加括号，也可以加上括号： echo 或 echo()。 print 同样是一个语言结构，可以使用括号，也可以不使用括</description>
    </item>
    
    <item>
      <title>Phpdoc</title>
      <link>https://note.strawbreey.com/posts/202107221549/</link>
      <pubDate>Thu, 22 Jul 2021 15:49:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221549/</guid>
      <description>There are 3 ways to install phpDocumentor:
 Using phive (recommended) Using the PHAR (manual install) Via Docker Via Composer  Using Phive $ phive install --force-accept-unsigned phpDocumentor For more information about phive have a look at their website. Now you have phpDocumentor installed, it can be executed like this:
php tools/phpDocumentor
Using the PHAR Download the phar file from https://github.com/phpDocumentor/phpDocumentor/releases You can execute the phar like this: php phpDocumentor.phar</description>
    </item>
    
    <item>
      <title>Cloc</title>
      <link>https://note.strawbreey.com/posts/202107221511/</link>
      <pubDate>Thu, 22 Jul 2021 15:11:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221511/</guid>
      <description>代码统计工具 cloc 基本使用 cloc 是一个 Perl 语言实现的项目，用途就像它的名字全称：Count Lines of Code。 使用方法的话最简单的直接加上项目路径： 安装 # 1.</description>
    </item>
    
    <item>
      <title>Architecture Desigin</title>
      <link>https://note.strawbreey.com/posts/202107221444/</link>
      <pubDate>Thu, 22 Jul 2021 14:44:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221444/</guid>
      <description>架构设计 标准Web系统的架构分层</description>
    </item>
    
    <item>
      <title>Git Revert</title>
      <link>https://note.strawbreey.com/posts/202107221100/</link>
      <pubDate>Thu, 22 Jul 2021 11:00:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202107221100/</guid>
      <description>git revert git revert 撤销 某次操作，此次操作之前和之后的commit和history都会保留，并且把这次撤销 作为一次最新的提交 * git revert HEAD # 撤销前一次 commit * git revert</description>
    </item>
    
    <item>
      <title>Php Gc</title>
      <link>https://note.strawbreey.com/posts/202105061707/</link>
      <pubDate>Thu, 06 May 2021 17:07:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061707/</guid>
      <description>PHP 垃圾回收机制</description>
    </item>
    
    <item>
      <title>Php Help</title>
      <link>https://note.strawbreey.com/posts/202105061700/</link>
      <pubDate>Thu, 06 May 2021 17:00:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061700/</guid>
      <description>$ php -h Usage: php [options] [-f] &amp;lt;file&amp;gt; [--] [args...] php [options] -r &amp;lt;code&amp;gt; [--] [args...] php [options] [-B &amp;lt;begin_code&amp;gt;] -R &amp;lt;code&amp;gt; [-E &amp;lt;end_code&amp;gt;] [--] [args...] php [options] [-B &amp;lt;begin_code&amp;gt;] -F &amp;lt;file&amp;gt; [-E &amp;lt;end_code&amp;gt;] [--] [args...] php [options] -S &amp;lt;addr&amp;gt;:&amp;lt;port&amp;gt; [-t docroot] [router] php [options] -- [args...] php [options] -a -a Run as interactive shell -c &amp;lt;path&amp;gt;|&amp;lt;file&amp;gt; Look for php.ini file in this directory -n No configuration (ini) files will be used -d foo[=bar] Define INI entry foo with value &amp;#39;bar&amp;#39; -e Generate extended information for debugger/profiler -f &amp;lt;file&amp;gt; Parse and execute &amp;lt;file&amp;gt;.</description>
    </item>
    
    <item>
      <title>Php Syntax</title>
      <link>https://note.strawbreey.com/posts/202105061457/</link>
      <pubDate>Thu, 06 May 2021 14:57:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061457/</guid>
      <description>php 基本语法 php 标记 当解析一个文件时，PHP 会寻找起始和结束标记，也就是 ，这告诉 PHP 开始和停止解析二者之间的代码 &amp;lt;?php echo &amp;#39;if you want to serve PHP code in XHTML or XML documents, use these tags&amp;#39;;</description>
    </item>
    
    <item>
      <title>Php Ini</title>
      <link>https://note.strawbreey.com/posts/202105061453/</link>
      <pubDate>Thu, 06 May 2021 14:53:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061453/</guid>
      <description>配置文件（php.ini）在 PHP 启动时被读取。对于服务器模块版本的 PHP，仅在 web 服务器启动时读取一次。对于 CGI 和 CLI 版本，每次调用都会读取。 php.ini 的搜</description>
    </item>
    
    <item>
      <title>Php Strpos</title>
      <link>https://note.strawbreey.com/posts/202105061445/</link>
      <pubDate>Thu, 06 May 2021 14:45:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061445/</guid>
      <description>(PHP 4, PHP 5, PHP 7, PHP 8) strpos — 查找字符串首次出现的位置 strpos ( string $haystack , mixed $needle , int $offset = 0 ) : int 参数 haystack: 在该字符串中进行查找。 needle: Prior to PHP 8.0.0, if needle is not a string, it is converted to an integer and applied</description>
    </item>
    
    <item>
      <title>Php Start</title>
      <link>https://note.strawbreey.com/posts/202105061211/</link>
      <pubDate>Thu, 06 May 2021 12:11:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061211/</guid>
      <description>开启php server php -S demo.php.com:4200 打开链接，输入相对路径 &amp;lsquo;http://demo.php.com:4200/&#39; 当前默认路径是 http://demo.php.com:4200 访问phpinfo.php 文件 http://demo.php.com:4200/phpinfo.php</description>
    </item>
    
    <item>
      <title>Php Intro</title>
      <link>https://note.strawbreey.com/posts/202105061156/</link>
      <pubDate>Thu, 06 May 2021 11:56:38 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202105061156/</guid>
      <description>PHP 脚本主要用于以下三个领域： 服务端脚本。这是 PHP 最传统，也是最主要的目标领域。开展这项工作需要具备以下三点：PHP 解析器（CGI 或者服务器模块</description>
    </item>
    
    <item>
      <title>Quant</title>
      <link>https://note.strawbreey.com/posts/202104291956/</link>
      <pubDate>Thu, 29 Apr 2021 19:56:38 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104291956/</guid>
      <description>Quant 入门常用框架库 ccxt A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges https://github.com/quantopian/zipline Zipline, a Pythonic Algorithmic Trading Library quant-trading Python quantitative trading strategies including VIX Calculator, Pattern Recognition, Commodity Trading Advisor, Monte Carlo, Options Straddle, London Breakout, Heikin-Ashi, Pair Trading, RSI, Bollinger Bands, Parabolic SAR, Dual Thrust, Awesome, MACD Qlib Qlib is an AI-oriented quantitative</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>https://note.strawbreey.com/posts/202104291741/</link>
      <pubDate>Thu, 29 Apr 2021 17:41:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104291741/</guid>
      <description>Composer 不是一个包管理器。是的，它涉及 &amp;ldquo;packages&amp;rdquo; 和 &amp;ldquo;libraries&amp;rdquo;，但它在每个项目的基础上进行管理，在你项目的某个目录中（例</description>
    </item>
    
    <item>
      <title>Swagger Demo</title>
      <link>https://note.strawbreey.com/posts/202104291734/</link>
      <pubDate>Thu, 29 Apr 2021 17:34:05 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104291734/</guid>
      <description>创建文件 demo/customer.php</description>
    </item>
    
    <item>
      <title>Apizza</title>
      <link>https://note.strawbreey.com/posts/202104291722/</link>
      <pubDate>Thu, 29 Apr 2021 17:22:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104291722/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://note.strawbreey.com/posts/202104281729/</link>
      <pubDate>Wed, 28 Apr 2021 17:29:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104281729/</guid>
      <description>Python 编码 Python中默认的编码格式是 ASCII 格式，在没修改编码格式时无法正确打印汉字，所以在读取中文时会报错。 解决方法为只要在文件开头加入 # -- coding: UTF-8</description>
    </item>
    
    <item>
      <title>Readme</title>
      <link>https://note.strawbreey.com/posts/202104281458/</link>
      <pubDate>Wed, 28 Apr 2021 14:58:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104281458/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://note.strawbreey.com/posts/202104271729/</link>
      <pubDate>Tue, 27 Apr 2021 17:29:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104271729/</guid>
      <description>Python 简介 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。 Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 &amp;raquo;&amp;gt;</description>
    </item>
    
    <item>
      <title>File Download</title>
      <link>https://note.strawbreey.com/posts/202104221551/</link>
      <pubDate>Thu, 22 Apr 2021 15:51:07 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104221551/</guid>
      <description>文件下载 this.http.get(&amp;#39;web/file/downloads&amp;#39;, { params: { id: id }, responseType: &amp;#39;blob&amp;#39;, observe: &amp;#39;response&amp;#39; }).subscribe(resp =&amp;gt; { if (resp.headers.get(&amp;#39;Content-Disposition&amp;#39;).split(&amp;#39;;&amp;#39;)[1].split(&amp;#39;=&amp;#39;)[1]) { // 新建a标签 const eleLink = document.createElement(&amp;#39;a&amp;#39;); // 获取文件名 eleLink.download = resp.headers.get(&amp;#39;Content-Disposition&amp;#39;).split(&amp;#39;;&amp;#39;)[1].split(&amp;#39;=&amp;#39;)[1]; eleLink.style.display = &amp;#39;none&amp;#39;; // 字符内容转变成blob地址 eleLink.href = URL.createObjectURL(resp.body); // 触发点击 document.body.appendChild(eleLink); eleLink.click(); // 然后</description>
    </item>
    
    <item>
      <title>Php Proxy</title>
      <link>https://note.strawbreey.com/posts/202104081950/</link>
      <pubDate>Thu, 08 Apr 2021 19:50:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104081950/</guid>
      <description>composer create-project &amp;ndash;prefer-dist yiisoft/yii2-app-basic yii-ccxt You are running Composer with SSL/TLS protection disabled. Creating a &amp;ldquo;yiisoft/yii2-app-basic&amp;rdquo; project at &amp;ldquo;./yii-ccxt&amp;rdquo;
[Composer\Downloader\TransportException] curl error 60 while downloading https://packagist.phpcomposer.com/packages.json: SSL certificate problem: unable to get local issuer certificate
composer config -g repo.packagist composer https://packagist.phpcomposer.com
You are running Composer with SSL/TLS protection disabled.
v_guancli@v_guancli-PC0 MINGW64 ~/workspace $ composer config -g &amp;ndash; disable-tls false You are now running Composer with SSL/TLS protection enabled.
v_guancli@v_guancli-PC0 MINGW64 ~/workspace $ composer config -g repo.</description>
    </item>
    
    <item>
      <title>Css Vertical Center</title>
      <link>https://note.strawbreey.com/posts/202104081635/</link>
      <pubDate>Thu, 08 Apr 2021 16:35:20 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104081635/</guid>
      <description>垂直居中 line-height &amp;lt;div id=&amp;#34;father&amp;#34;&amp;gt; &amp;lt;span id=&amp;#34;child&amp;#34;&amp;gt; 子元素 &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; #father{ height:100px; line-height:100px; } &amp;lt;/style&amp;gt; flex &amp;lt;div id=&amp;#34;father&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;child&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; #father{ display: flex; align-items: center; } &amp;lt;/style&amp;gt; absolute &amp;lt;div id=&amp;#34;father&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;child&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; #father{ position:relative; } #child{ top:50%; transform: translateY(-50%); position:absolute; } &amp;lt;/style&amp;gt; 父元素设置了高度 &amp;lt;div id=&amp;#34;father&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;child&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; #father{</description>
    </item>
    
    <item>
      <title>Http X Forwarded For</title>
      <link>https://note.strawbreey.com/posts/202104070946/</link>
      <pubDate>Wed, 07 Apr 2021 09:46:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104070946/</guid>
      <description>X-Forwarded-For (XFF) 在客户端访问服务器的过程中如果需要经过HTTP代理或者负载均衡服务器，可以被用来获取最初发起请求的客户端的IP地址，这个消息首部成为事实</description>
    </item>
    
    <item>
      <title>Angular Renderer2</title>
      <link>https://note.strawbreey.com/posts/202104011730/</link>
      <pubDate>Thu, 01 Apr 2021 17:30:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104011730/</guid>
      <description></description>
    </item>
    
    <item>
      <title>No Non Null Assertion</title>
      <link>https://note.strawbreey.com/posts/202104011110/</link>
      <pubDate>Thu, 01 Apr 2021 11:10:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202104011110/</guid>
      <description>Disallows non-null assertions using the ! postfix operator.
Rationale Using non-null assertion cancels the benefits of the strict null checking mode.
Instead of assuming objects exist:
function foo(instance: MyClass | undefined) { instance!.doWork(); } Either inform the strict type system that the object must exist:
function foo(instance: MyClass) { instance.doWork(); } Or verify that the instance exists, which will inform the type checker:
function foo(instance: MyClass | undefined) { if (instance !</description>
    </item>
    
    <item>
      <title>Angular MarkAsTouched</title>
      <link>https://note.strawbreey.com/posts/202103311513/</link>
      <pubDate>Wed, 31 Mar 2021 15:13:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103311513/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cookies Http Only</title>
      <link>https://note.strawbreey.com/posts/202103291419/</link>
      <pubDate>Mon, 29 Mar 2021 14:19:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103291419/</guid>
      <description>1.什么是HttpOnly? 如果cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XS</description>
    </item>
    
    <item>
      <title>Angular Upgrade</title>
      <link>https://note.strawbreey.com/posts/202103261747/</link>
      <pubDate>Fri, 26 Mar 2021 17:47:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103261747/</guid>
      <description>Angular 升级 升级 angular-cli 到最新你版本 npm install -g @angular/cli@latest 更新项目中angular相关的包。 ng update --all 更新前 无论在那里使用了 Renderer，现在都使用 Renderer2 如果使用了旧版的</description>
    </item>
    
    <item>
      <title>Yarn Help</title>
      <link>https://note.strawbreey.com/posts/202103261742/</link>
      <pubDate>Fri, 26 Mar 2021 17:42:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103261742/</guid>
      <description>$ yarn -h
Usage: yarn [command] [flags]
Displays help information.
Options:
--cache-folder &amp;lt;path&amp;gt; specify a custom folder that must be used to store the yarn cache --check-files install will verify file tree of packages for consistency --cwd &amp;lt;cwd&amp;gt; working directory to use (default: C:\Users\v_guancli\workspace\cpm\frontend) --disable-pnp disable the Plug&#39;n&#39;Play installation --emoji [bool] enable emoji in output (default: false) --enable-pnp, --pnp enable the Plug&#39;n&#39;Play installation --flat only allow one version of a package --focus Focus on a single workspace by installing remote copies of its sibling workspaces.</description>
    </item>
    
    <item>
      <title>Linux Crontab</title>
      <link>https://note.strawbreey.com/posts/202103251430/</link>
      <pubDate>Thu, 25 Mar 2021 14:30:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103251430/</guid>
      <description>cron介绍 我们经常使用的是crontab命令是cron table的简写，它是cron的配置文件，也可以叫它作业列表，我们可以在以下文件夹内</description>
    </item>
    
    <item>
      <title>Php Time Task</title>
      <link>https://note.strawbreey.com/posts/202103251422/</link>
      <pubDate>Thu, 25 Mar 2021 14:22:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103251422/</guid>
      <description>PHP 定时任务 固定执行文件脚本 # PHP 定时任务 * */1 * * * /bin/sh /home/wwwroot/php-script.sh php-script.sh 脚本 #!/bin/sh php /home/wwwroot/wkr2019.com/Public/cli.php /cli/task/exec &amp;gt;&amp;gt; /home/wwwlogs/sh.log; php /home/wwwroot/op.cheduo.com/think task &amp;gt;&amp;gt; /home/wwwlogs/sh.log; php 文件代码 &amp;lt;?php namespace Cli\Controller; use Think\Controller; class TaskController extends Controller { public function _initialize() { // 判断执行环境 if(PHP_SAPI != &amp;#39;cli&amp;#39;){ exit(&amp;#39;deny!&amp;#39;);</description>
    </item>
    
    <item>
      <title>Git Style Guide</title>
      <link>https://note.strawbreey.com/posts/202103241541/</link>
      <pubDate>Wed, 24 Mar 2021 15:41:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103241541/</guid>
      <description>Branches 选择简短和具有描述性的名字来命名分支： # 好 $ git checkout -b oauth-migration # 不好，过于模糊 $ git checkout -b login_fix 来自外部的标识符也适合用作分支的名字，例如来自 Github 的 Issue 序号。 #</description>
    </item>
    
    <item>
      <title>Git Merge Noff</title>
      <link>https://note.strawbreey.com/posts/202103241521/</link>
      <pubDate>Wed, 24 Mar 2021 15:21:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103241521/</guid>
      <description>git 合并分支默认是fast forword(快速合并的模式) 缺点是，不能显示历史信息，不知道那些分支曾经合并过。 no-ff (no-fast-forward) ，这种方式会在合并的同时生成</description>
    </item>
    
    <item>
      <title>Golint</title>
      <link>https://note.strawbreey.com/posts/202103191600/</link>
      <pubDate>Fri, 19 Mar 2021 16:00:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103191600/</guid>
      <description>Golint 规则开发实践 函数名称禁止超过35个字符</description>
    </item>
    
    <item>
      <title>Swagger Php Start</title>
      <link>https://note.strawbreey.com/posts/202103171107/</link>
      <pubDate>Wed, 17 Mar 2021 11:07:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103171107/</guid>
      <description>安装yii 使用composer 下载归档文件 安装composer https://getcomposer.org/doc/ linux / Mac OS X curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer Window Composer-Setup.exe composer 常用命令 # 更新composer composer self-update composer 设置代理</description>
    </item>
    
    <item>
      <title>Git Branch</title>
      <link>https://note.strawbreey.com/posts/202103161124/</link>
      <pubDate>Tue, 16 Mar 2021 11:24:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103161124/</guid>
      <description>$ git version git version 2.18.0.windows.1 $ git branch -help usage: git branch [&amp;lt;options&amp;gt;] [-r | -a] [--merged | --no-merged] or: git branch [&amp;lt;options&amp;gt;] [-l] [-f] &amp;lt;branch-name&amp;gt; [&amp;lt;start-point&amp;gt;] or: git branch [&amp;lt;options&amp;gt;] [-r] (-d | -D) &amp;lt;branch-name&amp;gt;... or: git branch [&amp;lt;options&amp;gt;] (-m | -M) [&amp;lt;old-branch&amp;gt;] &amp;lt;new-branch&amp;gt; or: git branch [&amp;lt;options&amp;gt;] (-c | -C) [&amp;lt;old-branch&amp;gt;] &amp;lt;new-branch&amp;gt; or: git branch [&amp;lt;options&amp;gt;] [-r | -a] [--points-at] or: git branch [&amp;lt;options&amp;gt;] [-r | -a]</description>
    </item>
    
    <item>
      <title>Nginx Location Root Alias Different</title>
      <link>https://note.strawbreey.com/posts/202103151658/</link>
      <pubDate>Mon, 15 Mar 2021 16:58:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202103151658/</guid>
      <description>nginx指定文件路径有两种方式root和alias，指令的使用方法和作用域： [root] 语法：root path 默认值：root html 配置段：http、serv</description>
    </item>
    
    <item>
      <title>Golang Developer Roadmap</title>
      <link>https://note.strawbreey.com/posts/202102251959/</link>
      <pubDate>Thu, 25 Feb 2021 19:59:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102251959/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Go Introduce</title>
      <link>https://note.strawbreey.com/posts/202102251925/</link>
      <pubDate>Thu, 25 Feb 2021 19:25:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102251925/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Standard Library</title>
      <link>https://note.strawbreey.com/posts/202102251913/</link>
      <pubDate>Thu, 25 Feb 2021 19:13:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102251913/</guid>
      <description>Go语言标准库包 bufio 带缓冲的 I/O 操作 bytes 实现字节操作 container 封装堆、列表和环形列表等容器 crypto 加密算法 database 数据库驱动和接口 debug 各种调试文件格式访问及调试功能 encoding 常</description>
    </item>
    
    <item>
      <title>Change Detection in Angular</title>
      <link>https://note.strawbreey.com/posts/202102201127/</link>
      <pubDate>Sat, 20 Feb 2021 11:27:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102201127/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ExpressionChangedAfterItHasBeenCheckedError</title>
      <link>https://note.strawbreey.com/posts/202102201125/</link>
      <pubDate>Sat, 20 Feb 2021 11:25:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102201125/</guid>
      <description>ExpressionChangedAfterItHasBeenCheckedError: 是 Angular 的警告机制，防止由于模型数据（model data）与视图 UI 不一致，导致页面上存在错误或过时的数据展示给用户。</description>
    </item>
    
    <item>
      <title>Colon Expected Error</title>
      <link>https://note.strawbreey.com/posts/202102191057/</link>
      <pubDate>Fri, 19 Feb 2021 10:57:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202102191057/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Null and Undefined</title>
      <link>https://note.strawbreey.com/posts/202101271419/</link>
      <pubDate>Wed, 27 Jan 2021 14:19:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101271419/</guid>
      <description>null、undefined和未声明变量之间有什么区别？如何检查判断这些状态值？ 当你没有提前使用var、let或const声明变量，就为一个</description>
    </item>
    
    <item>
      <title>Js StopPropagation</title>
      <link>https://note.strawbreey.com/posts/202101271046/</link>
      <pubDate>Wed, 27 Jan 2021 10:46:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101271046/</guid>
      <description>$event.stopPropagation()</description>
    </item>
    
    <item>
      <title>Js Interview AMD and CommonJS</title>
      <link>https://note.strawbreey.com/posts/202101271033/</link>
      <pubDate>Wed, 27 Jan 2021 10:33:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101271033/</guid>
      <description>说说你对 AMD 和 CommonJS 的了解。 它们都是实现模块体系的方式，直到 ES2015 出现之前，JavaScript 一直没有模块体系。CommonJS 是同步的，而 AMD（</description>
    </item>
    
    <item>
      <title>Ant Design</title>
      <link>https://note.strawbreey.com/posts/202101261052/</link>
      <pubDate>Tue, 26 Jan 2021 10:52:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101261052/</guid>
      <description>设计价值观 自然 数字世界的光速迭代使得产品日益复杂，而人类意识和注意力资源有限。面对这种设计矛盾，追求「自然」交互将是 Ant Design 持之以恒的方向。 感知</description>
    </item>
    
    <item>
      <title>Js Interview This</title>
      <link>https://note.strawbreey.com/posts/202101251955/</link>
      <pubDate>Mon, 25 Jan 2021 19:55:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101251955/</guid>
      <description>请简述JavaScript中的this。 JS 中的this是一个相对复杂的概念，不是简单几句能解释清楚的。粗略地讲，函数的调用方式决定了this</description>
    </item>
    
    <item>
      <title>Js Interview Event Delegation</title>
      <link>https://note.strawbreey.com/posts/202101251633/</link>
      <pubDate>Mon, 25 Jan 2021 16:33:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101251633/</guid>
      <description>请解释事件委托（event delegation） 事件委托是将事件监听器添加到父元素，而不是每个子元素单独设置事件监听器。当触发子元素时，事件</description>
    </item>
    
    <item>
      <title>Angular Core Utils</title>
      <link>https://note.strawbreey.com/posts/202101201956/</link>
      <pubDate>Wed, 20 Jan 2021 19:56:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101201956/</guid>
      <description>/** * Use of this source code is governed by an MIT-style license that can be * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE */ export function toArray&amp;lt;T&amp;gt;(value: T | T[]): T[] { let ret: T[]; if (value == null) { ret = []; } else if (!Array.isArray(value)) { ret = [value]; } else { ret = value; } return ret; } export function arraysEqual&amp;lt;T&amp;gt;(array1: T[], array2: T[]): boolean { if (!</description>
    </item>
    
    <item>
      <title>Angular Platform</title>
      <link>https://note.strawbreey.com/posts/202101201951/</link>
      <pubDate>Wed, 20 Jan 2021 19:51:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101201951/</guid>
      <description>// 查看平台 import { Platform } from &amp;#39;@angular/cdk/platform&amp;#39;; constructor( private platform: Platform, ) { if (this.platform.isBrowser) { console.log(&amp;#39;判断当前平台是浏览器&amp;#39;); } }</description>
    </item>
    
    <item>
      <title>Linux Command Tar</title>
      <link>https://note.strawbreey.com/posts/202101131121/</link>
      <pubDate>Wed, 13 Jan 2021 11:21:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101131121/</guid>
      <description>Windows下最常见的压缩文件就只有两种，一是,zip，另一个是.rar。但Linux就不同，它有.gz、.tar.gz、tgz、bz2、</description>
    </item>
    
    <item>
      <title>Swagger Codegen</title>
      <link>https://note.strawbreey.com/posts/202101131057/</link>
      <pubDate>Wed, 13 Jan 2021 10:57:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101131057/</guid>
      <description>The Swagger Codegen is an open source code-generator (代码生成器) to build server stubs and client SDKs directly from a Swagger defined RESTful API. The source code for the Swagger Codegen can be found in GitHub. GitHub: https://github.com/swagger-api/swagger-codegen</description>
    </item>
    
    <item>
      <title>Php Web Server</title>
      <link>https://note.strawbreey.com/posts/202101131048/</link>
      <pubDate>Wed, 13 Jan 2021 10:48:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101131048/</guid>
      <description>内置Web Server PHP 5.4.0起， CLI SAPI 提供了一个内置的Web服务器。 这个内置的Web服务器主要用于本地开发使用，不可用于线上产品环境。 URI请求会</description>
    </item>
    
    <item>
      <title>Go Build</title>
      <link>https://note.strawbreey.com/posts/202101121657/</link>
      <pubDate>Tue, 12 Jan 2021 16:57:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101121657/</guid>
      <description>Go 命令 Go is a tool for managing Go source code. Usage: go &amp;lt;command&amp;gt; [arguments] The commands are: bug start a bug report build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get add dependencies</description>
    </item>
    
    <item>
      <title>Document Style Guide</title>
      <link>https://note.strawbreey.com/posts/202101081938/</link>
      <pubDate>Fri, 08 Jan 2021 19:38:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101081938/</guid>
      <description>中文技术文档的写作规范。 标题 层级 标题分为四级。 一级标题：文章的标题 二级标题：文章主要部分的大标题 三级标题：二级标题下面一级的小标题 四级标题：</description>
    </item>
    
    <item>
      <title>Php Composer</title>
      <link>https://note.strawbreey.com/posts/202101071737/</link>
      <pubDate>Thu, 07 Jan 2021 17:37:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101071737/</guid>
      <description>$ composer ______ / ____/___ ____ ___ ____ ____ ________ _____ / / / __ \/ __ `__ \/ __ \/ __ \/ ___/ _ \/ ___/ / /___/ /_/ / / / / / / /_/ / /_/ (__ ) __/ / \____/\____/_/ /_/ /_/ .___/\____/____/\___/_/ /_/ Composer version 1.8.4 2019-02-11 10:52:10 Usage: command [options] [arguments] Options: -h, --help Display this help message -q, --quiet Do not output any message -V, --version Display this application version --ansi Force ANSI output --no-ansi Disable ANSI output -n, --no-interaction Do not ask any interactive question --profile Display timing and memory usage information --no-plugins Whether to disable plugins.</description>
    </item>
    
    <item>
      <title>Docker Command Line</title>
      <link>https://note.strawbreey.com/posts/202101071517/</link>
      <pubDate>Thu, 07 Jan 2021 15:17:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101071517/</guid>
      <description>1. docker image COMMAND Usage: docker image COMMAND
Manage images
Commands: build Build an image from a Dockerfile history Show the history of an image import Import the contents from a tarball to create a filesystem image inspect Display detailed information on one or more images load Load an image from a tar archive or STDIN ls List images prune Remove unused images pull Pull an image or a repository from a registry push Push an image or a repository to a registry rm Remove one or more images save Save one or more images to a tar archive (streamed to STDOUT by default) tag Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</description>
    </item>
    
    <item>
      <title>Docker Doc</title>
      <link>https://note.strawbreey.com/posts/202101071140/</link>
      <pubDate>Thu, 07 Jan 2021 11:40:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101071140/</guid>
      <description>Docker is an open platform for developing, shipping, and running applications
 The Docker daemon The Docker daemon (dockerd) listens for Docker API requests and manages Docker objects such as images, containers, networks, and volumes. A daemon can also communicate with other daemons to manage Docker services.
The Docker client The Docker client (docker) is the primary way that many Docker users interact with Docker. When you use commands such as docker run, the client sends these commands to dockerd, which carries them out.</description>
    </item>
    
    <item>
      <title>Apache Forbidden</title>
      <link>https://note.strawbreey.com/posts/202101061007/</link>
      <pubDate>Wed, 06 Jan 2021 10:07:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101061007/</guid>
      <description>apache服务出现问题的解决方法总结: 在配置Linux的 Apache服务时，经常会遇到 Forbidden 403（拒绝访问）错误，总结了一下有以下4种原因:</description>
    </item>
    
    <item>
      <title>Linux Shell Find</title>
      <link>https://note.strawbreey.com/posts/202101041545/</link>
      <pubDate>Mon, 04 Jan 2021 15:45:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101041545/</guid>
      <description># find ./ -exec rm {} \; # find ./ | xargs rm -rf 两者都可以把find命令查找到的结果删除，其区别简单的说是前者是把find发现的结果一次性传给exec选项，这样</description>
    </item>
    
    <item>
      <title>Docker Image</title>
      <link>https://note.strawbreey.com/posts/202101041536/</link>
      <pubDate>Mon, 04 Jan 2021 15:36:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202101041536/</guid>
      <description>解决apache启动错误：Could not reliably determine the server&amp;rsquo;s fully qualified domain name 1）进入apache的安装目录：(视个人安装情况而不同) [root@server ~]# cd /usr/local/apache/conf 2）编辑httpd.c</description>
    </item>
    
    <item>
      <title>Git Auth</title>
      <link>https://note.strawbreey.com/posts/202012311516/</link>
      <pubDate>Thu, 31 Dec 2020 15:16:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012311516/</guid>
      <description>用户信息 # 设置全局的用户信息 $ git config --global user.name &amp;#34;John Doe&amp;#34; $ git config --global user.email johndoe@example.com # 设置项目的用户信息 $ git config user.name &amp;#34;John Doe&amp;#34; $ git config user.email johndoe@example.com 如果我们git clone的下载代码的时候是连</description>
    </item>
    
    <item>
      <title>Composer Install</title>
      <link>https://note.strawbreey.com/posts/202012301931/</link>
      <pubDate>Wed, 30 Dec 2020 19:31:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012301931/</guid>
      <description> The openssl extension is required for SSL/TLS protection but is not available. If you can not enable the openssl extension, you can disable this error, at your own risk, by setting the &amp;lsquo;disable-tls&amp;rsquo; option to true.  composer config -g -- disable-tls true Your configuration does not allow connections to http://repo.packagist.org/packages.json.  extension=php_openssl.dll  </description>
    </item>
    
    <item>
      <title>Linux Install Svn</title>
      <link>https://note.strawbreey.com/posts/202012291703/</link>
      <pubDate>Tue, 29 Dec 2020 17:03:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012291703/</guid>
      <description>SVN（Subversion）是一个自由、开源的项目源代码版本控制工具。目前，绝大多数开源软件和企业代码管理，都使用SVN作为代码版本管理软</description>
    </item>
    
    <item>
      <title>Shell Sed</title>
      <link>https://note.strawbreey.com/posts/202012291530/</link>
      <pubDate>Tue, 29 Dec 2020 15:30:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012291530/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Apache Php</title>
      <link>https://note.strawbreey.com/posts/202012281947/</link>
      <pubDate>Mon, 28 Dec 2020 19:47:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012281947/</guid>
      <description>网页解析不了php，可以查看到源码 思路： 因为 apache 解析不了 php，所以要先看 php 有没有加载解析 php 模版 httpd -M 查看是否存在 php5_module 如果存在的话， 添加AddTy</description>
    </item>
    
    <item>
      <title>Linux Apache Php</title>
      <link>https://note.strawbreey.com/posts/202012281755/</link>
      <pubDate>Mon, 28 Dec 2020 17:55:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012281755/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux Nginx Apache</title>
      <link>https://note.strawbreey.com/posts/202012281541/</link>
      <pubDate>Mon, 28 Dec 2020 15:41:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012281541/</guid>
      <description>Linux服务器下Nginx与Apache共存 将nginx作为代理服务器和web服务器使用，nginx监听80端口，Apache监听除80以</description>
    </item>
    
    <item>
      <title>Apache Install</title>
      <link>https://note.strawbreey.com/posts/202012281212/</link>
      <pubDate>Mon, 28 Dec 2020 12:12:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012281212/</guid>
      <description>CentOS 7下Apache的安装 CentOS下使用yum安装Apache极为方便，只需要在终端键入以下命令即可 # 1.安装Apache sudo apachectl configtest # 2.设置</description>
    </item>
    
    <item>
      <title>Js Has Own Property</title>
      <link>https://note.strawbreey.com/posts/202012251008/</link>
      <pubDate>Fri, 25 Dec 2020 10:08:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012251008/</guid>
      <description>avaScript 判断对象中是否有某属性 判断对象中是否有某属性的常见方式总结，不同的场景要使用不同的方式。 1. 点( . )或者方括号( [ ] ) 通过点或者方括号可以获</description>
    </item>
    
    <item>
      <title>Js Dom Contentload</title>
      <link>https://note.strawbreey.com/posts/202012241950/</link>
      <pubDate>Thu, 24 Dec 2020 19:50:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241950/</guid>
      <description>页面生命周期：DOMContentLoaded，load，beforeunload，unload HTML 页面的生命周期包含三个重要事件： DOMContentLoaded —— 浏览</description>
    </item>
    
    <item>
      <title>Js Storage</title>
      <link>https://note.strawbreey.com/posts/202012241706/</link>
      <pubDate>Thu, 24 Dec 2020 17:06:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241706/</guid>
      <description>LocalStorage，sessionStorage Web 存储对象 localStorage 和 sessionStorage 允许我们在浏览器上保存键/值对。 它们有趣的是，在页面刷新后（对于 ses</description>
    </item>
    
    <item>
      <title>Php Ini Path Config</title>
      <link>https://note.strawbreey.com/posts/202012241528/</link>
      <pubDate>Thu, 24 Dec 2020 15:28:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241528/</guid>
      <description>修改php.ini 中插件的默认路径 ; UNIX: &amp;quot;/path1:/path2&amp;quot; ;include_path = &amp;quot;.:/php/includes&amp;quot; ; ; Windows: &amp;quot;\path1;\path2&amp;quot; ;include_path = &amp;quot;.;c:\php\includes&amp;quot; ;</description>
    </item>
    
    <item>
      <title>Php PDOException Could Not Find Driver</title>
      <link>https://note.strawbreey.com/posts/202012241524/</link>
      <pubDate>Thu, 24 Dec 2020 15:24:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241524/</guid>
      <description>新配了个环境，访问数据库发现抱着个错： PDOException “could not find driver” 经排查是pdo拓展没有开启。在php.ini里面解开注释即可。 解放注释</description>
    </item>
    
    <item>
      <title>Php Thread Safe</title>
      <link>https://note.strawbreey.com/posts/202012241453/</link>
      <pubDate>Thu, 24 Dec 2020 14:53:04 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241453/</guid>
      <description>非线程安全的 PHP 主要用于 IIS，因为 IIS 采用 FastCGI 方式调用 PHP，是自带多线程相关的冲突处理代码的，和 Apache、Nginx 上的运行方式不一样。但</description>
    </item>
    
    <item>
      <title>Php Install</title>
      <link>https://note.strawbreey.com/posts/202012241445/</link>
      <pubDate>Thu, 24 Dec 2020 14:45:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241445/</guid>
      <description>在微软 Windows 系统上安装 PHP，并推荐使用常见的 Web 服务器进行配置。 注意: 如果您正在寻找有关旧系统的信息，如 Windows XP、2003、98 或 Apache 1.x，请参阅</description>
    </item>
    
    <item>
      <title>Go Map</title>
      <link>https://note.strawbreey.com/posts/202012241125/</link>
      <pubDate>Thu, 24 Dec 2020 11:25:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241125/</guid>
      <description>Go 语言Map(集合) Map 是一种无序的键值对的集合。Map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。 Map 是一种集合，所以</description>
    </item>
    
    <item>
      <title>Eslint</title>
      <link>https://note.strawbreey.com/posts/202012241026/</link>
      <pubDate>Thu, 24 Dec 2020 10:26:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012241026/</guid>
      <description>最佳实践 accessor-pairs 最佳实践 一般 有 setter 的地方必须有 getter，有 getter 的地方可以没有 setter array-callback-return 最佳实践 一般 数组的一些方法（map, reduce 等）的回调函数中，必须有返回</description>
    </item>
    
    <item>
      <title>Docker Compose Config</title>
      <link>https://note.strawbreey.com/posts/202012231757/</link>
      <pubDate>Wed, 23 Dec 2020 17:57:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012231757/</guid>
      <description>在项目中，往往需要在 docker-compose.yml 文件中使用环境变量来控制不同的条件和使用场景。本文集中介绍 docker compose 引用环境变量的方式。 Compose CLI 与环境变量 Compose CLI(compose command-line 即 docker-compose 程序)能够识</description>
    </item>
    
    <item>
      <title>Docker Compose Network Mode</title>
      <link>https://note.strawbreey.com/posts/202012231729/</link>
      <pubDate>Wed, 23 Dec 2020 17:29:07 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012231729/</guid>
      <description>设置网络模式。 network_mode: &amp;ldquo;bridge&amp;rdquo; network_mode: &amp;ldquo;host&amp;rdquo; network_mode: &amp;ldquo;none&amp;rdquo; network_mode: &amp;ldquo;service:[service name]&amp;rdquo; network_mode: &amp;ldquo;container:[container name/id]&amp;rdquo; network_mode: &amp;ldquo;bridge&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Yii Data Cache</title>
      <link>https://note.strawbreey.com/posts/202012231541/</link>
      <pubDate>Wed, 23 Dec 2020 15:41:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012231541/</guid>
      <description>数据缓存 数据缓存是指将一些 PHP 变量存储到缓存中，使用时再从缓存中取回。 它也是更高级缓存特性的基础，例如查询缓存 和内容缓存。 如下代码是一个典型的</description>
    </item>
    
    <item>
      <title>Linux Install Software</title>
      <link>https://note.strawbreey.com/posts/202012231046/</link>
      <pubDate>Wed, 23 Dec 2020 10:46:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012231046/</guid>
      <description>在 Linux 系统上面，一个文件能不能被运行看的是有没有可运行的那个权限 (具有 x permission)，不过，Linux 系统上真正认识的可运行档其实是</description>
    </item>
    
    <item>
      <title>Http Ip</title>
      <link>https://note.strawbreey.com/posts/202012221953/</link>
      <pubDate>Tue, 22 Dec 2020 19:53:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012221953/</guid>
      <description>公网IP无法访问，显示服务器拒绝了请求？ 你的网站能ping通，80端口也是开放的，那就是你服务器没提相应的HTTP服务，不知道你是Apach</description>
    </item>
    
    <item>
      <title>K8s Tutorial</title>
      <link>https://note.strawbreey.com/posts/202012211505/</link>
      <pubDate>Mon, 21 Dec 2020 15:05:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012211505/</guid>
      <description># 1. 查看某个名字空间下所有pod kubectl get pod -n barad -o wide # 2. 查看所有名字空间下pod kubectl get pod --all-namespaces # 3. 在某个pod内开启一个交互式shell（即“进入容器内</description>
    </item>
    
    <item>
      <title>Apache Tomcat</title>
      <link>https://note.strawbreey.com/posts/202012211112/</link>
      <pubDate>Mon, 21 Dec 2020 11:12:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012211112/</guid>
      <description>Apache 和 Tomcat 都是web网络服务器，两者既有联系又有区别，在进行HTML、PHP、JSP、Perl等开发过程中，需要准确掌握其各自特点，选择最佳的服</description>
    </item>
    
    <item>
      <title>Apache Sites Available</title>
      <link>https://note.strawbreey.com/posts/202012181510/</link>
      <pubDate>Fri, 18 Dec 2020 15:10:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012181510/</guid>
      <description>由于php的url需要重写, 需要用到apache的mod_rewrite.so模块，用.htaccess文件去掉index.php优化SEO</description>
    </item>
    
    <item>
      <title>Secure Shell Sftp</title>
      <link>https://note.strawbreey.com/posts/202012181032/</link>
      <pubDate>Fri, 18 Dec 2020 10:32:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012181032/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Secure Shell Rsync</title>
      <link>https://note.strawbreey.com/posts/202012181032/</link>
      <pubDate>Fri, 18 Dec 2020 10:32:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012181032/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Secure Shell Scp</title>
      <link>https://note.strawbreey.com/posts/202012181032/</link>
      <pubDate>Fri, 18 Dec 2020 10:32:09 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012181032/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Secure Shell</title>
      <link>https://note.strawbreey.com/posts/202012181011/</link>
      <pubDate>Fri, 18 Dec 2020 10:11:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012181011/</guid>
      <description>SSH or Secure Shell is a cryptographic network protocol for operating network services (网络运营服务) securely over an unsecured network.[1] Typical applications include remote command-line, login, and remote command execution, but any network service can be secured with SSH. SSH provides a secure channel over an unsecured network by using a client–server</description>
    </item>
    
    <item>
      <title>Yaml Tutorial</title>
      <link>https://note.strawbreey.com/posts/202012171757/</link>
      <pubDate>Thu, 17 Dec 2020 17:57:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171757/</guid>
      <description>YAML 是 &amp;ldquo;YAML Ain&amp;rsquo;t a Markup Language&amp;rdquo;（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：&amp;ldquo;Y</description>
    </item>
    
    <item>
      <title>Docker Dockerfile</title>
      <link>https://note.strawbreey.com/posts/202012171600/</link>
      <pubDate>Thu, 17 Dec 2020 16:00:13 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171600/</guid>
      <description>Docker can build images automatically by reading the instructions from a Dockerfile. A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Using docker build users can create an automated build that executes several command-line instructions in succession. FROM FROM [&amp;ndash;platform=] [AS ] FROM [&amp;ndash;platform=] [:] [AS ] FROM [&amp;ndash;platform=] [@] [AS ] RUN RUN RUN [&amp;ldquo;executable&amp;rdquo;,</description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>https://note.strawbreey.com/posts/202012171600/</link>
      <pubDate>Thu, 17 Dec 2020 16:00:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171600/</guid>
      <description>Compose 简介 Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以</description>
    </item>
    
    <item>
      <title>Docker Mirror</title>
      <link>https://note.strawbreey.com/posts/202012171449/</link>
      <pubDate>Thu, 17 Dec 2020 14:49:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171449/</guid>
      <description>问题背景 Docker hub自2020年11月开始，对匿名和免费账户增加了pull镜像频率限制 Docker Hub限频计划 https://www.docker.com/increase-rate-limits Docker Hub将限制匿名和免费账户的docke</description>
    </item>
    
    <item>
      <title>Source Word 7000</title>
      <link>https://note.strawbreey.com/posts/202012171307/</link>
      <pubDate>Thu, 17 Dec 2020 13:07:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171307/</guid>
      <description>List1 1. pronounce 发音, 读音，正式宣布/公布 派生: pronunciation 拓展词汇 enounce v. 声明 enunciate v. 发音 articulate v. 口齿清楚讲话， 清晰发音， 清楚的表达， adj 能说会道的 artisanship 工匠精神 2. announce 宣布, 宣告</description>
    </item>
    
    <item>
      <title>Js Fetch</title>
      <link>https://note.strawbreey.com/posts/202012171032/</link>
      <pubDate>Thu, 17 Dec 2020 10:32:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171032/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git Contributing</title>
      <link>https://note.strawbreey.com/posts/202012171007/</link>
      <pubDate>Thu, 17 Dec 2020 10:07:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012171007/</guid>
      <description>Contributing to repository We&amp;rsquo;d love for you to contribute to our source code and to make the repository even better than it is today! Here are the guidelines we&amp;rsquo;d like you to follow:
 Code of Conduct Questions and Problems Issues and Bugs Feature Requests Improving Documentation Issue Submission Guidelines Pull Request Submission Guidelines Signing the CLA  Code of Conduct Help us keep AngularJS open and inclusive. Please read and follow our Code of Conduct.</description>
    </item>
    
    <item>
      <title>Php Download File</title>
      <link>https://note.strawbreey.com/posts/202012161524/</link>
      <pubDate>Wed, 16 Dec 2020 15:24:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012161524/</guid>
      <description>// 1. 方案一 // file — 把整个文件读入一个数组中 $fp=file($url); foreach ($fp as $fileLine) { echo $fileLine; } // 2. 方案二 // file_get_contents — 将整个文件读入一个字符串 echo file_get_content($url) // 3. 方案三 // 注意fopen读取文件需要</description>
    </item>
    
    <item>
      <title>Http Accept Length</title>
      <link>https://note.strawbreey.com/posts/202012161521/</link>
      <pubDate>Wed, 16 Dec 2020 15:21:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012161521/</guid>
      <description>$interval=120; //2分钟 if(isset($_SERVER[&amp;#39;HTTP_IF_MODIFIED_SINCE&amp;#39;])){ // HTTP_IF_MODIFIED_SINCE即下面的: Last-Modified,文档缓存时间. // 缓存时间+时长. $c_time = strtotime($_SERVER[&amp;#39;HTTP_IF_MODIFIED_SINCE&amp;#39;])+$interval; // 当</description>
    </item>
    
    <item>
      <title>Http Content Type</title>
      <link>https://note.strawbreey.com/posts/202012161520/</link>
      <pubDate>Wed, 16 Dec 2020 15:20:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012161520/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Http 304</title>
      <link>https://note.strawbreey.com/posts/202012151937/</link>
      <pubDate>Tue, 15 Dec 2020 19:37:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012151937/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vim No Write Since Last Change</title>
      <link>https://note.strawbreey.com/posts/202012151229/</link>
      <pubDate>Tue, 15 Dec 2020 12:29:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012151229/</guid>
      <description>故障现象 使用vim修改文件, :q或者:wq退出失败 报错，系统提示如下： E37: No write since last change (add ! to override) 使用命令:w!强制存盘即可，在vim模式下，键入以</description>
    </item>
    
    <item>
      <title>Difference Between Nginx and Apache</title>
      <link>https://note.strawbreey.com/posts/202012151106/</link>
      <pubDate>Tue, 15 Dec 2020 11:06:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012151106/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js For</title>
      <link>https://note.strawbreey.com/posts/202012142337/</link>
      <pubDate>Mon, 14 Dec 2020 23:37:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012142337/</guid>
      <description>1. for循环 for有三个表达式：①声明循环变量；②判断循环条件；③更新循环变量；三个表达式之间，用;分割，for循环三个表达式都可以省略，但</description>
    </item>
    
    <item>
      <title>Go Example</title>
      <link>https://note.strawbreey.com/posts/202012141218/</link>
      <pubDate>Mon, 14 Dec 2020 12:18:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012141218/</guid>
      <description>1. 编译 package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;hello world&amp;#34;) } 要运行这个程序，将这些代码放到 hello-world.go 中并且使用 go run 命令。 go run hello-world.go hello world 有时候我们想将我们的程序编译成二进制文件。我们可以通</description>
    </item>
    
    <item>
      <title>Go Import</title>
      <link>https://note.strawbreey.com/posts/202012141129/</link>
      <pubDate>Mon, 14 Dec 2020 11:29:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012141129/</guid>
      <description>可以在一个 Go语言源文件包声明语句之后，其它非导入声明语句之前，包含零到多个导入包声明语句。 每个导入声明可以单独指定一个导入路径，也可以通过</description>
    </item>
    
    <item>
      <title>Js Arguments</title>
      <link>https://note.strawbreey.com/posts/202012141116/</link>
      <pubDate>Mon, 14 Dec 2020 11:16:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012141116/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Revisited</title>
      <link>https://note.strawbreey.com/posts/202012141115/</link>
      <pubDate>Mon, 14 Dec 2020 11:15:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012141115/</guid>
      <description>让我们深入研究一下箭头函数。 箭头函数不仅仅是编写简洁代码的“捷径”。它还具有非常特殊且有用的特性。 JavaScript 充满了我们需要编写在其他地方执行的小函数</description>
    </item>
    
    <item>
      <title>Vue Reactivity</title>
      <link>https://note.strawbreey.com/posts/202012111958/</link>
      <pubDate>Fri, 11 Dec 2020 19:58:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012111958/</guid>
      <description>参考资料 深入响应式原理</description>
    </item>
    
    <item>
      <title>Scss Difference Sass</title>
      <link>https://note.strawbreey.com/posts/202012111750/</link>
      <pubDate>Fri, 11 Dec 2020 17:50:40 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012111750/</guid>
      <description>Sass is a CSS pre-processor with syntax advancements. Style sheets in the advanced syntax are processed by the program, and turned into regular CSS style sheets. However, they do not extend the CSS standard itself. CSS variables are supported and can be utilized but not as well as pre-processor variables. For the difference between SCSS and Sass, this text on the Sass documentation page should answer the question: There are</description>
    </item>
    
    <item>
      <title>Scss Tutorial</title>
      <link>https://note.strawbreey.com/posts/202012111748/</link>
      <pubDate>Fri, 11 Dec 2020 17:48:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012111748/</guid>
      <description>Sass supports two different syntaxes. Each one can load the other, so it&amp;rsquo;s up to you and your team which one to choose. SCSS permalinkSCSS The SCSS syntax uses the file extension .scss. With a few small exceptions, it’s a superset of CSS, which means essentially all valid CSS is valid SCSS as well. Because of its similarity to CSS, it’s the easiest syntax</description>
    </item>
    
    <item>
      <title>Css Specificity</title>
      <link>https://note.strawbreey.com/posts/202012111733/</link>
      <pubDate>Fri, 11 Dec 2020 17:33:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012111733/</guid>
      <description>css优先级 优先级就是分配给指定的 CSS 声明的一个权重，它由 匹配的选择器中的 每一种选择器类型的 数值 决定。 而当优先级与多个 CSS 声明中任意一个声明的优</description>
    </item>
    
    <item>
      <title>Windows Subsystem for Linux</title>
      <link>https://note.strawbreey.com/posts/202012101112/</link>
      <pubDate>Thu, 10 Dec 2020 11:12:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012101112/</guid>
      <description>参考资料 Frequently Asked Questions about Windows Subsystem for Linux</description>
    </item>
    
    <item>
      <title>Docker Install</title>
      <link>https://note.strawbreey.com/posts/202012101056/</link>
      <pubDate>Thu, 10 Dec 2020 10:56:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012101056/</guid>
      <description>介绍 Docker Desktop 是 Docker 在 Windows 10 和 macOS 操作系统上的官方安装方式，这个方法依然属于先在虚拟机中安装 Linux 然后再安装 Docker 的方法。 Docker Desktop 官方下载地址： https://hub.docker.com/editions/community/docker-ce-desktop-windows 安装 下载并安装do</description>
    </item>
    
    <item>
      <title>Docker Tutorial</title>
      <link>https://note.strawbreey.com/posts/202012101051/</link>
      <pubDate>Thu, 10 Dec 2020 10:51:20 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012101051/</guid>
      <description>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流</description>
    </item>
    
    <item>
      <title>Js Slice</title>
      <link>https://note.strawbreey.com/posts/202012092014/</link>
      <pubDate>Wed, 09 Dec 2020 20:14:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012092014/</guid>
      <description>Array slice() 方法可从已有的数组中返回选定的元素。 arrayObject.slice(start,end) start 必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一</description>
    </item>
    
    <item>
      <title>Go Proposal</title>
      <link>https://note.strawbreey.com/posts/202012091745/</link>
      <pubDate>Wed, 09 Dec 2020 17:45:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091745/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Pipelines</title>
      <link>https://note.strawbreey.com/posts/202012091729/</link>
      <pubDate>Wed, 09 Dec 2020 17:29:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091729/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Rxgo</title>
      <link>https://note.strawbreey.com/posts/202012091726/</link>
      <pubDate>Wed, 09 Dec 2020 17:26:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091726/</guid>
      <description>ReactiveX1 ReactiveX2 ReactiveX3 ReactiveX2 ReactiveX3 ReactiveX, or Rx for short, is an API for programming with Observable streams. This is the official ReactiveX API for the Go language.
ReactiveX is a new, alternative way of asynchronous programming to callbacks, promises and deferred. It is about processing streams of events or items, with events being any occurrences or changes within the system. A stream of events is called an Observable.
An operator is a function that defines an Observable, how and when it should emit data.</description>
    </item>
    
    <item>
      <title>Rxjs</title>
      <link>https://note.strawbreey.com/posts/202012091725/</link>
      <pubDate>Wed, 09 Dec 2020 17:25:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091725/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Safe Standard</title>
      <link>https://note.strawbreey.com/posts/202012091547/</link>
      <pubDate>Wed, 09 Dec 2020 15:47:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091547/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Standards</title>
      <link>https://note.strawbreey.com/posts/202012091547/</link>
      <pubDate>Wed, 09 Dec 2020 15:47:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091547/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Study</title>
      <link>https://note.strawbreey.com/posts/202012091532/</link>
      <pubDate>Wed, 09 Dec 2020 15:32:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091532/</guid>
      <description>golang 学习计划 Go 语言入门教程 Go 教程 TopGoer 教程 Go 入门指南 Go by Example 参考资料 Go语言圣经 Go 语言设计与实现 RPC 概念 proto3知识</description>
    </item>
    
    <item>
      <title>Grpc Web</title>
      <link>https://note.strawbreey.com/posts/202012091515/</link>
      <pubDate>Wed, 09 Dec 2020 15:15:07 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091515/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Grpc</title>
      <link>https://note.strawbreey.com/posts/202012091501/</link>
      <pubDate>Wed, 09 Dec 2020 15:01:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091501/</guid>
      <description>Why gRPC? gRPC is a modern open source high performance RPC framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services. Simple service definition Define your service using Protocol Buffers, a powerful</description>
    </item>
    
    <item>
      <title>Bootstrap Helper</title>
      <link>https://note.strawbreey.com/posts/202012091446/</link>
      <pubDate>Wed, 09 Dec 2020 14:46:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091446/</guid>
      <description>Clearfix Quickly and easily clear floated content within a container by adding a clearfix utility.
Easily clear floats by adding .clearfix to the parent element. Can also be used as a mixin.
&amp;lt;div class=&amp;#34;clearfix&amp;#34;&amp;gt;...&amp;lt;/div&amp;gt; The mixin source code:
@mixin clearfix() { &amp;amp;::after { display: block; clear: both; content: &amp;#34;&amp;#34;; } } Use the mixin in SCSS:
.element { @includeclearfix; } Colored links You can use the .link-* classes to colorize links.</description>
    </item>
    
    <item>
      <title>Bootstrap Utilities</title>
      <link>https://note.strawbreey.com/posts/202012091313/</link>
      <pubDate>Wed, 09 Dec 2020 13:13:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012091313/</guid>
      <description>目录 border &amp;lt;!-- Additive --&amp;gt; &amp;lt;span class=&amp;#34;border&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-top&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-right&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-bottom&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-left&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;!-- Subtractive --&amp;gt; &amp;lt;span class=&amp;#34;border-0&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-top-0&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-right-0&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-bottom-0&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border-left-0&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;!-- Border color --&amp;gt; &amp;lt;span class=&amp;#34;border border-primary&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-secondary&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-success&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-danger&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-warning&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-info&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-light&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-dark&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;#34;border border-white&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;!-- Border-radius --&amp;gt; &amp;lt;img src=&amp;#34;...&amp;#34; class=&amp;#34;rounded&amp;#34; alt=&amp;#34;...&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;...&amp;#34; class=&amp;#34;rounded-top&amp;#34;</description>
    </item>
    
    <item>
      <title>Cyclomatic Complexity</title>
      <link>https://note.strawbreey.com/posts/202012090020/</link>
      <pubDate>Wed, 09 Dec 2020 00:20:13 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012090020/</guid>
      <description>圈复杂度(Cyclomatic complexity)是一种代码复杂度的衡量标准，在1976年由Thomas J. McCabe, Sr. 提出。 在软件测试的概念里，圈</description>
    </item>
    
    <item>
      <title>Mysql Char</title>
      <link>https://note.strawbreey.com/posts/202012081941/</link>
      <pubDate>Tue, 08 Dec 2020 19:41:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012081941/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mysql Having</title>
      <link>https://note.strawbreey.com/posts/202012081932/</link>
      <pubDate>Tue, 08 Dec 2020 19:32:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012081932/</guid>
      <description>SQL HAVING Clause The SQL HAVING Clause The HAVING clause was added to SQL because the WHERE keyword could not be used with aggregate functions. HAVING Syntax SELECT column_name(s) FROM table_name WHERE condition GROUP BY column_name(s) HAVING condition ORDER BY column_name(s); Demo Database Below is a selection from the &amp;ldquo;Customers&amp;rdquo; table in the Northwind sample database: CustomerID CustomerName ContactName Address City PostalCode Country 1 Alfreds Futterkiste Maria Anders Obere Str.</description>
    </item>
    
    <item>
      <title>Mysql Leetcode</title>
      <link>https://note.strawbreey.com/posts/202012081930/</link>
      <pubDate>Tue, 08 Dec 2020 19:30:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012081930/</guid>
      <description>编写一个 SQL 查询，查找 Person 表中所有重复的电子邮箱。 +----+---------+ | Id | Email | +----+---------+ | 1 | a@b.com | | 2 | c@d.com | | 3 | a@b.com | +----+---------+ select Email from Person group by Email having count(Email) &amp;gt; 1; -- 前面提到聚合函数（cou</description>
    </item>
    
    <item>
      <title>Go Tutorial</title>
      <link>https://note.strawbreey.com/posts/202012072351/</link>
      <pubDate>Mon, 07 Dec 2020 23:51:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012072351/</guid>
      <description>标识符 25 个关键字 break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var 36个预定义标识符 append bool byte cap close complex complex64 complex128 uint16 copy false float32 float64 imag int int8 int16 uint32 int32 int64 iota len make new nil panic uint64 print</description>
    </item>
    
    <item>
      <title>Silicon Valley 5 1</title>
      <link>https://note.strawbreey.com/posts/202012072329/</link>
      <pubDate>Mon, 07 Dec 2020 23:29:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012072329/</guid>
      <description>Oh my God 我的天啊 These are our new offices ? 这是我们的新办公室 Yeah. Well, this is just the lobby 对, 这是大厅 We&amp;rsquo;re up there on the second floor 我们的办公室在二楼 but yup 但是, 没错 These are so nice 这里真漂亮 There&amp;rsquo;s fireplace 看</description>
    </item>
    
    <item>
      <title>Typescript 4</title>
      <link>https://note.strawbreey.com/posts/202012072259/</link>
      <pubDate>Mon, 07 Dec 2020 22:59:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012072259/</guid>
      <description>Template Literal Types String literal types in TypeScript allow us to model functions and APIs that expect a set of specific strings. function setVerticalAlignment(color: &amp;#34;top&amp;#34; | &amp;#34;middle&amp;#34; | &amp;#34;bottom&amp;#34;) { // ... } setVerticalAlignment(&amp;#34;middel&amp;#34;); // Argument of type &amp;#39;&amp;#34;middel&amp;#34;&amp;#39; is not assignable to parameter of type &amp;#39;&amp;#34;top&amp;#34; | &amp;#34;middle&amp;#34; | &amp;#34;bottom&amp;#34;&amp;#39;. This is pretty nice because string literal types can basically spell-check our string values. We also like that string</description>
    </item>
    
    <item>
      <title>Grpc Go</title>
      <link>https://note.strawbreey.com/posts/202012071953/</link>
      <pubDate>Mon, 07 Dec 2020 19:53:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071953/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Php Magic Methods</title>
      <link>https://note.strawbreey.com/posts/202012071935/</link>
      <pubDate>Mon, 07 Dec 2020 19:35:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071935/</guid>
      <description>__construct()， __destruct()， __call()， __callStatic()， __get()， __set()， __i</description>
    </item>
    
    <item>
      <title>Php Json_decode</title>
      <link>https://note.strawbreey.com/posts/202012071731/</link>
      <pubDate>Mon, 07 Dec 2020 17:31:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071731/</guid>
      <description>对 JSON 格式的字符串进行解码 json_decode ( string $json [, bool $assoc = FALSE [, int $depth = 512 [, int $options = 0 ]]] ) : mixed 接受一个 JSON 编码的字符串并且把它转换为 PHP 变量 参数 json 待解码的 json string 格式的字符</description>
    </item>
    
    <item>
      <title>Php __Call</title>
      <link>https://note.strawbreey.com/posts/202012071722/</link>
      <pubDate>Mon, 07 Dec 2020 17:22:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071722/</guid>
      <description>__construct()方法到实例化时自动加载function __call()方法用来获取没有定义的function __get()得到私有</description>
    </item>
    
    <item>
      <title>Php Openssl</title>
      <link>https://note.strawbreey.com/posts/202012071640/</link>
      <pubDate>Mon, 07 Dec 2020 16:40:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071640/</guid>
      <description>本扩展使用 » OpenSSL 库来对称/非对称加解密，以及 PBKDF2、 PKCS7、 PKCS12、 X509 和其他加密操作。除此之外还提供了 TLS 流的实现。 要使用 Open SSL 函</description>
    </item>
    
    <item>
      <title>Git Commit Style</title>
      <link>https://note.strawbreey.com/posts/202012071550/</link>
      <pubDate>Mon, 07 Dec 2020 15:50:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071550/</guid>
      <description>git commit feat：新功能（feature） fix：修补bug opt: 代码优化(optimization) docs：文档（documentation） s</description>
    </item>
    
    <item>
      <title>Git Fast Forward</title>
      <link>https://note.strawbreey.com/posts/202012071432/</link>
      <pubDate>Mon, 07 Dec 2020 14:32:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071432/</guid>
      <description>When you try to merge one commit with a commit that can be reached by following the first commit’s history, Git simplifies things by moving the pointer forward because there is no divergent work to merge together – this is called a “fast-forward.” In another way, If Master has</description>
    </item>
    
    <item>
      <title>Go Nil</title>
      <link>https://note.strawbreey.com/posts/202012071321/</link>
      <pubDate>Mon, 07 Dec 2020 13:21:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071321/</guid>
      <description>nil is a frequently (频繁的) used and important predeclared identifier (预定义标识符) in Go. It is the literal representation (代表) of zero values of many kinds of types. Many new Go programmers with experiences of some other popular languages may view nil as the counterpart (相对应) of null (or NULL) in other languages.</description>
    </item>
    
    <item>
      <title>Go Nullptr</title>
      <link>https://note.strawbreey.com/posts/202012071318/</link>
      <pubDate>Mon, 07 Dec 2020 13:18:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071318/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Leetcode 0118 Pascals Triangle</title>
      <link>https://note.strawbreey.com/posts/202012071127/</link>
      <pubDate>Mon, 07 Dec 2020 11:27:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071127/</guid>
      <description>给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。 PascalTriangleAnimated2 在杨辉三角中，每个数是它左上方和右上方的数的和。 输入: 5 输出: [ [1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1] ] Solutions: /** * @param</description>
    </item>
    
    <item>
      <title>Leetcode 0621 Task Scheduler</title>
      <link>https://note.strawbreey.com/posts/202012071125/</link>
      <pubDate>Mon, 07 Dec 2020 11:25:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071125/</guid>
      <description>给你一个用字符数组 tasks 表示的 CPU 需要执行的任务列表。其中每个字母表示一种不同种类的任务。任务可以以任意顺序执行，并且每个任务都可以在 1 个单位时间</description>
    </item>
    
    <item>
      <title>Leetcode 0659 Split Array Into Consecutive Subsequences</title>
      <link>https://note.strawbreey.com/posts/202012071123/</link>
      <pubDate>Mon, 07 Dec 2020 11:23:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071123/</guid>
      <description>给你一个按升序排序的整数数组 num（可能包含重复数字），请你将它们分割成一个或多个长度为 3 的子序列，其中每个子序列都由连续整数组成。 如果可以</description>
    </item>
    
    <item>
      <title>Leetcode 0204 Count Primes</title>
      <link>https://note.strawbreey.com/posts/202012071120/</link>
      <pubDate>Mon, 07 Dec 2020 11:20:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071120/</guid>
      <description>统计所有小于非负整数 n 的质数的数量。 输入：n = 10 输出：4 解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。 输入：n = 0 输出：0 输入：n = 1 输出：</description>
    </item>
    
    <item>
      <title>Vscode Toggle Word Wrap</title>
      <link>https://note.strawbreey.com/posts/202012071034/</link>
      <pubDate>Mon, 07 Dec 2020 10:34:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071034/</guid>
      <description>vscode 自动换行 View-&amp;gt; Toggle Word Wrap 选项. 快捷键 : alt + Z code-首选项-设置，找到editor.wordWrap属性，该属性默认值为off，改为on。vsc</description>
    </item>
    
    <item>
      <title>Makefile</title>
      <link>https://note.strawbreey.com/posts/202012071022/</link>
      <pubDate>Mon, 07 Dec 2020 10:22:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012071022/</guid>
      <description>本文对GNU的make进行讲述，环境是RedHat Linux 8.0，make的版本是3.80, 遵循于IEEE 1003.2-1992 标准的（POSIX.2)。 程序的编译和</description>
    </item>
    
    <item>
      <title>Js Array Fill</title>
      <link>https://note.strawbreey.com/posts/202012050106/</link>
      <pubDate>Sat, 05 Dec 2020 01:06:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012050106/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git Merge Tracking</title>
      <link>https://note.strawbreey.com/posts/202012041814/</link>
      <pubDate>Fri, 04 Dec 2020 18:14:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012041814/</guid>
      <description>参考资料 Why am I merging “remote-tracking branch &amp;lsquo;origin/develop&amp;rsquo; into develop”</description>
    </item>
    
    <item>
      <title>Hugo Mermaid</title>
      <link>https://note.strawbreey.com/posts/202012041615/</link>
      <pubDate>Fri, 04 Dec 2020 16:15:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012041615/</guid>
      <description>sequenceDiagram Alice-&amp;gt;&amp;gt;John: Hello John, how are you? John--&amp;gt;&amp;gt;Alice: Great!  Steve Francia    </description>
    </item>
    
    <item>
      <title>Go Copy</title>
      <link>https://note.strawbreey.com/posts/202012040006/</link>
      <pubDate>Fri, 04 Dec 2020 00:06:45 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012040006/</guid>
      <description>func copy(dst, src []Type) int The copy built-in function copies elements from a source slice into a destination slice. (As a special case, it also will copy bytes from a string to a slice of bytes.) The source and destination may overlap. Copy returns the number of elements copied, which will be the minimum of len(src) and len(dst).</description>
    </item>
    
    <item>
      <title>Js Splice</title>
      <link>https://note.strawbreey.com/posts/202012032353/</link>
      <pubDate>Thu, 03 Dec 2020 23:53:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012032353/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git Abort Merge</title>
      <link>https://note.strawbreey.com/posts/202012031742/</link>
      <pubDate>Thu, 03 Dec 2020 17:42:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012031742/</guid>
      <description>撤销合并 git reset --hard HEAD git pull --strategy=theirs remote_branch git fetch origin git reset --hard origin git reset --merge git merge --abort #等同于git reset --merge何时MERGE_HEAD存在。 git stash git stash pop # If you have changes you don&amp;#39;t want to commit</description>
    </item>
    
    <item>
      <title>Go Runes</title>
      <link>https://note.strawbreey.com/posts/202012031447/</link>
      <pubDate>Thu, 03 Dec 2020 14:47:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012031447/</guid>
      <description>字符串中的每一个元素叫做“字符”，在遍历或者单个获取字符串元素时可以获得字符。 Go语言的字符有以下两种： 一种是 uint8 类型，或者叫 byte 型，代表了 ASCII 码</description>
    </item>
    
    <item>
      <title>Go String Range</title>
      <link>https://note.strawbreey.com/posts/202012031441/</link>
      <pubDate>Thu, 03 Dec 2020 14:41:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012031441/</guid>
      <description>索引值是返回的第二个值的当前“字符”的的一个byte的索引。它不是当前“字符”的索引，这与其他语言不同。注意真实的字符可能会由多个rune表</description>
    </item>
    
    <item>
      <title>Go Package</title>
      <link>https://note.strawbreey.com/posts/202012031304/</link>
      <pubDate>Thu, 03 Dec 2020 13:04:44 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012031304/</guid>
      <description>Go语言有超过100个的标准包（译注：可以用 go list std | wc -l命令查看标准包的具体数目），标准库为大多数的程序提供了必要的基础构件。在Go的社区</description>
    </item>
    
    <item>
      <title>Linux Init</title>
      <link>https://note.strawbreey.com/posts/202012021514/</link>
      <pubDate>Wed, 02 Dec 2020 15:14:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012021514/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Math</title>
      <link>https://note.strawbreey.com/posts/202012020953/</link>
      <pubDate>Wed, 02 Dec 2020 09:53:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012020953/</guid>
      <description>Package math go math page 定义的常量 E = 2.71828182845904523536028747135266249775724709369995957496696763 // https://oeis.org/A001113 Pi = 3.14159265358979323846264338327950288419716939937510582097494459 // https://oeis.org/A000796 Phi = 1.61803398874989484820458683436563811772030917980576286213544862 // https://oeis.org/A001622 Sqrt2 = 1.41421356237309504880168872420969807856967187537694807317667974 // https://oeis.org/A002193 SqrtE = 1.64872127070012814684865078781416357165377610071014801157507931 // https://oeis.org/A019774 SqrtPi = 1.77245385090551602729816748334114518279754945612238712821380779 // https://oeis.org/A002161 SqrtPhi = 1.27201964951406896425242246173749149171560804184009624861664038 // https://oeis.org/A139339 Ln2 = 0.693147180559945309417232121458176568075500134360255254120680009 // https://oeis.org/A002162 Log2E = 1 / Ln2 Ln10 = 2.30258509299404568401799145468436420760110148862877297603332790 // https://oeis.org/A002392 Log10E = 1 / Ln10 // Floating-point limit values MaxFloat32</description>
    </item>
    
    <item>
      <title>Go Operation</title>
      <link>https://note.strawbreey.com/posts/202012020952/</link>
      <pubDate>Wed, 02 Dec 2020 09:52:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012020952/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go String to Number</title>
      <link>https://note.strawbreey.com/posts/202012012320/</link>
      <pubDate>Tue, 01 Dec 2020 23:20:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012012320/</guid>
      <description>在golang中，用字符串与整型有两种方法 使用rune（int32位的别名）来转换 golang中stroncv包的函数来转换 a := &amp;#34;123456&amp;#34; b,error := strconv.Atoi(a) c: =</description>
    </item>
    
    <item>
      <title>Go Max</title>
      <link>https://note.strawbreey.com/posts/202012011309/</link>
      <pubDate>Tue, 01 Dec 2020 13:09:31 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012011309/</guid>
      <description>maxCandies = max(maxCandies, candies[i]) go语言math包里面定义了min/max函数，但是是float64类型的，而并没有整数类型的min/max。 go语言的math包里</description>
    </item>
    
    <item>
      <title>Leetcode 0034 Find First and Last Position of Element in Sorted Array</title>
      <link>https://note.strawbreey.com/posts/202012010024/</link>
      <pubDate>Tue, 01 Dec 2020 00:24:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202012010024/</guid>
      <description>给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。 如果数组中不存在目标值 targ</description>
    </item>
    
    <item>
      <title>Leetcode 0767 Reorganize String</title>
      <link>https://note.strawbreey.com/posts/202011302339/</link>
      <pubDate>Mon, 30 Nov 2020 23:39:52 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011302339/</guid>
      <description>给定一个字符串S，检查是否能重新排布其中的字母，使得两相邻的字符不同。 若可行，输出任意可行的结果。若不可行，返回空字符串。 示例: 输入: S = &amp;quot;aab&amp;quot;</description>
    </item>
    
    <item>
      <title>Webpack Remove Console</title>
      <link>https://note.strawbreey.com/posts/202011301736/</link>
      <pubDate>Mon, 30 Nov 2020 17:36:09 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011301736/</guid>
      <description>去除 console 是交由 UglifyJS 处理的.webpack 内置了 webpack.optimize.UglifyJsPlugin, 也提供了 UglifyjsWebpackPlugin 插件形式调用, 二者的区别是: webpack.optimize.UglifyJSPlugin 基于的是 UglifyjsWebpackPlugin v0.4.6 版本, 而单独使用插件的版本可以获得更高的版本</description>
    </item>
    
    <item>
      <title>Go Function</title>
      <link>https://note.strawbreey.com/posts/202011301600/</link>
      <pubDate>Mon, 30 Nov 2020 16:00:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011301600/</guid>
      <description>参考资料 高阶函数</description>
    </item>
    
    <item>
      <title>Go for Range</title>
      <link>https://note.strawbreey.com/posts/202011301546/</link>
      <pubDate>Mon, 30 Nov 2020 15:46:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011301546/</guid>
      <description>range iterates over elements in a variety of data structures. Let’s see how to use range with some of the data structures we’ve already learned package main import &amp;#34;fmt&amp;#34; func main() { // 声明数组 nums := []int{2, 3, 4} // 声明遍历 sum := 0 // for i, num := range nums i, for _, num :=</description>
    </item>
    
    <item>
      <title>Php Install Xhprof</title>
      <link>https://note.strawbreey.com/posts/202011301151/</link>
      <pubDate>Mon, 30 Nov 2020 11:51:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011301151/</guid>
      <description>Xhprof是facebook开源出来的一个php轻量级的性能分析工具，跟Xdebug类似，但性能开销更低，还可以用在生产环境中，也可以由程</description>
    </item>
    
    <item>
      <title>Js Set Map</title>
      <link>https://note.strawbreey.com/posts/202011290149/</link>
      <pubDate>Sun, 29 Nov 2020 01:49:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011290149/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Leetcode 0976 Largest Perimeter Triangle</title>
      <link>https://note.strawbreey.com/posts/202011290051/</link>
      <pubDate>Sun, 29 Nov 2020 00:51:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011290051/</guid>
      <description>给定由一些正数（代表长度）组成的数组 A，返回由其中三个长度组成的、面积不为零的三角形的最大周长。 如果不能形成任何面积不为零的三角形，返回 0。</description>
    </item>
    
    <item>
      <title>Js Sort</title>
      <link>https://note.strawbreey.com/posts/202011290050/</link>
      <pubDate>Sun, 29 Nov 2020 00:50:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011290050/</guid>
      <description>定义和用法 sort() 方法用于对数组的元素进行排序。 语法 arrayObject.sort(sortby) 参数 描述 sortby 可选。规定排序顺序。必须是函数。 返回值 对数组的引用。请注意，数组在原数组上进行排序</description>
    </item>
    
    <item>
      <title>Php Install Mcrypt Extension</title>
      <link>https://note.strawbreey.com/posts/202011271523/</link>
      <pubDate>Fri, 27 Nov 2020 15:23:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011271523/</guid>
      <description>在 php 官网 下载 mcrypt 包 wget http://pecl.php.net/get/mcrypt-1.0.3.tgz tar xf mcrypt-1.0.3.tgz cd mcrypt-1.0.3 # 编译安装 mcrypt /usr/local/php/bin/phpize ./configure --with-php-config=/usr/local/php/bin/php-config &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install # php.ini 加上扩展 extension=mcrypt.so # 重启 php-fpm, /etc/init.d/php-fpm restart # php-fpm 默认位置 /usr/local/php72/sbin/php-fpm # php 编译安装的位置 参考资料 mcrypt php 7.2 安装 mcrypt 扩展</description>
    </item>
    
    <item>
      <title>Leetcode 0004 Median of Two Sorted Arrays</title>
      <link>https://note.strawbreey.com/posts/202011262352/</link>
      <pubDate>Thu, 26 Nov 2020 23:52:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011262352/</guid>
      <description>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的中位数。 进阶：你能设计一个时间复杂度为 O(log (m+n)) 的算法解决</description>
    </item>
    
    <item>
      <title>Go Uber Guide</title>
      <link>https://note.strawbreey.com/posts/202011261934/</link>
      <pubDate>Thu, 26 Nov 2020 19:34:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011261934/</guid>
      <description>Uber Go Style Guide Table of Contents Introduction 介绍 Guidelines 指导 Pointers to Interfaces Verify Interface Compliance Receivers and Interfaces Zero-value Mutexes are Valid Copy Slices and Maps at Boundaries Defer to Clean Up Channel Size is One or None Start Enums at One Use &amp;quot;time&amp;quot; to handle time Error Types Error Wrapping Handle Type Assertion Failures Don&amp;rsquo;t Panic Use go.uber.org/atomic Avoid Mutable Globals Avoid Embedding Types in</description>
    </item>
    
    <item>
      <title>Hugo Gitalk</title>
      <link>https://note.strawbreey.com/posts/202011261552/</link>
      <pubDate>Thu, 26 Nov 2020 15:52:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011261552/</guid>
      <description>hugo-gitalk 参考链接 hugo-gitalk</description>
    </item>
    
    <item>
      <title>Leetcode 1370 Increasing Decreasing String</title>
      <link>https://note.strawbreey.com/posts/202011261059/</link>
      <pubDate>Thu, 26 Nov 2020 10:59:04 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011261059/</guid>
      <description>给你一个字符串 s ，请你根据下面的算法重新构造字符串： 从 s 中选出 最小 的字符，将它 接在 结果字符串的后面。 从 s 剩余字符中选出 最小 的字符，且该字符比</description>
    </item>
    
    <item>
      <title>Leetcode Array and String</title>
      <link>https://note.strawbreey.com/posts/202011261057/</link>
      <pubDate>Thu, 26 Nov 2020 10:57:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011261057/</guid>
      <description>数组简介 集合, 列表，数组 集合一般被定义为：由一个或多个确定的元素所构成的整体。 集合里的元素类型不一定相同 集合里的元素没有顺序 列表 是一种数据项</description>
    </item>
    
    <item>
      <title>Leetcode 1662 Check if Two String Arrays Are Equivalent</title>
      <link>https://note.strawbreey.com/posts/202011261045/</link>
      <pubDate>Thu, 26 Nov 2020 10:45:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011261045/</guid>
      <description>给你两个字符串数组 word1 和 word2 。如果两个数组表示的字符串相同，返回 true ；否则，返回 false 。 数组表示的字符串 是由数组中的所有元素 按顺序 连接形成的字符串。 输</description>
    </item>
    
    <item>
      <title>Leetcode 0002 Add Two Numbers</title>
      <link>https://note.strawbreey.com/posts/202011260010/</link>
      <pubDate>Thu, 26 Nov 2020 00:10:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011260010/</guid>
      <description>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。 如果，我们将这两个</description>
    </item>
    
    <item>
      <title>Js String</title>
      <link>https://note.strawbreey.com/posts/202011251956/</link>
      <pubDate>Wed, 25 Nov 2020 19:56:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011251956/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Array Prototype</title>
      <link>https://note.strawbreey.com/posts/202011251954/</link>
      <pubDate>Wed, 25 Nov 2020 19:54:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011251954/</guid>
      <description>参考链接</description>
    </item>
    
    <item>
      <title>Git Merge</title>
      <link>https://note.strawbreey.com/posts/202011251720/</link>
      <pubDate>Wed, 25 Nov 2020 17:20:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011251720/</guid>
      <description>$ git version git version 2.18.0.windows.1 $ git merge -help usage: git merge [&amp;lt;options&amp;gt;] [&amp;lt;commit&amp;gt;...] or: git merge --abort or: git merge --continue -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --summary (synonym to --stat) --log[=&amp;lt;n&amp;gt;] add (at most &amp;lt;n&amp;gt;) entries from shortlog to merge commit message --squash create a single commit instead of doing a</description>
    </item>
    
    <item>
      <title>Leetcode 0222 Count Complete Tree Nodes</title>
      <link>https://note.strawbreey.com/posts/202011242335/</link>
      <pubDate>Tue, 24 Nov 2020 23:35:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011242335/</guid>
      <description>给出一个完全二叉树，求出该树的节点个数。 说明： 完全二叉树的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，</description>
    </item>
    
    <item>
      <title>Leetcode 0020 Valid Parentheses</title>
      <link>https://note.strawbreey.com/posts/202011242328/</link>
      <pubDate>Tue, 24 Nov 2020 23:28:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011242328/</guid>
      <description>给定一个只包括 &amp;lsquo;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&amp;rsquo; 的字符串，判断字符串是否有效。 有效字符串需满足： 左括号必</description>
    </item>
    
    <item>
      <title>Leetcode 0009 Palidrome Number</title>
      <link>https://note.strawbreey.com/posts/202011242229/</link>
      <pubDate>Tue, 24 Nov 2020 22:29:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011242229/</guid>
      <description>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 判断一个整数是否是回文数。回文数是指正序（从左向右）</description>
    </item>
    
    <item>
      <title>Swagger OpenApi Specification</title>
      <link>https://note.strawbreey.com/posts/202011241952/</link>
      <pubDate>Tue, 24 Nov 2020 19:52:04 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241952/</guid>
      <description>参考链接 OpenAPI Specification specification about</description>
    </item>
    
    <item>
      <title>Swagger Open Api</title>
      <link>https://note.strawbreey.com/posts/202011241808/</link>
      <pubDate>Tue, 24 Nov 2020 18:08:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241808/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Api Doc</title>
      <link>https://note.strawbreey.com/posts/202011241700/</link>
      <pubDate>Tue, 24 Nov 2020 17:00:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241700/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Swagger Api</title>
      <link>https://note.strawbreey.com/posts/202011241557/</link>
      <pubDate>Tue, 24 Nov 2020 15:57:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241557/</guid>
      <description>Swagger 是一套围绕 OpenAPI 规范构建的开源工具，可以帮助您设计，构建，记录和使用 REST API。 Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web</description>
    </item>
    
    <item>
      <title>Mysql Binlog</title>
      <link>https://note.strawbreey.com/posts/202011241043/</link>
      <pubDate>Tue, 24 Nov 2020 10:43:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241043/</guid>
      <description>binlog是Mysql sever层维护的一种二进制日志，与innodb引擎中的redo/undo log是完全不同的日志；其主要是用来记录对</description>
    </item>
    
    <item>
      <title>Cap and Base</title>
      <link>https://note.strawbreey.com/posts/202011241022/</link>
      <pubDate>Tue, 24 Nov 2020 10:22:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011241022/</guid>
      <description>CAP 理论/定理起源于 2000年，由加州大学伯克利分校的Eric Brewer教授在分布式计算原理研讨会（PODC）上提出，因此 CAP定理又被称作</description>
    </item>
    
    <item>
      <title>Leetcode 1014 Best Sightseeing Pair</title>
      <link>https://note.strawbreey.com/posts/202011232254/</link>
      <pubDate>Mon, 23 Nov 2020 22:54:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011232254/</guid>
      <description>给定正整数数组 A，A[i] 表示第 i 个观光景点的评分，并且两个景点 i 和 j 之间的距离为 j - i。 一对景点（i &amp;lt; j）组成的观光组合的得分为（A[i]</description>
    </item>
    
    <item>
      <title>Leetcode 0452 Mininum Number of Arrows to Burst Balloons</title>
      <link>https://note.strawbreey.com/posts/202011231936/</link>
      <pubDate>Mon, 23 Nov 2020 19:36:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011231936/</guid>
      <description>在二维空间中有许多球形的气球。对于每个气球，提供的输入是水平方向上，气球直径的开始和结束坐标。由于它是水平的，所以纵坐标并不重要，因此只要知</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://note.strawbreey.com/posts/202011231005/</link>
      <pubDate>Mon, 23 Nov 2020 10:05:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011231005/</guid>
      <description>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的</description>
    </item>
    
    <item>
      <title>Leetcode 0056 Merge Intervals</title>
      <link>https://note.strawbreey.com/posts/202011230026/</link>
      <pubDate>Mon, 23 Nov 2020 00:26:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011230026/</guid>
      <description>给出一个区间的集合，请合并所有重叠的区间。 示例 1: 输入: intervals = [[1,3],[2,6],[8,10],[15,18]] 输出: [[1,6],[8,10],[15,18]] 解释: 区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6]. 示例 2: 输入: intervals = [[1,4],[4,5]] 输出: [[1,5]] 解释: 区间</description>
    </item>
    
    <item>
      <title>Js CodePointAt</title>
      <link>https://note.strawbreey.com/posts/202011222329/</link>
      <pubDate>Sun, 22 Nov 2020 23:29:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011222329/</guid>
      <description>codePointAt() 方法返回 一个 Unicode 编码点值的非负整数。 如果在指定的位置没有元素则返回 undefined 。如果在索引处开始没有UTF-16 代理对，将直接返回在那个索引处的编码单</description>
    </item>
    
    <item>
      <title>Js GetOwnPropertyNames</title>
      <link>https://note.strawbreey.com/posts/202011222319/</link>
      <pubDate>Sun, 22 Nov 2020 23:19:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011222319/</guid>
      <description>Object.getOwnPropertyNames()方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值</description>
    </item>
    
    <item>
      <title>Leetcode 0242 Valid Anagram</title>
      <link>https://note.strawbreey.com/posts/202011222238/</link>
      <pubDate>Sun, 22 Nov 2020 22:38:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011222238/</guid>
      <description>Given two strings s and t , write a function to determine if t is an anagram of s. 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。 Example: Input: s = &amp;quot;anagram&amp;quot;, t = &amp;quot;nagaram&amp;quot; Output: true Input: s = &amp;quot;rat&amp;quot;, t = &amp;quot;car&amp;quot; Output: false</description>
    </item>
    
    <item>
      <title>Git Pull Slow</title>
      <link>https://note.strawbreey.com/posts/202011222053/</link>
      <pubDate>Sun, 22 Nov 2020 20:53:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011222053/</guid>
      <description>解决git节点清点耗时较长的方法 出现节点清点耗时较长的原因 由于remote与本地仓库长时间运行，导致两遍的仓库节点差异较大。git 每次fet</description>
    </item>
    
    <item>
      <title>Git Checkout</title>
      <link>https://note.strawbreey.com/posts/202011201552/</link>
      <pubDate>Fri, 20 Nov 2020 15:52:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011201552/</guid>
      <description>checkout是Git最常用的命令之一 checkout在CVS和SVN中都是检出的意思，从版本库检出一个版本，在Git中就不是这么简单了。</description>
    </item>
    
    <item>
      <title>Mysql Design</title>
      <link>https://note.strawbreey.com/posts/202011201524/</link>
      <pubDate>Fri, 20 Nov 2020 15:24:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011201524/</guid>
      <description>字符集 统一使用 utf8mb4 MySQL在 5.5.3 之后增加了 utf8mb4 字符编码，简单的说utf8mb4才是真正的utf-8，因为它可以支持4个字节每个字符，ps：当我们</description>
    </item>
    
    <item>
      <title>Php Study Deploy</title>
      <link>https://note.strawbreey.com/posts/202011201418/</link>
      <pubDate>Fri, 20 Nov 2020 14:18:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011201418/</guid>
      <description>安装phpstudy 的时候会选一个www的路径，</description>
    </item>
    
    <item>
      <title>Vscode Format</title>
      <link>https://note.strawbreey.com/posts/202011201139/</link>
      <pubDate>Fri, 20 Nov 2020 11:39:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011201139/</guid>
      <description>vs code格式化代码的快捷键如下：（来源于这里） On Windows Shift + Alt + F On Mac Shift + Option + F On Ubuntu Ctrl + Shift + I 但是自带的格式化并不能满足我的需求，这个时候，不得</description>
    </item>
    
    <item>
      <title>Js Linked List</title>
      <link>https://note.strawbreey.com/posts/202011200950/</link>
      <pubDate>Fri, 20 Nov 2020 09:50:38 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011200950/</guid>
      <description>要存储多个元素，数组（或列表）可能是最常用的数据结构。正如本书之前提到的，每种语言都实现了数组。这种数据结构非常方便，提供了一个便利的 [] 语法</description>
    </item>
    
    <item>
      <title>Leetcode 0147 Insertion Sort List</title>
      <link>https://note.strawbreey.com/posts/202011200945/</link>
      <pubDate>Fri, 20 Nov 2020 09:45:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011200945/</guid>
      <description>Sort a linked list using insertion sort. A graphical example of insertion sort. The partial sorted list (black) initially contains only the first element in the list. With each iteration one element (red) is removed from the input data and inserted in-place into the sorted list Algorithm of Insertion Sort: Insertion sort iterates, consuming one input element each repetition, and growing a sorted output list. At each iteration, insertion sort</description>
    </item>
    
    <item>
      <title>Go Specification</title>
      <link>https://note.strawbreey.com/posts/202011191726/</link>
      <pubDate>Thu, 19 Nov 2020 17:26:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011191726/</guid>
      <description>word general-purpose 一般用途 explicit 显示的 concurrent programming 并发编程 efficient 有效率的</description>
    </item>
    
    <item>
      <title>Go Effective</title>
      <link>https://note.strawbreey.com/posts/202011191455/</link>
      <pubDate>Thu, 19 Nov 2020 14:55:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011191455/</guid>
      <description>Introduction 介绍 Go is a new language. Although it borrows ideas from existing languages, it has unusual properties that make effective Go programs different in character from programs written in its relatives. A straightforward translation of a C++ or Java program into Go is unlikely to produce a satisfactory result—Java programs are written in Java, not Go. On the</description>
    </item>
    
    <item>
      <title>Leetcode 0283 Move Zeros</title>
      <link>https://note.strawbreey.com/posts/202011191000/</link>
      <pubDate>Thu, 19 Nov 2020 10:00:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011191000/</guid>
      <description>Given an array nums, write a function to move all 0&amp;rsquo;s to the end of it while maintaining the relative order of the non-zero elements. 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。 Example:</description>
    </item>
    
    <item>
      <title>Tslint</title>
      <link>https://note.strawbreey.com/posts/202011181729/</link>
      <pubDate>Wed, 18 Nov 2020 17:29:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011181729/</guid>
      <description>2019 年 1 月，TypeScirpt 官方决定全面采用 ESLint 作为代码检查的工具，并创建了一个新项目 typescript-eslint，提供了 TypeScript 文件的解析</description>
    </item>
    
    <item>
      <title>Vscode Tslint</title>
      <link>https://note.strawbreey.com/posts/202011181437/</link>
      <pubDate>Wed, 18 Nov 2020 14:37:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011181437/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Json and Xml</title>
      <link>https://note.strawbreey.com/posts/202011181147/</link>
      <pubDate>Wed, 18 Nov 2020 11:47:17 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011181147/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Leetcode 0134 Gas Station</title>
      <link>https://note.strawbreey.com/posts/202011181005/</link>
      <pubDate>Wed, 18 Nov 2020 10:05:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011181005/</guid>
      <description>There are N gas stations along a circular route, where the amount of gas at station i is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations. Return the starting gas station&amp;rsquo;s index if you can travel around the</description>
    </item>
    
    <item>
      <title>Hugo Host on Github</title>
      <link>https://note.strawbreey.com/posts/202011171439/</link>
      <pubDate>Tue, 17 Nov 2020 14:39:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011171439/</guid>
      <description>Deploy Hugo as a GitHub Pages project or personal/organizational site and automate the whole process with a simple shell script. #!/bin/sh # If a command fails then the deploy stops set -e printf &amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m\n&amp;#34; # Build the project. hugo # if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;` # Go To Public folder cd public # Add changes to git. git add . # Commit changes.</description>
    </item>
    
    <item>
      <title>Leetcode 1030 Matrix Cells in Distance Order</title>
      <link>https://note.strawbreey.com/posts/202011170956/</link>
      <pubDate>Tue, 17 Nov 2020 09:56:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011170956/</guid>
      <description>We are given a matrix with R rows and C columns has cells with integer coordinates (r, c), where 0 &amp;lt;= r &amp;lt; R and 0 &amp;lt;= c &amp;lt; C. Additionally, we are given a cell in that matrix with coordinates (r0, c0). Return the coordinates of all cells in the matrix, sorted by their distance from (r0, c0) from smallest distance to largest distance. Here, the distance between two</description>
    </item>
    
    <item>
      <title>Js Delete</title>
      <link>https://note.strawbreey.com/posts/202011161942/</link>
      <pubDate>Mon, 16 Nov 2020 19:42:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011161942/</guid>
      <description>delete 操作符用于删除对象的某个属性；如果没有指向这个属性的引用，那它最终会被释放。 语法 delete expression delete object.property delete object[&amp;#39;property&amp;#39;] 参数 object 对象的名称，或计算结果为对象的表达式。 property</description>
    </item>
    
    <item>
      <title>Js String Equal</title>
      <link>https://note.strawbreey.com/posts/202011161936/</link>
      <pubDate>Mon, 16 Nov 2020 19:36:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011161936/</guid>
      <description>判断是不是字符串： 1 基本方法： typeof(str)==&amp;#39;string&amp;#39; 2 利用js原生函数： Object.prototype.toString // ƒ toString() { [native code] } Object.prototype.toString.call(str)==&amp;#34;[object String]&amp;#34; （1）在Object.prototype这个this（上下文环境）中</description>
    </item>
    
    <item>
      <title>Web Api Domtokenlist</title>
      <link>https://note.strawbreey.com/posts/202011161924/</link>
      <pubDate>Mon, 16 Nov 2020 19:24:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011161924/</guid>
      <description>DOMTokenList 接口表示一组空格分隔的标记（tokens）。如由 Element.classList、HTMLLinkElement.relList、HTM</description>
    </item>
    
    <item>
      <title>Web Api Toggle</title>
      <link>https://note.strawbreey.com/posts/202011161920/</link>
      <pubDate>Mon, 16 Nov 2020 19:20:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011161920/</guid>
      <description>DOMTokenList 接口的 toggle() 方法从列表中删除一个给定的标记 并返回 false 。 如果标记 不存在，则添加并且函数返回 true。 tokenList.toggle(token, force); 参数列表 token 标记列表中你想探查并切换的 DOMString . force</description>
    </item>
    
    <item>
      <title>Angular Zooejs</title>
      <link>https://note.strawbreey.com/posts/202011131746/</link>
      <pubDate>Fri, 13 Nov 2020 17:46:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011131746/</guid>
      <description>参考链接 Zone.js Zone Primer</description>
    </item>
    
    <item>
      <title>Mysql Development Manual</title>
      <link>https://note.strawbreey.com/posts/202011131305/</link>
      <pubDate>Fri, 13 Nov 2020 13:05:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011131305/</guid>
      <description>建表约束 【强制】表达是与否概念的字段，必须使用is_xxx的方式命名，数据类型是unsigned tinyint（1表示是，0表示否） 正例：表</description>
    </item>
    
    <item>
      <title>Web Performance</title>
      <link>https://note.strawbreey.com/posts/202011131107/</link>
      <pubDate>Fri, 13 Nov 2020 11:07:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011131107/</guid>
      <description>Content Meke Fewer Http Requests 减少http请求 Reduce DNS Lookups 减少dns查询 Avoid Redirects 避免重定向 Make ajax Cacheable ajax 缓存 PostLoad Components Preload Components 租价预加载 Reduce the Number of DOM Elements Split Components Across Domains Minimize Number of iframes Avoid 404s Server Use a Content Delivery Network (CDN) Add Expires</description>
    </item>
    
    <item>
      <title>Git Remote</title>
      <link>https://note.strawbreey.com/posts/202011131032/</link>
      <pubDate>Fri, 13 Nov 2020 10:32:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011131032/</guid>
      <description>更新远程分支 git remote update origin --prune git remote update origin -p # 设置远程分支的源 git push --set-upstream origin master # 删除远程分支 git push origin --delete test 参考 # git-remote - Manage set of tracked repositories git remote [-v | --verbose] git remote add [-t &amp;lt;branch&amp;gt;] [-m &amp;lt;master&amp;gt;] [-f] [--[no-]tags] [--mirror=(fetch|push)] &amp;lt;name&amp;gt; &amp;lt;url&amp;gt; git</description>
    </item>
    
    <item>
      <title>Node Sass Install</title>
      <link>https://note.strawbreey.com/posts/202011121743/</link>
      <pubDate>Thu, 12 Nov 2020 17:43:31 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121743/</guid>
      <description>gyp info it worked if it ends with ok gyp info using node-gyp@5.1.0 gyp info using node@14.4.0 | win32 | x64 gyp info find Python using Python version 2.7.16 found at &amp;#34;C:\python2\python.exe&amp;#34; gyp http GET https://nodejs.org/download/release/v14.4.0/node-v14.4.0-headers.tar.gz gyp WARN install got an error, rolling back install gyp ERR! configure error 我们可以看到，安装node-sass有几个</description>
    </item>
    
    <item>
      <title>Sdn</title>
      <link>https://note.strawbreey.com/posts/202011121425/</link>
      <pubDate>Thu, 12 Nov 2020 14:25:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121425/</guid>
      <description>软件定义网络（Software Defined Network，SDN）作为新一代网络架构。 参考链接 Software Defined Networking</description>
    </item>
    
    <item>
      <title>Http Keepalive and Socket</title>
      <link>https://note.strawbreey.com/posts/202011121143/</link>
      <pubDate>Thu, 12 Nov 2020 11:43:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121143/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Ajax</title>
      <link>https://note.strawbreey.com/posts/202011121138/</link>
      <pubDate>Thu, 12 Nov 2020 11:38:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121138/</guid>
      <description>Asynchronous JavaScript + XML（异步JavaScript和XML）, 其本身不是一种新技术，而是一个在 2005年被Jesse James Garrett提出的新术语，用来描</description>
    </item>
    
    <item>
      <title>Message Queue Kafka</title>
      <link>https://note.strawbreey.com/posts/202011121129/</link>
      <pubDate>Thu, 12 Nov 2020 11:29:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121129/</guid>
      <description>生产者 Producer 可能是网页活动产生的消息、服务日志等信息。生产者通过 push 模式将消息发布到 Cloud Kafka 的 Broker 集群。 集群通过 Zookeeper 管理集群配置，进行 leader 选举，故障容错等。</description>
    </item>
    
    <item>
      <title>Learn Database</title>
      <link>https://note.strawbreey.com/posts/202011121058/</link>
      <pubDate>Thu, 12 Nov 2020 10:58:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011121058/</guid>
      <description>参考链接 Awesome Database Learning</description>
    </item>
    
    <item>
      <title>Devops</title>
      <link>https://note.strawbreey.com/posts/202011111954/</link>
      <pubDate>Wed, 11 Nov 2020 19:54:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011111954/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Yii Db</title>
      <link>https://note.strawbreey.com/posts/202011111909/</link>
      <pubDate>Wed, 11 Nov 2020 19:09:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011111909/</guid>
      <description>Yii 包含了一个建立在 PHP PDO 之上的数据访问层 (DAO： Database Access Objects)。DAO为不同的数据库提供了一套统一的API。 其中 ActiveRecord 提供了数据库与模型(</description>
    </item>
    
    <item>
      <title>Yii Http Cache</title>
      <link>https://note.strawbreey.com/posts/202011111825/</link>
      <pubDate>Wed, 11 Nov 2020 18:25:40 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011111825/</guid>
      <description>通过配置 yii\filters\HttpCache 过滤器，控制器操作渲染的内容就能缓存在客户端。 HttpCache 过滤器仅对 GET 和 HEAD 请求生效， 它能为这些请求设置三种与缓存有关的 HTTP 头。 Last-Modified 头 Last-Modified 头使用时间</description>
    </item>
    
    <item>
      <title>Head First Go</title>
      <link>https://note.strawbreey.com/posts/202011111127/</link>
      <pubDate>Wed, 11 Nov 2020 11:27:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011111127/</guid>
      <description>2007年，Google首席软件工程师Rob Pike与Robert Griesemer和Ken Thompson两位大师，决定创造一种新语言来取</description>
    </item>
    
    <item>
      <title>Http Keep Alive</title>
      <link>https://note.strawbreey.com/posts/202011101630/</link>
      <pubDate>Tue, 10 Nov 2020 16:30:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011101630/</guid>
      <description>HTTP/1.1和一部分的HTTP/1.0想出了持久连接（HTTP PersistentConnections，也称为HTTP keep-ali</description>
    </item>
    
    <item>
      <title>User Agent Stylesheet</title>
      <link>https://note.strawbreey.com/posts/202011101531/</link>
      <pubDate>Tue, 10 Nov 2020 15:31:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011101531/</guid>
      <description>What are the target browsers? Different browsers set different default CSS rules. Try including a CSS reset, such as the meyerweb CSS reset or normalize.css, to remove those defaults. Google &amp;ldquo;CSS reset vs normalize&amp;rdquo; to see the differences. reset normalize 参考链接 What is a user agent stylesheet?</description>
    </item>
    
    <item>
      <title>Js MouseEvent</title>
      <link>https://note.strawbreey.com/posts/202011101513/</link>
      <pubDate>Tue, 10 Nov 2020 15:13:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011101513/</guid>
      <description>MouseEvent = { isTrusted: true screenX: 567 screenY: 442 clientX: 264, // 鼠标指针在点击元素（DOM）中的X坐标。 clientY: 272, // 鼠标指针在点击元素（DOM）中的Y坐标。 ctrlKey: false, //当鼠标事件触发时，如果</description>
    </item>
    
    <item>
      <title>Webapi Fetch</title>
      <link>https://note.strawbreey.com/posts/202011091759/</link>
      <pubDate>Mon, 09 Nov 2020 17:59:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091759/</guid>
      <description>Fetch 是一个现代的概念, 等同于 XMLHttpRequest。它提供了许多与XMLHttpRequest相同的功能，但被设计成更具可扩展性和高效性</description>
    </item>
    
    <item>
      <title>Angular Ngmodule</title>
      <link>https://note.strawbreey.com/posts/202011091751/</link>
      <pubDate>Mon, 09 Nov 2020 17:51:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091751/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular Architecture</title>
      <link>https://note.strawbreey.com/posts/202011091744/</link>
      <pubDate>Mon, 09 Nov 2020 17:44:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091744/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Mysql Innodb</title>
      <link>https://note.strawbreey.com/posts/202011091705/</link>
      <pubDate>Mon, 09 Nov 2020 17:05:31 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091705/</guid>
      <description>-</description>
    </item>
    
    <item>
      <title>Nginx Proxy Pass</title>
      <link>https://note.strawbreey.com/posts/202011091603/</link>
      <pubDate>Mon, 09 Nov 2020 16:03:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091603/</guid>
      <description>server { listen 80; server_name cloudwave.cn; location /productlist { # 匹配所有以/productlist开头所有页面都被拦截 # 将匹配到的页面请求转发到新的静态资源服务器 proxy_pass http://new.cloudwave.cn; } } server { listen 443; server_name cloudwave.cn; location</description>
    </item>
    
    <item>
      <title>Mysql Transaction</title>
      <link>https://note.strawbreey.com/posts/202011091549/</link>
      <pubDate>Mon, 09 Nov 2020 15:49:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091549/</guid>
      <description>事务(Transaction) 是数据区别于文件系统重要的特性之一 innoDB 的 事务完全符合ACID 的特性 原子性(atomicity) 一致性(consi</description>
    </item>
    
    <item>
      <title>Mysql Lock</title>
      <link>https://note.strawbreey.com/posts/202011091443/</link>
      <pubDate>Mon, 09 Nov 2020 14:43:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011091443/</guid>
      <description>一方面要最大化程度利用数据库的并发访问，另一方面要确保每个用户能以一致性读取和修改数据。 为此就有了锁的机制，也是数据库系统区别于文件系统的关</description>
    </item>
    
    <item>
      <title>Leetcode 0007 Reverse Integer</title>
      <link>https://note.strawbreey.com/posts/202011061954/</link>
      <pubDate>Fri, 06 Nov 2020 19:54:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011061954/</guid>
      <description>Given a 32-bit signed integer, reverse digits of an integer. 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 −</description>
    </item>
    
    <item>
      <title>Leetcode 0001 Two Sum</title>
      <link>https://note.strawbreey.com/posts/202011061703/</link>
      <pubDate>Fri, 06 Nov 2020 17:03:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011061703/</guid>
      <description>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. 给定一个整数数组 nums 和一个目标值 targ</description>
    </item>
    
    <item>
      <title>Micro Front Ends</title>
      <link>https://note.strawbreey.com/posts/202011061126/</link>
      <pubDate>Fri, 06 Nov 2020 11:26:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011061126/</guid>
      <description>聊聊微前端 如果把前端拆分，可以分为框架, 组件, 依赖库，配置 (业务) 和 数据 webpack打包的时候，可以把框架, 组件，依赖库打包成公共库 前端路</description>
    </item>
    
    <item>
      <title>Front End Interview</title>
      <link>https://note.strawbreey.com/posts/202011060946/</link>
      <pubDate>Fri, 06 Nov 2020 09:46:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011060946/</guid>
      <description>javascript js 基础题 深浅拷贝 -&amp;gt; 对象引用 作用域 -&amp;gt; {} -&amp;gt; this 原型 / 原型链 -&amp;gt; js 继承 es6 新特性 闭包 this 事件循环 -&amp;gt; 微宏任务 es6 set 内部实现 node 和 浏览器事件循环机制的区别 柯里化</description>
    </item>
    
    <item>
      <title>Scan Code Login</title>
      <link>https://note.strawbreey.com/posts/202011051809/</link>
      <pubDate>Thu, 05 Nov 2020 18:09:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011051809/</guid>
      <description>网页端请求登陆二维码 -网页端请求登陆二维码 手机端将用户id存入Redis web端轮询成功</description>
    </item>
    
    <item>
      <title>Idempotent Operation</title>
      <link>https://note.strawbreey.com/posts/202011051724/</link>
      <pubDate>Thu, 05 Nov 2020 17:24:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011051724/</guid>
      <description>幂等性 是指 多次执行所产生的影响均与一次执行的影响相同。幂等函数，或幂等方法，是指可以使用相同参数重复执行，并能获得相同结果的函数。这些函数不</description>
    </item>
    
    <item>
      <title>Redis Design and Implementation</title>
      <link>https://note.strawbreey.com/posts/202011051535/</link>
      <pubDate>Thu, 05 Nov 2020 15:35:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011051535/</guid>
      <description>链表和链表节点的实现 redis 链表实现 typedef struct listNode { struct listNode * prev; struct listNode * next; void * value; } listNode; 多个listNode可以通过prev和next指针组成双端链表 typedef struct list { // 表头</description>
    </item>
    
    <item>
      <title>Cache</title>
      <link>https://note.strawbreey.com/posts/202011051133/</link>
      <pubDate>Thu, 05 Nov 2020 11:33:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011051133/</guid>
      <description>10.6.2 缓存的分类 1.按照存储位置分类 ● 本地缓存将数据缓存在本地，常见的本地缓存开源框架有EhCache、OSCache、iBatis和Hiber</description>
    </item>
    
    <item>
      <title>Content Delivery Network</title>
      <link>https://note.strawbreey.com/posts/202011051006/</link>
      <pubDate>Thu, 05 Nov 2020 10:06:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011051006/</guid>
      <description>CDN的全称是Content Delivery Network，即内容分发网络 CDN的通俗理解就是网站加速，CPU均衡负载，可以解决跨运营商，跨地区，服务器负</description>
    </item>
    
    <item>
      <title>Mysql Manual New Word</title>
      <link>https://note.strawbreey.com/posts/202011041720/</link>
      <pubDate>Wed, 04 Nov 2020 17:20:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011041720/</guid>
      <description>  Legal
  Notices
  Reference
  present
  intended
  earlier
  appropriate
  Commercial
  delivers
  multithreaded
  robust
  </description>
    </item>
    
    <item>
      <title>Js Intro</title>
      <link>https://note.strawbreey.com/posts/202011041538/</link>
      <pubDate>Wed, 04 Nov 2020 15:38:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011041538/</guid>
      <description>前端新手指引 常见的新手引导效果场景 引导页 蒙层引导 气泡/弹窗提示 动画/视频引导 操作式引导 预设任务 主要包括三个部分: 蒙层、气泡、高亮。 常见的开源</description>
    </item>
    
    <item>
      <title>Mariadb</title>
      <link>https://note.strawbreey.com/posts/202011031843/</link>
      <pubDate>Tue, 03 Nov 2020 18:43:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011031843/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mysql Optimization Subqueries</title>
      <link>https://note.strawbreey.com/posts/202011031707/</link>
      <pubDate>Tue, 03 Nov 2020 17:07:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011031707/</guid>
      <description>mysql 子查询优化 参考链接 Optimizing Subqueries and Derived Tables mysql 内部手册 https://dev.mysql.com/doc/internals/en/memory-allocation.html 参考手册 https://dev.mysql.com/doc/refman/5.7/en/ https://dev.mysql.com/doc/internals/en/ https://dev.mysql.com/doc/refman/5.7/en/</description>
    </item>
    
    <item>
      <title>Mysql Innodb Memory</title>
      <link>https://note.strawbreey.com/posts/202011031615/</link>
      <pubDate>Tue, 03 Nov 2020 16:15:02 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011031615/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mysql Order By</title>
      <link>https://note.strawbreey.com/posts/202011031555/</link>
      <pubDate>Tue, 03 Nov 2020 15:55:38 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011031555/</guid>
      <description>不要直接使用MySQL排序做排名，使用Redis/GameServer</description>
    </item>
    
    <item>
      <title>Js Arrow Functions</title>
      <link>https://note.strawbreey.com/posts/202011021927/</link>
      <pubDate>Mon, 02 Nov 2020 19:27:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021927/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ssl Tls</title>
      <link>https://note.strawbreey.com/posts/202011021720/</link>
      <pubDate>Mon, 02 Nov 2020 17:20:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021720/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Https</title>
      <link>https://note.strawbreey.com/posts/202011021649/</link>
      <pubDate>Mon, 02 Nov 2020 16:49:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021649/</guid>
      <description>HTTPS实际上是HTTP穿上了SSL/TLS的外套，我们都知道HTTP属于应用层的协议，是离程序员比较近的，而SSL（安全套接字）与TLS</description>
    </item>
    
    <item>
      <title>Js New Object</title>
      <link>https://note.strawbreey.com/posts/202011021644/</link>
      <pubDate>Mon, 02 Nov 2020 16:44:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021644/</guid>
      <description>常规的 {} 语法允许创建一个对象。但是我们经常需要创建许多类似的对象，例如多个用户或菜单项等。 这可以使用构造函数和 &amp;ldquo;new&amp;rdquo; 操作符来实现。 构造函数 构造函</description>
    </item>
    
    <item>
      <title>Redis Best Practices</title>
      <link>https://note.strawbreey.com/posts/202011021130/</link>
      <pubDate>Mon, 02 Nov 2020 11:30:44 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021130/</guid>
      <description></description>
    </item>
    
    <item>
      <title>What Happens When</title>
      <link>https://note.strawbreey.com/posts/202011021112/</link>
      <pubDate>Mon, 02 Nov 2020 11:12:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202011021112/</guid>
      <description>  parse URL
  DNS loopup
  HTTP protocol
  NGINX
  Server Request Handle
  Browser
  </description>
    </item>
    
    <item>
      <title>Js Operators</title>
      <link>https://note.strawbreey.com/posts/202010301741/</link>
      <pubDate>Fri, 30 Oct 2020 17:41:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010301741/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Object Methods</title>
      <link>https://note.strawbreey.com/posts/202010301551/</link>
      <pubDate>Fri, 30 Oct 2020 15:51:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010301551/</guid>
      <description>Object.assign Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象分配到目标对象。它将返回目标对象。 const target = { a: 1, b: 2 }; const source = { b: 4, c: 5 }; const returnedTarget = Object.assign(target, source); console.log(target); // expected output: Object</description>
    </item>
    
    <item>
      <title>Js Object</title>
      <link>https://note.strawbreey.com/posts/202010301550/</link>
      <pubDate>Fri, 30 Oct 2020 15:50:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010301550/</guid>
      <description>移除对象中的空值 let obj for ( var key in obj ){ if ( data[key] === &amp;#39;&amp;#39; ){ delete data[key] } }</description>
    </item>
    
    <item>
      <title>Chrome Waterfall</title>
      <link>https://note.strawbreey.com/posts/202010291453/</link>
      <pubDate>Thu, 29 Oct 2020 14:53:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010291453/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mysql Disk Space</title>
      <link>https://note.strawbreey.com/posts/202010291116/</link>
      <pubDate>Thu, 29 Oct 2020 11:16:52 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010291116/</guid>
      <description>计算1000万条数据占了多大内存 CREATE TABLE `table_name` ( id bigint(20) not null auto_increment, -- 8字节 detail varchar(2000), -- createtime datetime, -- 8 字节 validity int default &amp;#39;0&amp;#39;, -- 4字节 primary key (id) -- 8字节 ); 每个字段设计完成后占用的字节数 (8+8+8+4)</description>
    </item>
    
    <item>
      <title>Js This</title>
      <link>https://note.strawbreey.com/posts/202010291115/</link>
      <pubDate>Thu, 29 Oct 2020 11:15:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010291115/</guid>
      <description>在 JavaScript 中，this 关键字与其他大多数编程语言中的不同。JavaScript 中的 this 可以用于任何函数。 this 的值是在代码运行时计算出来的，它取决于代码</description>
    </item>
    
    <item>
      <title>Good Doctor 1 4</title>
      <link>https://note.strawbreey.com/posts/202010290021/</link>
      <pubDate>Thu, 29 Oct 2020 00:21:20 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010290021/</guid>
      <description>good doctor 第一季 第四集 hello, I&amp;rsquo;ve looked everywhere 我哪儿都找遍了 All right, I&amp;rsquo;m here now, We&amp;rsquo;ll.. 好了,没事，我在这儿，我们要&amp;hellip; we&amp;rsquo;ll just keep looking until you find it 我们一直找，找到为止 why is furniture in the</description>
    </item>
    
    <item>
      <title>Message Queue</title>
      <link>https://note.strawbreey.com/posts/202010282332/</link>
      <pubDate>Wed, 28 Oct 2020 23:32:19 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010282332/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular TrackBy</title>
      <link>https://note.strawbreey.com/posts/202010271740/</link>
      <pubDate>Tue, 27 Oct 2020 17:40:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010271740/</guid>
      <description>trackBy: trackByFn [ngForTrackBy]=&amp;ldquo;trackByFn&amp;rdquo; trackByFn(index, item) { return item.id ? item.id : index; // or item.id } 参考链接 Using Pure Pipes To Generate NgFor TrackBy Identity Functions In Angular 7.2.7</description>
    </item>
    
    <item>
      <title>Php Fastcgi</title>
      <link>https://note.strawbreey.com/posts/202010271039/</link>
      <pubDate>Tue, 27 Oct 2020 10:39:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010271039/</guid>
      <description>CGI CGI全称&amp;quot;通用网关接口&amp;quot;（Common Gateway Interface），用于HTTP服务器与其它机器上的程序服务通信交流的一种</description>
    </item>
    
    <item>
      <title>Http Load Balancer</title>
      <link>https://note.strawbreey.com/posts/202010271032/</link>
      <pubDate>Tue, 27 Oct 2020 10:32:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010271032/</guid>
      <description>负载均衡 服务器端负载均衡 负载均衡是我们处理高并发、缓解网络压力和进行服务端扩容的重要手段之一，但是一般情况下我们所说的负载均衡通常都是指服务</description>
    </item>
    
    <item>
      <title>Js Apply Bind and Call</title>
      <link>https://note.strawbreey.com/posts/202010261948/</link>
      <pubDate>Mon, 26 Oct 2020 19:48:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261948/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Apply</title>
      <link>https://note.strawbreey.com/posts/202010261937/</link>
      <pubDate>Mon, 26 Oct 2020 19:37:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261937/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Currying</title>
      <link>https://note.strawbreey.com/posts/202010261921/</link>
      <pubDate>Mon, 26 Oct 2020 19:21:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261921/</guid>
      <description>函数柯里化 函数柯里化概念： 柯里化（Currying）是把接受多个参数的函数转变为接受一个单一参数的函数，并且返回接受余下的参数且返回结果的新</description>
    </item>
    
    <item>
      <title>Js Chaining Methods</title>
      <link>https://note.strawbreey.com/posts/202010261755/</link>
      <pubDate>Mon, 26 Oct 2020 17:55:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261755/</guid>
      <description>Chaining Methods, also known as Cascading, means repeatedly calling one method after another on an object, in one continuous line of code. Let us look at an example where method chaining can help us avoid repetition. class Car { constructor() { this.wheels = 4 this.doors = 4 this.topSpeed = 100 this.feulCapacity = &amp;#34;400 Litres&amp;#34; } setWheels(w) { this.wheels = w; return this; } setDoors(d) { this.doors = d; return this;</description>
    </item>
    
    <item>
      <title>Vue Optimize</title>
      <link>https://note.strawbreey.com/posts/202010261745/</link>
      <pubDate>Mon, 26 Oct 2020 17:45:00 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261745/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular Optimize</title>
      <link>https://note.strawbreey.com/posts/202010261653/</link>
      <pubDate>Mon, 26 Oct 2020 16:53:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010261653/</guid>
      <description>ChangeDetectionStrategy.OnPush Detaching the Change Detector Local Change Detection Run outside Angular Use trackBy option for *ngFor directive Web Workers Pure pipes instead of functions/getters in templates Async pipe Track by function Unsubscribing Webpack Bundle Analyzer You probably don’t need external libraries Styles per component Tree shaking One-time string initialization Dependencies between components CSS vs. JS animations Preloading Lazy loading Throw it away to the backend 文</description>
    </item>
    
    <item>
      <title>Gitignore</title>
      <link>https://note.strawbreey.com/posts/202010260957/</link>
      <pubDate>Mon, 26 Oct 2020 09:57:02 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010260957/</guid>
      <description>gitignore说明 在使用git的过程中，一般我们总会有些文件无需纳入git的管理，也不希望它们总出现在未跟踪文件列表，这些文件通常是日志</description>
    </item>
    
    <item>
      <title>Webpack Tutorial</title>
      <link>https://note.strawbreey.com/posts/202010240229/</link>
      <pubDate>Sat, 24 Oct 2020 02:29:20 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010240229/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Rxjs Tutorial</title>
      <link>https://note.strawbreey.com/posts/202010240228/</link>
      <pubDate>Sat, 24 Oct 2020 02:28:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010240228/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Js Map and Set</title>
      <link>https://note.strawbreey.com/posts/202010231441/</link>
      <pubDate>Fri, 23 Oct 2020 14:41:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010231441/</guid>
      <description>Map Map 迭代 Object.entries：从对象创建 Map Object.fromEntries：从 Map 创建对象 与其他数据结构互相转化 Set Set 迭代（iter</description>
    </item>
    
    <item>
      <title>Js Getter and Setter</title>
      <link>https://note.strawbreey.com/posts/202010231158/</link>
      <pubDate>Fri, 23 Oct 2020 11:58:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010231158/</guid>
      <description>有两种类型的对象属性。 第一种是 数据属性。我们已经知道如何使用它们了。到目前为止，我们使用过的所有属性都是数据属性。 第二种类型的属性是新东西。</description>
    </item>
    
    <item>
      <title>Redis Interview</title>
      <link>https://note.strawbreey.com/posts/202010222312/</link>
      <pubDate>Thu, 22 Oct 2020 23:12:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010222312/</guid>
      <description>简单介绍一下 Redis Redis 是一个用 C 语言内写的 开源高性能key-value非关系缓存(内存)数据库，它支持存储的value类型相对更多，包括strin</description>
    </item>
    
    <item>
      <title>Sql Interview</title>
      <link>https://note.strawbreey.com/posts/202010222304/</link>
      <pubDate>Thu, 22 Oct 2020 23:04:28 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010222304/</guid>
      <description>数据库的命令规划 所有数据库对象名称必须使用小写字母并用下划线分割 所有数据库对象名称禁止使用 MySQL 保留关键字（如果表名中包含关键字查询时，需要将其</description>
    </item>
    
    <item>
      <title>Yii Active Query</title>
      <link>https://note.strawbreey.com/posts/202010221141/</link>
      <pubDate>Thu, 22 Oct 2020 11:41:38 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010221141/</guid>
      <description>ActiveQuery mainly provides the following methods to retrieve the query results:
 one(): returns a single record populated with the first row of data. all(): returns all records based on the query results. count(): returns the number of records. sum(): returns the sum over the specified column. average(): returns the average over the specified column. min(): returns the min over the specified column. max(): returns the max over the specified column.</description>
    </item>
    
    <item>
      <title>Js Promise</title>
      <link>https://note.strawbreey.com/posts/202010212301/</link>
      <pubDate>Wed, 21 Oct 2020 23:01:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010212301/</guid>
      <description>Promise 对象的构造器（constructor）语法如下： let promise = new Promise(function(resolve, reject) { // executor（生产者代码，“歌手”） }); 当 executor 获得了结果，无论是早还是晚都</description>
    </item>
    
    <item>
      <title>Php Header</title>
      <link>https://note.strawbreey.com/posts/202010211958/</link>
      <pubDate>Wed, 21 Oct 2020 19:58:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010211958/</guid>
      <description>fread fread — 读取文件（可安全用于二进制文件） fread ( resource $handle , int $length ) : string // handle 文件系统指针，是典型地由 fopen() 创建的 resource(资源)。 // length 最多读取 length 个字节</description>
    </item>
    
    <item>
      <title>Nignx X Sendfile</title>
      <link>https://note.strawbreey.com/posts/202010211928/</link>
      <pubDate>Wed, 21 Oct 2020 19:28:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010211928/</guid>
      <description>很多时候用户需要从网站下载文件，如果文件是可以通过一个固定链接公开获取的，那么我们只需将文件存放到 webroot下的目录里就好。但大多数情况</description>
    </item>
    
    <item>
      <title>Php Flush and Ob_flush</title>
      <link>https://note.strawbreey.com/posts/202010211745/</link>
      <pubDate>Wed, 21 Oct 2020 17:45:52 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010211745/</guid>
      <description>flush flush — 刷新输出缓冲 flush ( void ) : void 刷新PHP程序的缓冲，而不论PHP执行在何种情况下（CGI ，web服务器等等）。该函数将当前为止程序的所有输出</description>
    </item>
    
    <item>
      <title>Php Download</title>
      <link>https://note.strawbreey.com/posts/202010211553/</link>
      <pubDate>Wed, 21 Oct 2020 15:53:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010211553/</guid>
      <description>header(&#39;Access-Control-Allow-Origin: *&#39;); // header(&#39;location:http://www.baidu.com&#39;); // var_dump(&#39;66666&#39;); header(&amp;quot;Location: $file_path&amp;quot;); header(&#39;Content-type: application/octet-stream&#39;);//告诉浏览器这是一个文件 header(&#39;Content-Disposition: attachment; filename=&amp;quot;&#39;.$f</description>
    </item>
    
    <item>
      <title>Network Agent</title>
      <link>https://note.strawbreey.com/posts/202010201951/</link>
      <pubDate>Tue, 20 Oct 2020 19:51:03 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010201951/</guid>
      <description>计算机网络结构体系 OSI 的全称是 Open Systems Interconnect, 是 ISO (国际标准化组织)针对当年每家网络公司都是私有网络协议，群雄争霸、互不兼容的情况，推出的一个通用通信协</description>
    </item>
    
    <item>
      <title>Php Timeout</title>
      <link>https://note.strawbreey.com/posts/202010201816/</link>
      <pubDate>Tue, 20 Oct 2020 18:16:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010201816/</guid>
      <description>设置PHP脚本执行超时的时间有下面这样一些方法： php.ini 中限定程序的最长执行时间是 30 秒，这是由 php.ini 配置文件中的 max_execution_time 变量指定，倘若你有一个需要颇多时间才</description>
    </item>
    
    <item>
      <title>Vim Swap</title>
      <link>https://note.strawbreey.com/posts/202010201126/</link>
      <pubDate>Tue, 20 Oct 2020 11:26:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010201126/</guid>
      <description>Found a swap file by the name E325: ATTENTION Found a swap file by the name &amp;#34;.git/.MERGE_MSG.swp&amp;#34; owned by: xxxxxx dated: Mon Nov 12 23:17:40 2012 file name: ~xxxxxx/Desktop/My-ios-App/.git/MERGE_MSG modified: YES user name: xxxxxx host name: unknown-b8-8d-12-22-27-72.lan process ID: 1639 While opening file &amp;#34;.git/MERGE_MSG&amp;#34; dated: Tue Nov 13 14:06:48 2012 NEWER than swap file! (1) Another program may be editing the same file. If this is the case, be careful</description>
    </item>
    
    <item>
      <title>Php Exit and Die</title>
      <link>https://note.strawbreey.com/posts/202010201037/</link>
      <pubDate>Tue, 20 Oct 2020 10:37:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010201037/</guid>
      <description>PHP中exit()与die()的区别 PHP手册：die() Equivalent to exit()。 说明：die()和exit()都是中止脚本执行函数；其实exi</description>
    </item>
    
    <item>
      <title>Js String Methods</title>
      <link>https://note.strawbreey.com/posts/202010200953/</link>
      <pubDate>Tue, 20 Oct 2020 09:53:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010200953/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recommended Books</title>
      <link>https://note.strawbreey.com/posts/202010200014/</link>
      <pubDate>Tue, 20 Oct 2020 00:14:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010200014/</guid>
      <description>javascript angular vue react nest.js mysql redis php golang linux nginx git 计算机程序设计艺术 C Primer Plus C程序设计语言 鸟哥的Linux私房菜 TCP/IP详解卷1：协议 Java编程语言 Python核</description>
    </item>
    
    <item>
      <title>Linux Shell</title>
      <link>https://note.strawbreey.com/posts/202010192312/</link>
      <pubDate>Mon, 19 Oct 2020 23:12:33 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010192312/</guid>
      <description>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。 Shell 是指一种应用程序，这个应用程序提供了一</description>
    </item>
    
    <item>
      <title>Linux Bash</title>
      <link>https://note.strawbreey.com/posts/202010192308/</link>
      <pubDate>Mon, 19 Oct 2020 23:08:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010192308/</guid>
      <description>bash 管理整个计算机硬件的其实是操作系统的核心 (kernel)，这个核心是需要被保护的！ 所以我们一般使用者就只能透过 shell 来跟核心沟通，以让核心达到</description>
    </item>
    
    <item>
      <title>Curl</title>
      <link>https://note.strawbreey.com/posts/202010191955/</link>
      <pubDate>Mon, 19 Oct 2020 19:55:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010191955/</guid>
      <description>cURL是一个利用URL语法在命令行下工作的文件传输工具，1997年首次发行。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称cU</description>
    </item>
    
    <item>
      <title>Js Microtask Queue</title>
      <link>https://note.strawbreey.com/posts/202010182338/</link>
      <pubDate>Sun, 18 Oct 2020 23:38:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010182338/</guid>
      <description>浏览器中 JavaScript 的执行流程和 Node.js 中的流程都是基于 事件循环 的。 理解事件循环的工作方式对于代码优化很重要，有时对于正确的架构也很重要。 事件循环 事件循环 的</description>
    </item>
    
    <item>
      <title>Mysql Utf8</title>
      <link>https://note.strawbreey.com/posts/202010172053/</link>
      <pubDate>Sat, 17 Oct 2020 20:53:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010172053/</guid>
      <description>客户端是UTF-8 编码, 服务器也是 UTF-8 编码的，数据库也是，就连要保存的这个字符串&amp;quot; &amp;lt;…&amp;ldquo;也是合法的 UTF-8。 但,</description>
    </item>
    
    <item>
      <title>Js Garbage Colloction</title>
      <link>https://note.strawbreey.com/posts/202010171759/</link>
      <pubDate>Sat, 17 Oct 2020 17:59:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010171759/</guid>
      <description>垃圾回收 对于开发者来说，JavaScript 的内存管理是自动的、无形的。我们创建的原始值、对象、函数……这一切都会占用内存。 当我们不再需要某</description>
    </item>
    
    <item>
      <title>Js Optional Chaining</title>
      <link>https://note.strawbreey.com/posts/202010171752/</link>
      <pubDate>Sat, 17 Oct 2020 17:52:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010171752/</guid>
      <description>可选链 &amp;ldquo;?.&amp;rdquo; 可选链 ?. 是一种访问嵌套对象属性的防错误方法。即使中间的属性不存在，也不会出现错误。 let user = {}; // 这个 user 恰巧没有 address alert(user?.address); // undefined! alert(user?.address.street); // undefined! 不要过度使用</description>
    </item>
    
    <item>
      <title>Course Stanford</title>
      <link>https://note.strawbreey.com/posts/202010161216/</link>
      <pubDate>Fri, 16 Oct 2020 12:16:44 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010161216/</guid>
      <description>math 51 多维微积分 http://web.stanford.edu/class/math51 EE 103 线性代数 http://web.stanford.edu/class/ee103 CS 109 概率论 http://web.stanford.edu/class/cs109 CS 106 A 程序设计基础 http://web.stanford.edu/class/cs106a CS 106 B 程序设计基础 http://web.stanford.edu/class/cs106b CS 107 计算机系统导论 http://web.stanford.edu/class/cs107 CS 140 操作系统 http://web.stanford.edu/class/cs145 CS 143 编译器 http://web.stanford.edu/class/cs143 CS 145 数据库导</description>
    </item>
    
    <item>
      <title>Js Module</title>
      <link>https://note.strawbreey.com/posts/202010160013/</link>
      <pubDate>Fri, 16 Oct 2020 00:13:48 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010160013/</guid>
      <description>JavaScript 很长一段时间内都没有语言级（language-level）的模块语法。这不是一个问题，因为最初的脚本又小又简单，所以没必要将其模块化。 但是</description>
    </item>
    
    <item>
      <title>Linux What</title>
      <link>https://note.strawbreey.com/posts/202010142250/</link>
      <pubDate>Wed, 14 Oct 2020 22:50:51 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010142250/</guid>
      <description>Linux是什么 请问Windows操作系统能否在苹果公司的麦金塔计算机(MAC)上面安装与运作？ 由上面的说明中，我们知道硬件是由『核心』来控</description>
    </item>
    
    <item>
      <title>Web Data Storage</title>
      <link>https://note.strawbreey.com/posts/202010142236/</link>
      <pubDate>Wed, 14 Oct 2020 22:36:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010142236/</guid>
      <description>Cookie Cookie 是直接存储在浏览器中的一小串数据。它们是 HTTP 协议的一部分，由 RFC 6265 规范定义。 Cookie 通常是由 Web 服务器使用响应 Set-Cookie HTTP-header 设置的。然后浏览器使用 Cookie HTTP-header 将它们自</description>
    </item>
    
    <item>
      <title>Web Components</title>
      <link>https://note.strawbreey.com/posts/202010142145/</link>
      <pubDate>Wed, 14 Oct 2020 21:45:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010142145/</guid>
      <description>众所周知，开发复杂软件的原则是：不要让软件复杂 如果某个部分变得复杂了 —— 将其拆分成更简单的部分，再以最简明的方式组合起来。 只有让复杂的事情简</description>
    </item>
    
    <item>
      <title>Good Doctor 1 3</title>
      <link>https://note.strawbreey.com/posts/202010132328/</link>
      <pubDate>Tue, 13 Oct 2020 23:28:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010132328/</guid>
      <description>良医 第一季 第三集 01:35 so I&amp;rsquo;m in the middle of (正忙于) &amp;ldquo;Uncharted&amp;rdquo;, and I&amp;rsquo;m dead 我正在玩无人之地，但是没电了 Can I borrow some triples A&amp;rsquo;s 能借几节7号电池吗 I&amp;rsquo;m your neighbor 我是你的邻居 hello 你好 34 ? 34号</description>
    </item>
    
    <item>
      <title>Js Regexp</title>
      <link>https://note.strawbreey.com/posts/202010131741/</link>
      <pubDate>Tue, 13 Oct 2020 17:41:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010131741/</guid>
      <description>正则表达式 在 JavaScript 中，正则表达式通过内置的“RegExp”类的对象来实现，并与字符串集成。 创建正则表达式有两个方式 // new RegExp regexp = new RegExp(&amp;#34;pattern&amp;#34;, &amp;#34;flags&amp;#34;); // 表达式 regexp = /pattern/;</description>
    </item>
    
    <item>
      <title>Linux Command</title>
      <link>https://note.strawbreey.com/posts/202010131059/</link>
      <pubDate>Tue, 13 Oct 2020 10:59:36 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010131059/</guid>
      <description>Linux Command 查看磁盘空间大小 df -hl # G 第一列Filesystem，磁盘分区 第二列Size，磁盘分区的大小 第三列Used，已使用的空间 第四列Avail，</description>
    </item>
    
    <item>
      <title>Go Source Code</title>
      <link>https://note.strawbreey.com/posts/202010131005/</link>
      <pubDate>Tue, 13 Oct 2020 10:05:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010131005/</guid>
      <description>Go 的 源码在</description>
    </item>
    
    <item>
      <title>Go Builtin</title>
      <link>https://note.strawbreey.com/posts/202010121532/</link>
      <pubDate>Mon, 12 Oct 2020 15:32:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010121532/</guid>
      <description>Package builtin provides documentation for Go&amp;rsquo;s predeclared identifiers (预声明的标识符). The items documented here are not actually in package builtin but their descriptions here allow godoc to present documentation for the language&amp;rsquo;s special identifiers (特殊标识符). Package files builtin.go Constants true and false are the two untyped boolean values. const ( true = 0 == 0</description>
    </item>
    
    <item>
      <title>Go Strings Api</title>
      <link>https://note.strawbreey.com/posts/202010121150/</link>
      <pubDate>Mon, 12 Oct 2020 11:50:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010121150/</guid>
      <description>Package strings implements simple functions to manipulate UTF-8 encoded strings. func Compare func Compare (a, b string) int // Compare returns an integer comparing two strings lexicographically. The result will be 0 if a==b, -1 if a &amp;lt; b, and +1 if a &amp;gt; b. package main import ( &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { strings.Compare(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;) // -1 strings.Compare(&amp;#34;a&amp;#34;, &amp;#34;a&amp;#34;) // 0 strings.Compare(&amp;#34;b&amp;#34;, &amp;#34;a&amp;#34;) // 1 } func Containes</description>
    </item>
    
    <item>
      <title>Php Session</title>
      <link>https://note.strawbreey.com/posts/202010121056/</link>
      <pubDate>Mon, 12 Oct 2020 10:56:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010121056/</guid>
      <description>会话机制(Session）在PHP 中用于保持用户连续访问Web应用时的相关数据，有助于创建高度定制化的程序、增加站点的吸引力。 会话支持在 PHP 中</description>
    </item>
    
    <item>
      <title>Php Core</title>
      <link>https://note.strawbreey.com/posts/202010121039/</link>
      <pubDate>Mon, 12 Oct 2020 10:39:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010121039/</guid>
      <description>Zend API 随着时间不断向前进化，PHP 已变成为一种更健壮与普及的编程语言。随着 PHP 5 的推出，Zend Engine 2 (ZE2)也到来了。ZE2 带来了全新的面向对</description>
    </item>
    
    <item>
      <title>Sql Cross Join</title>
      <link>https://note.strawbreey.com/posts/202010102200/</link>
      <pubDate>Sat, 10 Oct 2020 22:00:12 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010102200/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nginx Rewrite</title>
      <link>https://note.strawbreey.com/posts/202010101054/</link>
      <pubDate>Sat, 10 Oct 2020 10:54:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010101054/</guid>
      <description>Rewrite 是nginx 服务器提供的一个重要的基本功能，用于URL的重写 地址重写和转发 &amp;ldquo;地址重写&amp;rdquo;，实际上是为了实现地址标准化</description>
    </item>
    
    <item>
      <title>Nginx Location</title>
      <link>https://note.strawbreey.com/posts/202010101032/</link>
      <pubDate>Sat, 10 Oct 2020 10:32:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010101032/</guid>
      <description>nginx 指定文件路径有两种方式 listen参数决定Nginx服务如何监听端口。在listen后可以只加IP地址、端口或主机名，非常灵活，例如：[插</description>
    </item>
    
    <item>
      <title>Php Find Php</title>
      <link>https://note.strawbreey.com/posts/202010101005/</link>
      <pubDate>Sat, 10 Oct 2020 10:05:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010101005/</guid>
      <description>Linux下查找及修改PHP配置文件ini的路径 一、查找PHP配置文件 说到查找，当然首先想到的是find命令。执行如下命令，即可查找到php</description>
    </item>
    
    <item>
      <title>Linux Fdisk</title>
      <link>https://note.strawbreey.com/posts/202010091952/</link>
      <pubDate>Fri, 09 Oct 2020 19:52:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010091952/</guid>
      <description>查看所有磁盘信息 fdisk -lu</description>
    </item>
    
    <item>
      <title>Linux Soft Link</title>
      <link>https://note.strawbreey.com/posts/202010091949/</link>
      <pubDate>Fri, 09 Oct 2020 19:49:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010091949/</guid>
      <description>创建软链接 ln -s [源文件或目录] [目标文件或目录] 例如： # 当前路径创建test 引向/var/www/test 文件夹 ln –s /var/www/test test # 创建/var/t</description>
    </item>
    
    <item>
      <title>Linux Firewall</title>
      <link>https://note.strawbreey.com/posts/202010091945/</link>
      <pubDate>Fri, 09 Oct 2020 19:45:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010091945/</guid>
      <description>curl: (7) Failed connect to 10.0.0.210:9200; 拒绝连接 没有到主机的路由这种问题很常见，多数是由机器的防火墙没有关闭。 Ubuntu 查看防火墙状态 ufw status 关闭防火墙 ufw disable centos6 查看防火墙状态 service iptables status 关</description>
    </item>
    
    <item>
      <title>Linux Install Php Imagick</title>
      <link>https://note.strawbreey.com/posts/202010091454/</link>
      <pubDate>Fri, 09 Oct 2020 14:54:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010091454/</guid>
      <description>说明： php安装目录：/usr/local/php5 php.ini配置文件路径：/usr/local/php5/etc/php.ini Ngi</description>
    </item>
    
    <item>
      <title>Front End Interview Standard</title>
      <link>https://note.strawbreey.com/posts/202010091435/</link>
      <pubDate>Fri, 09 Oct 2020 14:35:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010091435/</guid>
      <description>不同公司，不同岗位，不同业务背景对优秀前端的要求可能会有差异，以阿里巴巴淘系技术部的一则JD为例，来拆解一下，不同级别的前端工程师应该具备什</description>
    </item>
    
    <item>
      <title>Nestjs Tutorial</title>
      <link>https://note.strawbreey.com/posts/202010080225/</link>
      <pubDate>Thu, 08 Oct 2020 02:25:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010080225/</guid>
      <description>Nest 是一个用于构建高效，可扩展的 Node.js 服务器端应用程序的框架。它使用渐进式 JavaScript，内置并完全支持 TypeScript（但仍然允许开发</description>
    </item>
    
    <item>
      <title>Nestjs Deploy</title>
      <link>https://note.strawbreey.com/posts/202010080216/</link>
      <pubDate>Thu, 08 Oct 2020 02:16:35 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010080216/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Beego</title>
      <link>https://note.strawbreey.com/posts/202010080209/</link>
      <pubDate>Thu, 08 Oct 2020 02:09:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202010080209/</guid>
      <description>deploy 通过 bee 创建的项目，beego 默认情况下是开发模式。 我们可以通过如下的方式改变我们的模式： beego.RunMode = &amp;quot;prod&amp;quot; 或者我们在 conf/app.conf 下面设置如下： runmode = prod 发行部署 Go 语</description>
    </item>
    
    <item>
      <title>Js Array Helper</title>
      <link>https://note.strawbreey.com/posts/202009281631/</link>
      <pubDate>Mon, 28 Sep 2020 16:31:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009281631/</guid>
      <description>js Array Helper 扩展 // 数组去重 // 数组并集 // 数组交集 // 数组差集 // 数组排序</description>
    </item>
    
    <item>
      <title>Js Array</title>
      <link>https://note.strawbreey.com/posts/202009281106/</link>
      <pubDate>Mon, 28 Sep 2020 11:06:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009281106/</guid>
      <description>Array.from() // Syntax // arrayLike: An array-like or iterable object to convert to an array. // mapFn Optional: Map function to call on every element of the array. // thisArg Optional: Value to use as this when executing mapFn. // return value: A new Array instance. Array.from(arrayLike [, mapFn [, thisArg]]) console.log(Array.from(&amp;#39;foo&amp;#39;)); // expected output: Array [&amp;#34;f&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34;o&amp;#34;] console.log(Array.from([1, 2, 3], x =&amp;gt; x + x)); // expected output:</description>
    </item>
    
    <item>
      <title>Js Deep Copy</title>
      <link>https://note.strawbreey.com/posts/202009271938/</link>
      <pubDate>Sun, 27 Sep 2020 19:38:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271938/</guid>
      <description>JSON.parse/stringify if you do not use Date, function, undefined, Infinity, RegFexps, Maps, Set Blobs, FileList，ImageData， sparseArray,Typed Array or other complex type within you object。 如果不使用复制的数据类型, JSON序列化是最</description>
    </item>
    
    <item>
      <title>Swagger Php</title>
      <link>https://note.strawbreey.com/posts/202009271624/</link>
      <pubDate>Sun, 27 Sep 2020 16:24:23 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271624/</guid>
      <description>Generate interactive (交互式) OpenAPI documentation for your RESTful API using doctrine annotations (注释). Swagger 是一个简单但功能强大的 API 表达工具。它具有地球上最大的 API 工具生态系统，数以千计的开发人员，使用几乎</description>
    </item>
    
    <item>
      <title>Chrome Devtools</title>
      <link>https://note.strawbreey.com/posts/202009271614/</link>
      <pubDate>Sun, 27 Sep 2020 16:14:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271614/</guid>
      <description>chrome-devtools</description>
    </item>
    
    <item>
      <title>Http Status Code</title>
      <link>https://note.strawbreey.com/posts/202009271542/</link>
      <pubDate>Sun, 27 Sep 2020 15:42:31 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271542/</guid>
      <description>HTTP 响应状态代码指示特定 HTTP 请求是否已成功完成。响应分为五类：信息响应(100–199)，成功响应(200–299)，重定向(300–399)，</description>
    </item>
    
    <item>
      <title>Hugo Install</title>
      <link>https://note.strawbreey.com/posts/202009271542/</link>
      <pubDate>Sun, 27 Sep 2020 15:42:31 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271542/</guid>
      <description>If you are on a Windows machine and use Chocolatey for package management, you can install Hugo with the following one-liner
more # install-with-chocolatey.ps1 choco install hugo -confirm # Or if you need the “extended” Sass/SCSS version: choco install hugo-extended -confirm If you are on a Windows machine and use Scoop for package management, you can install Hugo with the following one-liner:
scoop install hugo # Or install the extended version with: scoop install hugo-extended Source</description>
    </item>
    
    <item>
      <title>Http Cache</title>
      <link>https://note.strawbreey.com/posts/202009271534/</link>
      <pubDate>Sun, 27 Sep 2020 15:34:05 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271534/</guid>
      <description>Http 缓存 通过复用以前获取的资源，可以显著提高网站和应用程序的性能。Web 缓存减少了等待时间和网络流量，因此减少了显示资源表示形式所需的时间。通</description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://note.strawbreey.com/posts/202009271142/</link>
      <pubDate>Sun, 27 Sep 2020 11:42:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271142/</guid>
      <description>Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高动态</description>
    </item>
    
    <item>
      <title>Cors</title>
      <link>https://note.strawbreey.com/posts/202009271105/</link>
      <pubDate>Sun, 27 Sep 2020 11:05:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271105/</guid>
      <description>跨源资源共享 (CORS: Cross-origin resource sharing) （或通俗地译为跨域资源共享）是一种机制，该机制使用附加的 HTTP 头来告诉浏览器，准许运行在一个源上的Web应用访问位于另一不同</description>
    </item>
    
    <item>
      <title>Es6 Symbol</title>
      <link>https://note.strawbreey.com/posts/202009271051/</link>
      <pubDate>Sun, 27 Sep 2020 10:51:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271051/</guid>
      <description>symbol 是一种基本数据类型 （primitive data type）。Symbol()函数会返回symbol类型的值，该类型具有静态属性和静态方法。它的静态</description>
    </item>
    
    <item>
      <title>Typescript Tutorial</title>
      <link>https://note.strawbreey.com/posts/202009271024/</link>
      <pubDate>Sun, 27 Sep 2020 10:24:02 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271024/</guid>
      <description>TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器</description>
    </item>
    
    <item>
      <title>Webpack Tutoral</title>
      <link>https://note.strawbreey.com/posts/202009271015/</link>
      <pubDate>Sun, 27 Sep 2020 10:15:53 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009271015/</guid>
      <description>webpack 是一个开源的JavaScript模块打包工具，核心功能是解决模块之间的依赖,把各个模块安装特定的规则和顺序组织在一起，并合并成为一个js文</description>
    </item>
    
    <item>
      <title>Hot Module Replacement</title>
      <link>https://note.strawbreey.com/posts/202009251014/</link>
      <pubDate>Fri, 25 Sep 2020 10:14:13 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009251014/</guid>
      <description>浏览器刷新页面的方法 Location.reload // 语法 location.reload([forcedReload]) // demo window.location.reload(true); forcedReload 可选 该参数要求为 布尔 类型，当取值为 true 时，将强制浏览器从服务器重新获取当前页面资源，而不是从浏览器的缓存</description>
    </item>
    
    <item>
      <title>Git Tutorial</title>
      <link>https://note.strawbreey.com/posts/202009241929/</link>
      <pubDate>Thu, 24 Sep 2020 19:29:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009241929/</guid>
      <description>本地版本控制系统 许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。 这么做唯一的好处就是简单，但是特别容易</description>
    </item>
    
    <item>
      <title>Php Array Helper</title>
      <link>https://note.strawbreey.com/posts/202009241545/</link>
      <pubDate>Thu, 24 Sep 2020 15:45:24 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009241545/</guid>
      <description>获取值 getValue() 用原生PHP从一个对象、数组、或者包含这两者的一个复杂数据结构中获取数据是非常繁琐的。 你首先得使用 isset 检查 key 是否存在, 然后如果存在你就</description>
    </item>
    
    <item>
      <title>Php String</title>
      <link>https://note.strawbreey.com/posts/202009241509/</link>
      <pubDate>Thu, 24 Sep 2020 15:09:55 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009241509/</guid>
      <description>一个字符串 string 就是由一系列的字符组成，其中每个字符等同于一个字节。这意味着 PHP 只能支持 256 的字符集，因此不支持 Unicode 。详见字符串类型详解。 语法 一个字符</description>
    </item>
    
    <item>
      <title>Php Array Practice</title>
      <link>https://note.strawbreey.com/posts/202009241457/</link>
      <pubDate>Thu, 24 Sep 2020 14:57:21 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009241457/</guid>
      <description>合并两个二维数组 $arr1 = [] $arr2 = [] $</description>
    </item>
    
    <item>
      <title>Php Array Code Analysis</title>
      <link>https://note.strawbreey.com/posts/202009241055/</link>
      <pubDate>Thu, 24 Sep 2020 10:55:42 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009241055/</guid>
      <description>php中, 数组既是一个连续的数组，也是K-V映射的map 数组的定义 php 数组是一个字典，存储</description>
    </item>
    
    <item>
      <title>Php Common Code</title>
      <link>https://note.strawbreey.com/posts/202009231953/</link>
      <pubDate>Wed, 23 Sep 2020 19:53:01 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231953/</guid>
      <description>分割字符串 $str = aaa,bbb,ccc explode(&amp;#39;,&amp;#39;, $str) // [aaa, bbb, ccc] 数组push array_push($arr, $new); 获取对应列 array_column($arr, &amp;#39;key&amp;#39;) array_column($arr, 1) array_diff 取差 $arr = [1,2,3] $newArr = [2,3,4] array_diff($arr, $newArr) // [1]</description>
    </item>
    
    <item>
      <title>Sql Optimization</title>
      <link>https://note.strawbreey.com/posts/202009231636/</link>
      <pubDate>Wed, 23 Sep 2020 16:36:26 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231636/</guid>
      <description>SQL语句执行步骤 语法分析&amp;gt; 语义分析&amp;gt; 视图转换 &amp;gt;表达式转换&amp;gt; 选择优化器 &amp;gt;选择连接方式 &amp;gt;选择连接顺序 &amp;gt</description>
    </item>
    
    <item>
      <title>Sql Insert</title>
      <link>https://note.strawbreey.com/posts/202009231624/</link>
      <pubDate>Wed, 23 Sep 2020 16:24:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231624/</guid>
      <description>SQL INSERT INTO INSERT INTO table_name VALUES (value1, value2, value3, ...); INSERT INTO table_name (column1, column2， column3) VALUES (value1, value2, value3, ...); 数据库大批量SQL插入性能优化 一条SQL语句插入多条数据 在事务中进行插入 数据有序插</description>
    </item>
    
    <item>
      <title>Php Quotation Marks</title>
      <link>https://note.strawbreey.com/posts/202009231618/</link>
      <pubDate>Wed, 23 Sep 2020 16:18:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231618/</guid>
      <description>在PHP中 单引号代表纯字符串，不论里面有什么东西，当字符串处理 $a = &amp;#39;abc&amp;#39;; ehco &amp;#39;i am $a&amp;#39;; // i am $a 双引号代表可以处理的字符串，如果字符串中有变量，那么，会</description>
    </item>
    
    <item>
      <title>Php Filter</title>
      <link>https://note.strawbreey.com/posts/202009231556/</link>
      <pubDate>Wed, 23 Sep 2020 15:56:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231556/</guid>
      <description>过滤器函数 filter_has_var — 检测是否存在指定类型的变量 filter_id — 返回与某个特定名称的过滤器相关联的id filter_input_array — 获取一系列外部变量，并且可以通过过滤器处理它们 filter_input — 通过</description>
    </item>
    
    <item>
      <title>Php Variable Handle</title>
      <link>https://note.strawbreey.com/posts/202009231536/</link>
      <pubDate>Wed, 23 Sep 2020 15:36:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231536/</guid>
      <description>boolval — 获取变量的布尔值 echo &amp;#39;0: &amp;#39;.(boolval(0) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;42: &amp;#39;.(boolval(42) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;0.0: &amp;#39;.(boolval(0.0) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;4.2: &amp;#39;.(boolval(4.2) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;&amp;#34;: &amp;#39;.(boolval(&amp;#34;&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;string&amp;#34;: &amp;#39;.(boolval(&amp;#34;string&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;0&amp;#34;: &amp;#39;.(boolval(&amp;#34;0&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;&amp;#34;1&amp;#34;: &amp;#39;.(boolval(&amp;#34;1&amp;#34;) ? &amp;#39;true&amp;#39; : &amp;#39;false&amp;#39;).&amp;#34;\n&amp;#34;; echo &amp;#39;[1, 2]: &amp;#39;.(boolval([1,</description>
    </item>
    
    <item>
      <title>Php Array Function</title>
      <link>https://note.strawbreey.com/posts/202009231141/</link>
      <pubDate>Wed, 23 Sep 2020 11:41:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231141/</guid>
      <description>array_change_key_case: 将数组所有键名全大写或者小写 array_change_key_case ( array $array [, int $case = CASE_LOWER ] ) : array // 参数 array 需要操作的数组, case 可以在这里用两个常量，CASE_UPPER 或 CASE_LO</description>
    </item>
    
    <item>
      <title>Php Object</title>
      <link>https://note.strawbreey.com/posts/202009231136/</link>
      <pubDate>Wed, 23 Sep 2020 11:36:50 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231136/</guid>
      <description>对象初始化 class foo { function do_foo() { echo &amp;#34;Doing foo.&amp;#34;; } } $bar = new foo; $bar-&amp;gt;do_foo(); 转换为对象 如果将一个对象转换成对象，它将不会有任何变化。如果其它任何类型的值被转换成对象，将会创建</description>
    </item>
    
    <item>
      <title>Php Array</title>
      <link>https://note.strawbreey.com/posts/202009231009/</link>
      <pubDate>Wed, 23 Sep 2020 10:09:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009231009/</guid>
      <description>An array in PHP is actually an ordered map. A map is a type that associates values to keys. This type is optimized for several different uses; it can be treated as an array, list (vector), hash table (an implementation of a map), dictionary, collection, stack, queue, and probably more. As array values can be other arrays, trees and multidimensional arrays are also possible. PHP 中的数组实</description>
    </item>
    
    <item>
      <title>Web Safe</title>
      <link>https://note.strawbreey.com/posts/202009221438/</link>
      <pubDate>Tue, 22 Sep 2020 14:38:14 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009221438/</guid>
      <description>web 安全领域中，常见的攻击方式，大概以下几种 跨站脚本 跨站伪造请求 SQL 注入() 文件上传漏洞 分布式拒绝服务 SELECT uid,username FROM user WHERE username=&amp;#39;plhwin&amp;#39; -- 把plhwin 改成 plhwin&amp;#39;;SHOW TABLES-- hack&amp;#39; SELECT uid,username</description>
    </item>
    
    <item>
      <title>Vim Tutorial</title>
      <link>https://note.strawbreey.com/posts/202009221041/</link>
      <pubDate>Tue, 22 Sep 2020 10:41:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009221041/</guid>
      <description>在 Linux 的世界中，绝大部分的配置文件都是以 ASCII 的纯文本形态存在，因此利用简单的文字编辑软件就能够修改设定了 为什么要学vim 所有的 linux 系统都会内建 vi 文</description>
    </item>
    
    <item>
      <title>Shell Tutorial</title>
      <link>https://note.strawbreey.com/posts/202009221018/</link>
      <pubDate>Tue, 22 Sep 2020 10:18:30 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009221018/</guid>
      <description>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。 Shell 是指一种应用程序，这个应用程序提供了一</description>
    </item>
    
    <item>
      <title>Sql Transaction Processing</title>
      <link>https://note.strawbreey.com/posts/202009211717/</link>
      <pubDate>Mon, 21 Sep 2020 17:17:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009211717/</guid>
      <description>transaction processing (事务处理) 使用事务处理，要么完全支持，要么完全不执行，来维护数据库的完整性。 -- 开始事务 BEGIN TRANSACTION COMMIT TRANSACTION ROLLBACL 回退/测回 DELECT FORM ORDER; ROLLBACK; COMMIT 一般的sql语句都</description>
    </item>
    
    <item>
      <title>Go Goroutine</title>
      <link>https://note.strawbreey.com/posts/202009211628/</link>
      <pubDate>Mon, 21 Sep 2020 16:28:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009211628/</guid>
      <description>Go 语言支持并发，我们只需要通过 go 关键字来开启 goroutine 即可。 goroutine 是轻量级线程，goroutine 的调度是由 Golang 运行时进行管理的。 // go 函数名 (参数列表) go</description>
    </item>
    
    <item>
      <title>Redis Tutorial</title>
      <link>https://note.strawbreey.com/posts/202009211029/</link>
      <pubDate>Mon, 21 Sep 2020 10:29:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009211029/</guid>
      <description>Install # download redis wget http://download.redis.io/releases/redis-2.8.17.tar.gz # Unzip z:gzip压缩 c:创建压缩包 v:显示打包压缩解压过程 f:接着压缩 t:查看压缩包内容 x:解压 X:指定文件列表形式排除不需要打</description>
    </item>
    
    <item>
      <title>Angular Intervivew</title>
      <link>https://note.strawbreey.com/posts/202009210957/</link>
      <pubDate>Mon, 21 Sep 2020 09:57:06 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009210957/</guid>
      <description>数据变更的监测方式有哪些，Angular采用了什么，有什么好处，有什么坏处，如何处理数据变更中产生的异常？ 如何避免不收敛的数据变更？ Knoc</description>
    </item>
    
    <item>
      <title>Angular Schematic</title>
      <link>https://note.strawbreey.com/posts/202009181940/</link>
      <pubDate>Fri, 18 Sep 2020 19:40:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009181940/</guid>
      <description>原理图 (Schematic) 原理图是一个基于模板的支持复杂逻辑的代码生成器。它是一组通过生成代码或修改代码来转换软件项目的指令。原理图会打包成集合（collec</description>
    </item>
    
    <item>
      <title>Yarn Cli</title>
      <link>https://note.strawbreey.com/posts/202009181011/</link>
      <pubDate>Fri, 18 Sep 2020 10:11:16 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009181011/</guid>
      <description>yarn is a package manager for your code. It allows you to use and share code with other developers from around the world. Yarn does this quickly, securely, and reliably so you don&amp;rsquo;t ever have to worry. Yarn allows you to use other developers&#39; solutions to different problems, making it easier for you to develop your software. If you have problems, you can report issues or contribute back, and when</description>
    </item>
    
    <item>
      <title>Angular Performance Optimization</title>
      <link>https://note.strawbreey.com/posts/202009161739/</link>
      <pubDate>Wed, 16 Sep 2020 17:39:04 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161739/</guid>
      <description>Angualr 性能优化 angular编译的js基本都很大达到了mb级别，加载起来很占用带宽，不过angualr也提供了编译时压缩代码的功能，angula</description>
    </item>
    
    <item>
      <title>Vscode Hotkeys</title>
      <link>https://note.strawbreey.com/posts/202009161533/</link>
      <pubDate>Wed, 16 Sep 2020 15:33:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161533/</guid>
      <description>keyboard-shortcuts-windows 常用快捷键 ctrl + p 文件搜索</description>
    </item>
    
    <item>
      <title>Vim Command</title>
      <link>https://note.strawbreey.com/posts/202009161451/</link>
      <pubDate>Wed, 16 Sep 2020 14:51:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161451/</guid>
      <description># 安装 sudo apt-get install vim # Ubuntu # vim 教程 新手指南 vimtutor # 移动光标 hjkl 2w # 向前移动两个单词 3e # 向前移动到第 3 个单词的末尾 0 # 移动到行首 $ # 当前行的末尾 gg # 文件第一</description>
    </item>
    
    <item>
      <title>Linux Cli</title>
      <link>https://note.strawbreey.com/posts/202009161142/</link>
      <pubDate>Wed, 16 Sep 2020 11:42:08 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161142/</guid>
      <description>create a new file touch readme.txt # or  &amp;gt; &amp;#39;readme.txt&amp;#39; create a new directory mkdir documents mkdir -p docments Copy readme.txt to the documents/ directory cp readme.txt documents duplicate a file cp readme.txt readme.bak.txt cp readme{,.bak}.txt # Note: learn how the {} works with touch foo{1,2,3}.txt and see what happens. copy a direcatory cp -a myMusic myMedia/ # or cp -a myMusic myMedia/myMusic duplicate a directory cp -a myMusic/ myMedia/ # or cp -a myMusic myMedia/ move a file mv readme.</description>
    </item>
    
    <item>
      <title>Php Remote Procedure</title>
      <link>https://note.strawbreey.com/posts/202009161111/</link>
      <pubDate>Wed, 16 Sep 2020 11:11:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161111/</guid>
      <description>php 请求远程 php请求远程url有两个方法fopen/file_get_contents 和 curl 1，fopen/file_get_contents</description>
    </item>
    
    <item>
      <title>Rpc and Http</title>
      <link>https://note.strawbreey.com/posts/202009161039/</link>
      <pubDate>Wed, 16 Sep 2020 10:39:40 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009161039/</guid>
      <description>rpc 标准化 为了允许不同的客户端均能访问服务器，许多标准化的 RPC 系统应运而生了。其中大部分采用IDL(Interface Description Language)，方便</description>
    </item>
    
    <item>
      <title>Yii Run Applications</title>
      <link>https://note.strawbreey.com/posts/202009151522/</link>
      <pubDate>Tue, 15 Sep 2020 15:22:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151522/</guid>
      <description>应用结构 basic/ 应用根目录 composer.json Composer 配置文件, 描述包信息 config/ 包含应用配置及其它配置 console.php 控制台应用配置信息应用配置信息配置信息 web.php Web 应用配置信息配置信息 commands/ 包含控</description>
    </item>
    
    <item>
      <title>Javascript Prototype Apply</title>
      <link>https://note.strawbreey.com/posts/202009151439/</link>
      <pubDate>Tue, 15 Sep 2020 14:39:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151439/</guid>
      <description>The apply() method calls a function with a given this value, and arguments provided as an array (or an array-like object). apply() 方法调用一个具有给定this值的函数，以及以一个数组（或类数组对象）的形式提供的参数。 const numbers = [5, 6,</description>
    </item>
    
    <item>
      <title>What Happens When You Open Website</title>
      <link>https://note.strawbreey.com/posts/202009151141/</link>
      <pubDate>Tue, 15 Sep 2020 11:41:59 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151141/</guid>
      <description>url =&amp;gt; host -&amp;gt; ip -&amp;gt; nginx -&amp;gt; php url =&amp;gt; host -&amp;gt; ip -&amp;gt; nginx -&amp;gt; html url =&amp;gt; host -&amp;gt; ip -&amp;gt; nginx -&amp;gt; img </description>
    </item>
    
    <item>
      <title>Nginx Try Files</title>
      <link>https://note.strawbreey.com/posts/202009151129/</link>
      <pubDate>Tue, 15 Sep 2020 11:29:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151129/</guid>
      <description>基本配置 Nginx的配置语法灵活，可控制度非常高。在0.7以后的版本中加入了一个try_files指令，配合命名location，可以部分替</description>
    </item>
    
    <item>
      <title>Auth</title>
      <link>https://note.strawbreey.com/posts/202009151045/</link>
      <pubDate>Tue, 15 Sep 2020 10:45:56 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151045/</guid>
      <description>前后端中常用的鉴权方式有四种 HTTP Basic Authentication session-cookie Token 验证 OAuth(开发授权) HTTP Basic Authentication 客户端向服务器请求数据，请求的内容可能是一个网页或者是一个ajax异步</description>
    </item>
    
    <item>
      <title>Netty</title>
      <link>https://note.strawbreey.com/posts/202009151029/</link>
      <pubDate>Tue, 15 Sep 2020 10:29:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009151029/</guid>
      <description>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients. Netty 是一个利用 Java 的高级网络的能力，隐藏其背后的复杂性而提供一个易于使用的 API 的客户端/服务器框架。 todo: References netty/netty netty</description>
    </item>
    
    <item>
      <title>Remote Procedure Call</title>
      <link>https://note.strawbreey.com/posts/202009150940/</link>
      <pubDate>Tue, 15 Sep 2020 09:40:57 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009150940/</guid>
      <description>在分布式计算(distributed computing)，远程请求（英語：Remote Procedure Call，縮寫為 RPC）是一个计算机通信协议。该协议</description>
    </item>
    
    <item>
      <title>Angular Directive</title>
      <link>https://note.strawbreey.com/posts/202009141631/</link>
      <pubDate>Mon, 14 Sep 2020 16:31:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009141631/</guid>
      <description>概述 angular 中有三种指令类型 组件 拥有模板的指令 结构型指令 通过添加和删除DOM元素改变DOM布局的指令 如: ngFor, Ngif 属性型指令 改变元素,组件外观或者行为的</description>
    </item>
    
    <item>
      <title>Reactive Forms</title>
      <link>https://note.strawbreey.com/posts/202009141533/</link>
      <pubDate>Mon, 14 Sep 2020 15:33:34 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009141533/</guid>
      <description>响应式表单提供了一种模型驱动的方式来处理表单输入，其中的值会随时间而变化。 响应式表单和模板驱动表单的区别 响应式表单和模板驱动表单以不同的方式</description>
    </item>
    
    <item>
      <title>Elasticsearch</title>
      <link>https://note.strawbreey.com/posts/202009141009/</link>
      <pubDate>Mon, 14 Sep 2020 10:09:20 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009141009/</guid>
      <description>全文搜索属于最常见的需求，开源的 Elasticsearch （以下简称 Elastic）是目前全文搜索引擎的首选。它可以快速地储存、搜索和分析海量数据。维基百科、Sta</description>
    </item>
    
    <item>
      <title>Redis Cache</title>
      <link>https://note.strawbreey.com/posts/202009141000/</link>
      <pubDate>Mon, 14 Sep 2020 10:00:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009141000/</guid>
      <description>todo: redis cache 缓存穿透 缓存雪崩 《Redis 设计与实现》</description>
    </item>
    
    <item>
      <title>Js Array Index</title>
      <link>https://note.strawbreey.com/posts/202009111954/</link>
      <pubDate>Fri, 11 Sep 2020 19:54:40 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009111954/</guid>
      <description>JS 中数组字符串索引和数值索引研究 Javascript的数组其实不像PHP或者其他一些语言一样拥有真正的字符串下标，当我们试图为一个js数组添</description>
    </item>
    
    <item>
      <title>Sql</title>
      <link>https://note.strawbreey.com/posts/202009101647/</link>
      <pubDate>Thu, 10 Sep 2020 16:47:25 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009101647/</guid>
      <description>数据库 数据库是一以某种方式存储的数据集合 选择数据库 crashcourse use crashcourse; 查看数据库信息 show DATABASES; // 返回可用数据库的列表， 数据库、表、列、用户、权限等的信息 显示数据</description>
    </item>
    
    <item>
      <title>Linux Install Mysql</title>
      <link>https://note.strawbreey.com/posts/202009101038/</link>
      <pubDate>Thu, 10 Sep 2020 10:38:04 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009101038/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dont Need Lodash</title>
      <link>https://note.strawbreey.com/posts/202009091026/</link>
      <pubDate>Wed, 09 Sep 2020 10:26:37 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009091026/</guid>
      <description>Lodash and Underscore are great modern JavaScript utility libraries, and they are widely used by Front-end developers. However, when you are targeting modern browsers, you may find out that there are many methods which are already supported natively thanks to ECMAScript5 [ES5] and ECMAScript2015 [ES6]. If you want your project to require fewer dependencies, and you know your target browser clearly, then you may not need Lodash/Underscore. Quick Links Array</description>
    </item>
    
    <item>
      <title>Nginx Install</title>
      <link>https://note.strawbreey.com/posts/202009081732/</link>
      <pubDate>Tue, 08 Sep 2020 17:32:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009081732/</guid>
      <description>nginx [engine x] is an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server, originally written by Igor Sysoev. For a long time, it has been running on many heavily loaded Russian sites including Yandex, Mail.Ru, VK, and Rambler. According to Netcraft, nginx served or proxied 25.75% busiest sites in August 2020. Here are some of the success stories: Dropbox, Netflix, Wordpress.com, FastMail.FM. 安</description>
    </item>
    
    <item>
      <title>Mysql Character</title>
      <link>https://note.strawbreey.com/posts/202009081608/</link>
      <pubDate>Tue, 08 Sep 2020 16:08:54 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009081608/</guid>
      <description>mysql 字符集选择 对数据库来说，字符集更加重要，因为数据库存储的数据大部分都是各种文字，字符集对数据库的存储，处理性能，以及日后系统的移植，推广都</description>
    </item>
    
    <item>
      <title>Dependency Injection</title>
      <link>https://note.strawbreey.com/posts/202009081519/</link>
      <pubDate>Tue, 08 Sep 2020 15:19:09 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009081519/</guid>
      <description>依赖注入 In software engineering, dependency injection is a technique in which an object receives other objects that it depends on. These other objects are called dependencies. In the typical &amp;ldquo;using&amp;rdquo; relationship the receiving object is called a client and the passed (that is, &amp;ldquo;injected&amp;rdquo;) object is called a service. The code that passes the service to the client can be many kinds of things and is called</description>
    </item>
    
    <item>
      <title>Php Fpm</title>
      <link>https://note.strawbreey.com/posts/202009071725/</link>
      <pubDate>Mon, 07 Sep 2020 17:25:15 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009071725/</guid>
      <description>PHP-FPM是一个PHP的PHPFastCGI管理器。 PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载P</description>
    </item>
    
    <item>
      <title>Js Closure</title>
      <link>https://note.strawbreey.com/posts/202009071702/</link>
      <pubDate>Mon, 07 Sep 2020 17:02:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009071702/</guid>
      <description>函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起构成闭包（closure）。也就是说，闭包可以让你从内部</description>
    </item>
    
    <item>
      <title>Git Workflow</title>
      <link>https://note.strawbreey.com/posts/202009071549/</link>
      <pubDate>Mon, 07 Sep 2020 15:49:49 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009071549/</guid>
      <description>Git 作为一个源码管理系统，不可避免涉及到多人协作。 协作必须有一个规范的工作流程，让大家有效地合作，使得项目井井有条地发展下去。&amp;ldquo;工</description>
    </item>
    
    <item>
      <title>Debounce and Throttle</title>
      <link>https://note.strawbreey.com/posts/202009071451/</link>
      <pubDate>Mon, 07 Sep 2020 14:51:32 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009071451/</guid>
      <description>防抖 根据一个选择器函数，舍弃掉在两次输出之间小于指定时间的发出值。 实现方式：每次触发事件时设置一个延迟调用方法，并且取消之前的延时调用方法 缺</description>
    </item>
    
    <item>
      <title>Go Interview</title>
      <link>https://note.strawbreey.com/posts/202009031618/</link>
      <pubDate>Thu, 03 Sep 2020 16:18:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031618/</guid>
      <description>func main(){ s := []int{5} fmt.Println(len(s), cap(s)) s = append(s, 7) fmt.Println(len(s), cap(s)) s = append(s, 9) fmt.Println(len(s), cap(s)) x := append(s, 11) fmt.Println(len(s), cap(s)) y := append(s, 12) fmt.Println(len(s), cap(s)) fmt.Println(s, x, y) // 输出结果 [5 7 9] [5 7 9 12] [5 7 9 12] s := []int{5, 7, 9} x := append(s, 11) y := append(s, 12) fmt.Println(s,x,y) // 输出结果 [5</description>
    </item>
    
    <item>
      <title>Go Slice</title>
      <link>https://note.strawbreey.com/posts/202009031542/</link>
      <pubDate>Thu, 03 Sep 2020 15:42:47 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031542/</guid>
      <description>Go 语言切片是对数组的抽象。 Go 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型切片(&amp;ldquo</description>
    </item>
    
    <item>
      <title>Go Start</title>
      <link>https://note.strawbreey.com/posts/202009031517/</link>
      <pubDate>Thu, 03 Sep 2020 15:17:10 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031517/</guid>
      <description>go command ( go 常用命令) Usage: go &amp;lt;command&amp;gt; [arguments] The commands are: bug start a bug report build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get add dependencies to current module</description>
    </item>
    
    <item>
      <title>WebAssembly</title>
      <link>https://note.strawbreey.com/posts/202009031457/</link>
      <pubDate>Thu, 03 Sep 2020 14:57:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031457/</guid>
      <description>WebAssembly WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications. Efficient and fast Safe Open and debuggable Part of the open web platform Start $ git clone https://github.com/juj/emsdk.git $ cd emsdk $ ./emsdk install sdk-incoming-64bit binaryen-master-64bit $ ./emsdk activate sdk-incoming-64bit binaryen-master-64bit $ source ./emsdk_env.sh 如</description>
    </item>
    
    <item>
      <title>Angular Service</title>
      <link>https://note.strawbreey.com/posts/202009031049/</link>
      <pubDate>Thu, 03 Sep 2020 10:49:58 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031049/</guid>
      <description>Why services Components shouldn&amp;rsquo;t fetch or save data directly and they certainly shouldn&amp;rsquo;t knowingly present fake data. They should focus on presenting data and delegate data access to a service.
services are a great way to share information among classes that don&amp;rsquo;t know each other.
 hile you could call getHeroes() in the constructor, that&amp;rsquo;s not the best practice.
Reserve the constructor for simple initialization such as wiring constructor parameters to properties.</description>
    </item>
    
    <item>
      <title>Css Interivew Repaint and Refolw</title>
      <link>https://note.strawbreey.com/posts/202009031048/</link>
      <pubDate>Thu, 03 Sep 2020 10:48:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031048/</guid>
      <description>重绘与回流(repaint-and-refolw) 从上面这个图上，我们可以看到，浏览器渲染过程如下： 解析HTML，生成DOM树 解析CSS，生</description>
    </item>
    
    <item>
      <title>Css Interview BFC</title>
      <link>https://note.strawbreey.com/posts/202009031002/</link>
      <pubDate>Thu, 03 Sep 2020 10:02:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009031002/</guid>
      <description>Describe BFC (Block Formatting Context) and how it works. BFC(Block formatting context) 块级格式化上下文 A block formatting context is a part of a visual CSS rendering of a web page. It&amp;rsquo;s the region in which the layout of block boxes occurs and in which floats interact with other elements. BFC是Web页面的CSS渲染</description>
    </item>
    
    <item>
      <title>Mysql Command</title>
      <link>https://note.strawbreey.com/posts/202009011619/</link>
      <pubDate>Tue, 01 Sep 2020 16:19:22 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009011619/</guid>
      <description>Can&amp;#39;t connect to local MySQL server through socket &amp;#39;/var/lib/mysql/mysql.sock&amp;#39; 导出数据 mysqldump -u root -p ieg_waibao_test &amp;gt; test_db.sql; 登录mysql mysql -u root -p mysql -h 服务器ip地址 -P 3306 -u root -p</description>
    </item>
    
    <item>
      <title>Go Types</title>
      <link>https://note.strawbreey.com/posts/202009011120/</link>
      <pubDate>Tue, 01 Sep 2020 11:20:46 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009011120/</guid>
      <description>Go 数据类型 布尔类型 boolean 数字类型 int float32 float64 字符串类型 string 派生类型</description>
    </item>
    
    <item>
      <title>Linux Install Php</title>
      <link>https://note.strawbreey.com/posts/202009011010/</link>
      <pubDate>Tue, 01 Sep 2020 10:10:41 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202009011010/</guid>
      <description>linux 常用命令 格式：tar zcvf 压缩后的路径及包名 你要压缩的文件 z: gzip压缩 c: 创建压缩包 v: 显示打包压缩解压过程 f: 接着压缩 t: 查看压缩包内容 x: 解压 X: 指</description>
    </item>
    
    <item>
      <title>Git Common Commands</title>
      <link>https://note.strawbreey.com/posts/202008311539/</link>
      <pubDate>Mon, 31 Aug 2020 15:39:29 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311539/</guid>
      <description>Git不需要输入用户名密码的两种方式 采用ssh连接方式: 将自己主机的id_ras.pub 加到git 的ssh Keys 中 采用https的连接方式: git config</description>
    </item>
    
    <item>
      <title>Git Undo</title>
      <link>https://note.strawbreey.com/posts/202008311511/</link>
      <pubDate>Mon, 31 Aug 2020 15:11:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311511/</guid>
      <description>删除commit提交记录 # Checkout git checkout --orphan latest_branch; # Add all the files git add -A # Commit the changes git commit -am &amp;#34;Reinitialize&amp;#34; # Delete the branch git branch -D master # Rename the current branch to master git branch -m master # Finally, force update your repository git push -f origin master # git push --set-upstream origin master</description>
    </item>
    
    <item>
      <title>Linux Permissions</title>
      <link>https://note.strawbreey.com/posts/202008311117/</link>
      <pubDate>Mon, 31 Aug 2020 11:17:11 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311117/</guid>
      <description>Linux 文件属性 查看文件 ls -al # 查看当前文件夹中文件的所有信息 [root@www ~]# ls -al total 156 drwxr-x--- 4 root root 4096 Sep 8 14:06 . drwxr-xr-x 23 root root 4096 Sep 8 14:21 .. -rw------- 1 root root 1474 Sep 4 18:27 anaconda-ks.cfg -rw------- 1 root root 199 Sep 8 17:14 .bash_history -rw-r--r--</description>
    </item>
    
    <item>
      <title>Common Commands</title>
      <link>https://note.strawbreey.com/posts/202008311036/</link>
      <pubDate>Mon, 31 Aug 2020 10:36:43 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311036/</guid>
      <description>linux common command # 测试镜像是否有用 nslookup mirrors.tencent.com rpm -Uvh https://mirrors.tencent.com/tlinux/rpm/tlinux-release-2-11.tl2.x86_64.rpm # 下载php wget php-7.2.15.tar.bz2 http://cn2.php.net/distributions/php-7.2.15.tar.bz2 # 安装 yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm rpm -Uvh https://mirrors.tencent.com/tlinux/rpm/epel-release-6-12.tl1.noarch.rpm # linux cp 复制 sudo cp /opt/soft/php/sbin/php-fpm /usr/local/bin/ sudo php-fpm # linux 杀死进程 kill -INT cat /usr/local/php/var/run/php-fpm.pid # linux 安装 yum -y install gcc openssl openssl-devel curl curl-devel libjpeg libjpeg-devel</description>
    </item>
    
    <item>
      <title>Git Submodule</title>
      <link>https://note.strawbreey.com/posts/202008311020/</link>
      <pubDate>Mon, 31 Aug 2020 10:20:39 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311020/</guid>
      <description>echo &amp;#34;Deleting old publication&amp;#34; rm -rf public mkdir public git worktree prune rm -rf .git/worktrees/public/ echo &amp;#34;Checking out gh-pages branch into public&amp;#34; git worktree add -B gh-pages public upstream/gh-pages echo &amp;#34;Removing existing files&amp;#34; rm -rf public/* echo &amp;#34;Generating site&amp;#34; hugo echo &amp;#34;Updating gh-pages branch&amp;#34; cd public &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m &amp;#34;Publishing to gh-pages (publish.sh)&amp;#34; Git 本身不支持对某一特定文</description>
    </item>
    
    <item>
      <title>Hugo Start</title>
      <link>https://note.strawbreey.com/posts/202008311015/</link>
      <pubDate>Mon, 31 Aug 2020 10:15:27 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008311015/</guid>
      <description>start Install Hugo # macOS install  brew intall hugo hugo version Create a New Site hugo new site quickStart Add a Theme cd quickstart git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke Add Some Content hugo new posts/new-content.md Start the Hugo server hugo serve -D Build Static pages hugo -D </description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://note.strawbreey.com/posts/202008281929/</link>
      <pubDate>Fri, 28 Aug 2020 19:29:52 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008281929/</guid>
      <description>create a new repository on the command line git init git add README.md git commit -m &amp;quot;first commit&amp;quot; git branch -M master git remote add origin https://github.com/strawbreey/notes.git git push -u origin master push an existing repository from the command line git remote add origin https://github.com/strawbreey/notes.git git branch -M master git push -u origin master create gh-pages branch git checkout --orphan gh-pages git reset --hard git commit --allow-empty -m &amp;#34;Initializing gh-pages</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://note.strawbreey.com/posts/202008281918/</link>
      <pubDate>Fri, 28 Aug 2020 19:18:18 +0800</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/202008281918/</guid>
      <description>创建文章 创建一个hugo页面 hugo new hugo.md 内容是 Markdown 格式的，+++ 之间的内容是 TOML 格式的，根据你的喜好，你可以换成 YAML 格式（使用 &amp;mdash; 标记）或者 JSON 格式。 安装皮</description>
    </item>
    
    <item>
      <title></title>
      <link>https://note.strawbreey.com/posts/101010000/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/101010000/</guid>
      <description>swagg&amp;mdash; title: &amp;ldquo;Go Strconv&amp;rdquo; date: 2020-12-01T23:51:14+08:00 draft: false </description>
    </item>
    
    <item>
      <title></title>
      <link>https://note.strawbreey.com/posts/101010000/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/101010000/</guid>
      <description>https://github.com/mission-peace/interview</description>
    </item>
    
    <item>
      <title></title>
      <link>https://note.strawbreey.com/posts/101010000/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>strawbreey@qq.com (strawbreey)</author>
      <guid>https://note.strawbreey.com/posts/101010000/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
